Microsoft (R) Macro Assembler Version 14.42.34433.0	    12/15/24 16:32:13
code.asm						     Page 1 - 1


				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				INCLUDE Macros.inc
			      C .NOLIST
			      C .LIST
			      C 
 = 00001388			BUFFER_SIZE = 5000
				;Ap ky functions hai 
				;1.Quick cash 
				;2.withdrawal cash
				;3.deposit cash
				;4.transfer amount

 00000000			.DATA
 00000000 0000 0000 0000	    localTime SYSTEMTIME <>
	   0000 0000 0000
	   0000 0000
 = 000000E0			    WhiteTextOnBlue = black + (yellow * 16)

 00000010 00000000		    choice DD ?

 00000014 00000000		    admin_choice DWORD ?
 00000018 00000000		    UserOption DWORD ?

 0000001C  00001388 [		    buffer BYTE BUFFER_SIZE DUP(?)
	    00
	   ]
 000013A4 44 65 73 69 67	    filename BYTE "Designing.txt", 0
	   6E 69 6E 67 2E
	   74 78 74 00
 000013B2 00000000		    fileHandle HANDLE ?

 000013B6  00000014 [		    password BYTE 20 DUP(?)
	    00
	   ]
 000013CA  00000014 [		    username BYTE 20 DUP(?)
	    00
	   ]

 000013DE 61 64 6D 69 6E	    AdminUser BYTE "admin", 0
	   00
 000013E4 31 32 33 34 00	    AdminPassword BYTE "1234", 0
 000013E9 00000000		    AdminLogChoice DD ?

 000013ED  00000014 [		    HolderPassword BYTE 20 DUP(?)
	    00
	   ]
 00001401  00000014 [		    HolderUsername BYTE 20 DUP(?)
	    00
	   ]

 00001415 32 33 30 32 31	    StoredAccountID BYTE "23021519000", 0
	   35 31 39 30 30
	   30 00
 00001421 31 32 33 34 00	    StoredPIN BYTE "1234", 0
 00001426 55 73 65 72 00	    StoredHolderName BYTE "User", 0
 0000142B 33 35 31 30 31	    StoredCNIC BYTE "35101-0000000-1", 0
	   2D 30 30 30 30
	   30 30 30 2D 31
	   00
 0000143B 30 33 30 30 2D	    StoredNO BYTE "0300-1122334", 0
	   31 31 32 32 33
	   33 34 00
 00001448 47 75 6A 72 61	    StoredCity BYTE "Gujranwala"
	   6E 77 61 6C 61
 00001452 75 73 65 72 40	    StoredMail BYTE "user@example.com", 0
	   65 78 61 6D 70
	   6C 65 2E 63 6F
	   6D 00
 00001463 4D 00			    gender BYTE "M", 0
 00001465 000007D0		    StoredAmount        DWORD 2000, 

 00001469 00000000		    HolderLogChoice DD ?
				    
 0000146D 00000000		    fcash DWORD ?
 00001471 00000000		    fcashChoice DWORD ?

 00001475 00000000		    wdcash DWORD ?
 00001479 00000000		    wdcashChoice DWORD ?

 0000147D 00000000		    depositAmount DWORD ?
 00001481 00000000		    TransferMoney DWORD ?
 00001485 00000000		    GenerateBalance DWORD 0


 00000000			.CODE

 00000000			AddColor PROC
 00000000  B8 000000E0		    MOV EAX, WhiteTextOnBlue
 00000005  E8 00000000 E	    CALL SetTextColor
 0000000A  E8 00000000 E	    CALL CLRSCR
 0000000F  C3			    RET
 00000010			AddColor ENDP


 00000010			Time PROC
				    INVOKE GetLocalTime, ADDR localTime
 00000010  68 00000000 R   *	    push   OFFSET localTime
 00000015  E8 00000000 E   *	    call   GetLocalTime
 0000001A  0F B7 05		    movzx EAX, localTime.wHour
	   00000008 R
 00000021  E8 00000000 E	    CALL WriteDec
				    mWrite ":"
 00001489		     1		.data		
 00001489 3A 00		     1		??0000 BYTE ":",0	
 00000026		     1		.code
 00000026  52		     1		push	edx
 00000027  BA 00001489 R     1		mov	edx,OFFSET ??0000
 0000002C  E8 00000000 E     1		call	WriteString
 00000031  5A		     1		pop	edx
 00000032  0F B7 05		    movzx EAX, localTime.wMinute
	   0000000A R
 00000039  E8 00000000 E	    CALL WriteDec
				    mWrite ":"
 0000148B		     1		.data		
 0000148B 3A 00		     1		??0001 BYTE ":",0	
 0000003E		     1		.code
 0000003E  52		     1		push	edx
 0000003F  BA 0000148B R     1		mov	edx,OFFSET ??0001
 00000044  E8 00000000 E     1		call	WriteString
 00000049  5A		     1		pop	edx
 0000004A  0F B7 05		    movzx EAX, localTime.wSecond
	   0000000C R
 00000051  E8 00000000 E	    CALL WriteDec
					mWrite "                                                                       "
 0000148D		     1		.data		
 0000148D 20 20 20 20 20     1		??0002 BYTE "                                                                       ",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 00
 00000056		     1		.code
 00000056  52		     1		push	edx
 00000057  BA 0000148D R     1		mov	edx,OFFSET ??0002
 0000005C  E8 00000000 E     1		call	WriteString
 00000061  5A		     1		pop	edx
 00000062  0F B7 05		    movzx EAX, localTime.wDay
	   00000006 R
 00000069  E8 00000000 E	    CALL WriteDec
				    mWrite "/"
 000014D5		     1		.data		
 000014D5 2F 00		     1		??0003 BYTE "/",0	
 0000006E		     1		.code
 0000006E  52		     1		push	edx
 0000006F  BA 000014D5 R     1		mov	edx,OFFSET ??0003
 00000074  E8 00000000 E     1		call	WriteString
 00000079  5A		     1		pop	edx
 0000007A  0F B7 05		    movzx EAX, localTime.wMonth
	   00000002 R
 00000081  E8 00000000 E	    CALL WriteDec
				    mWrite "/"
 000014D7		     1		.data		
 000014D7 2F 00		     1		??0004 BYTE "/",0	
 00000086		     1		.code
 00000086  52		     1		push	edx
 00000087  BA 000014D7 R     1		mov	edx,OFFSET ??0004
 0000008C  E8 00000000 E     1		call	WriteString
 00000091  5A		     1		pop	edx
 00000092  0F B7 05		    movzx EAX, localTime.wYear
	   00000000 R
 00000099  E8 00000000 E	    CALL WriteDec
 0000009E  E8 00000000 E		CALL CRLF
 000000A3  E8 00000000 E	    CALL CRLF
 000000A8  C3			    RET
 000000A9			Time ENDP


 000000A9			Design PROC
					; Open the file for input.
 000000A9  BA 000013A4 R		MOV EDX,OFFSET filename
 000000AE  E8 00000000 E		CALL OpenInputFile
 000000B3  A3 000013B2 R		MOV fileHandle,EAX
					; Check for errors.
 000000B8  83 F8 FF			CMP EAX,INVALID_HANDLE_VALUE ; error opening file?
 000000BB  75 0E			jne file_ok ; no: skip
					mWrite <"Cannot open file",0dh,0ah>
 000014D9		     1		.data		
 000014D9 43 61 6E 6E 6F     1		??0005 BYTE "Cannot open file",0dh,0ah,0	
	   74 20 6F 70 65
	   6E 20 66 69 6C
	   65 0D 0A 00
 000000BD		     1		.code
 000000BD  52		     1		push	edx
 000000BE  BA 000014D9 R     1		mov	edx,OFFSET ??0005
 000000C3  E8 00000000 E     1		call	WriteString
 000000C8  5A		     1		pop	edx
 000000C9  EB 65			JMP quit ; and quit
 000000CB				file_ok:
					; Read the file into a buffer.
 000000CB  BA 0000001C R		MOV EDX,OFFSET buffer
 000000D0  B9 00001388			MOV ECX,BUFFER_SIZE
 000000D5  E8 00000000 E		CALL ReadFromFile
 000000DA  73 13			jnc check_buffer_size ; error reading?
					mWrite "Error reading file. " ; yes: show error message
 000014EC		     1		.data		
 000014EC 45 72 72 6F 72     1		??0006 BYTE "Error reading file. ",0	
	   20 72 65 61 64
	   69 6E 67 20 66
	   69 6C 65 2E 20
	   00
 000000DC		     1		.code
 000000DC  52		     1		push	edx
 000000DD  BA 000014EC R     1		mov	edx,OFFSET ??0006
 000000E2  E8 00000000 E     1		call	WriteString
 000000E7  5A		     1		pop	edx
 000000E8  E8 00000000 E		CALL WriteWindowsMsg
 000000ED  EB 37			JMP close_file
 000000EF				check_buffer_size:
 000000EF  3D 00001388			CMP EAX,BUFFER_SIZE ; buffer large enough?
 000000F4  72 0E			jb buf_size_ok ; yes
					mWrite <"Error: Buffer too small for the file",0dh,0ah>
 00001501		     1		.data		
 00001501 45 72 72 6F 72     1		??0007 BYTE "Error: Buffer too small for the file",0dh,0ah,0	
	   3A 20 42 75 66
	   66 65 72 20 74
	   6F 6F 20 73 6D
	   61 6C 6C 20 66
	   6F 72 20 74 68
	   65 20 66 69 6C
	   65 0D 0A 00
 000000F6		     1		.code
 000000F6  52		     1		push	edx
 000000F7  BA 00001501 R     1		mov	edx,OFFSET ??0007
 000000FC  E8 00000000 E     1		call	WriteString
 00000101  5A		     1		pop	edx
 00000102  EB 2C			JMP quit ; and quit
 00000104				buf_size_ok:
 00000104  C6 80 0000001C R		MOV buffer[EAX],0 ; insert null terminator
	   00
					;mWrite "File size: "
					;CALL WriteDec ; display file size
					; Display the buffer.
					mWrite <0dh,0ah,0dh,0ah>
 00001528		     1		.data		
 00001528 0D 0A 0D 0A 00     1		??0008 BYTE 0dh,0ah,0dh,0ah,0	
 0000010B		     1		.code
 0000010B  52		     1		push	edx
 0000010C  BA 00001528 R     1		mov	edx,OFFSET ??0008
 00000111  E8 00000000 E     1		call	WriteString
 00000116  5A		     1		pop	edx
 00000117  BA 0000001C R		MOV EDX,OFFSET buffer ; display the buffer
 0000011C  E8 00000000 E		CALL WriteString
 00000121  E8 00000000 E		CALL CRLF
 00000126				close_file:
 00000126  A1 000013B2 R		MOV EAX,fileHandle
 0000012B  E8 00000000 E		CALL CloseFile
 00000130			quit:
 00000130  E8 00000000 E	    CALL CRLF
 00000135  C3				RET
 00000136			Design ENDP

 00000136			FrontPage PROC
 00000136  E8 00000000 E	   CALL CRLF
 0000013B  E8 00000000 E	   CALL CRLF
				   mWrite "                    UNIVERSITY OF GUJRAT, HAFIZ HAYAT CAMPUS"
 0000152D		     1		.data		
 0000152D 20 20 20 20 20     1		??0009 BYTE "                    UNIVERSITY OF GUJRAT, HAFIZ HAYAT CAMPUS",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   55 4E 49 56 45
	   52 53 49 54 59
	   20 4F 46 20 47
	   55 4A 52 41 54
	   2C 20 48 41 46
	   49 5A 20 48 41
	   59 41 54 20 43
	   41 4D 50 55 53
	   00
 00000140		     1		.code
 00000140  52		     1		push	edx
 00000141  BA 0000152D R     1		mov	edx,OFFSET ??0009
 00000146  E8 00000000 E     1		call	WriteString
 0000014B  5A		     1		pop	edx
 0000014C  E8 00000000 E	   CALL CRLF
				   mWrite "                               Sec(A) BSCS III"
 0000156A		     1		.data		
 0000156A 20 20 20 20 20     1		??000A BYTE "                               Sec(A) BSCS III",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 53 65 63 28
	   41 29 20 42 53
	   43 53 20 49 49
	   49 00
 00000151		     1		.code
 00000151  52		     1		push	edx
 00000152  BA 0000156A R     1		mov	edx,OFFSET ??000A
 00000157  E8 00000000 E     1		call	WriteString
 0000015C  5A		     1		pop	edx
 0000015D  E8 00000000 E	   CALL CRLF
 00000162  E8 00000000 E	   CALL CRLF
 00000167  E8 00000000 E	   CALL CRLF
				   mWrite "                 COMPUTER ORGANIZATION & ASSEMBLY LANGUAGE : CS(255)"
 00001599		     1		.data		
 00001599 20 20 20 20 20     1		??000B BYTE "                 COMPUTER ORGANIZATION & ASSEMBLY LANGUAGE : CS(255)",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 43 4F 4D
	   50 55 54 45 52
	   20 4F 52 47 41
	   4E 49 5A 41 54
	   49 4F 4E 20 26
	   20 41 53 53 45
	   4D 42 4C 59 20
	   4C 41 4E 47 55
	   41 47 45 20 3A
	   20 43 53 28 32
	   35 35 29 00
 0000016C		     1		.code
 0000016C  52		     1		push	edx
 0000016D  BA 00001599 R     1		mov	edx,OFFSET ??000B
 00000172  E8 00000000 E     1		call	WriteString
 00000177  5A		     1		pop	edx
 00000178  E8 00000000 E	   CALL CRLF
 0000017D  E8 00000000 E	   CALL CRLF
 00000182  E8 00000000 E	   CALL CRLF
				   mWrite "                      MINI-PROJECT  : ATM BANK SIMULATOR"
 000015DE		     1		.data		
 000015DE 20 20 20 20 20     1		??000C BYTE "                      MINI-PROJECT  : ATM BANK SIMULATOR",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 4D 49 4E
	   49 2D 50 52 4F
	   4A 45 43 54 20
	   20 3A 20 41 54
	   4D 20 42 41 4E
	   4B 20 53 49 4D
	   55 4C 41 54 4F
	   52 00
 00000187		     1		.code
 00000187  52		     1		push	edx
 00000188  BA 000015DE R     1		mov	edx,OFFSET ??000C
 0000018D  E8 00000000 E     1		call	WriteString
 00000192  5A		     1		pop	edx
 00000193  E8 00000000 E	   CALL CRLF
 00000198  E8 00000000 E	   CALL CRLF
				   mWrite "                              Batch : 22TH"
 00001617		     1		.data		
 00001617 20 20 20 20 20     1		??000D BYTE "                              Batch : 22TH",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   42 61 74 63 68
	   20 3A 20 32 32
	   54 48 00
 0000019D		     1		.code
 0000019D  52		     1		push	edx
 0000019E  BA 00001617 R     1		mov	edx,OFFSET ??000D
 000001A3  E8 00000000 E     1		call	WriteString
 000001A8  5A		     1		pop	edx
 000001A9  E8 00000000 E	   CALL CRLF
 000001AE  E8 00000000 E	   CALL CRLF
 000001B3  E8 00000000 E	   CALL CRLF
 000001B8  E8 00000000 E	   CALL CRLF
 000001BD  E8 00000000 E	   CALL CRLF
				   mWrite "                      DevelopedBy : "
 00001642		     1		.data		
 00001642 20 20 20 20 20     1		??000E BYTE "                      DevelopedBy : ",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 44 65 76
	   65 6C 6F 70 65
	   64 42 79 20 3A
	   20 00
 000001C2		     1		.code
 000001C2  52		     1		push	edx
 000001C3  BA 00001642 R     1		mov	edx,OFFSET ??000E
 000001C8  E8 00000000 E     1		call	WriteString
 000001CD  5A		     1		pop	edx
 000001CE  E8 00000000 E	   CALL CRLF
 000001D3  E8 00000000 E	   CALL CRLF
				   mWrite "                     M Talha Khalid : 23021519-005"
 00001667		     1		.data		
 00001667 20 20 20 20 20     1		??000F BYTE "                     M Talha Khalid : 23021519-005",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 4D 20 54 61
	   6C 68 61 20 4B
	   68 61 6C 69 64
	   20 3A 20 32 33
	   30 32 31 35 31
	   39 2D 30 30 35
	   00
 000001D8		     1		.code
 000001D8  52		     1		push	edx
 000001D9  BA 00001667 R     1		mov	edx,OFFSET ??000F
 000001DE  E8 00000000 E     1		call	WriteString
 000001E3  5A		     1		pop	edx
 000001E4  E8 00000000 E	   CALL CRLF
 000001E9  E8 00000000 E	   CALL CRLF
				   mWrite "                        Hamza Nazir :23021519-111"
 0000169A		     1		.data		
 0000169A 20 20 20 20 20     1		??0010 BYTE "                        Hamza Nazir :23021519-111",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 48
	   61 6D 7A 61 20
	   4E 61 7A 69 72
	   20 3A 32 33 30
	   32 31 35 31 39
	   2D 31 31 31 00
 000001EE		     1		.code
 000001EE  52		     1		push	edx
 000001EF  BA 0000169A R     1		mov	edx,OFFSET ??0010
 000001F4  E8 00000000 E     1		call	WriteString
 000001F9  5A		     1		pop	edx
 000001FA  E8 00000000 E	   CALL CRLF
 000001FF  E8 00000000 E	   CALL CRLF
				   mWrite "                         Zulqarnain Riaz :23021519-138"
 000016CC		     1		.data		
 000016CC 20 20 20 20 20     1		??0011 BYTE "                         Zulqarnain Riaz :23021519-138",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   5A 75 6C 71 61
	   72 6E 61 69 6E
	   20 52 69 61 7A
	   20 3A 32 33 30
	   32 31 35 31 39
	   2D 31 33 38 00
 00000204		     1		.code
 00000204  52		     1		push	edx
 00000205  BA 000016CC R     1		mov	edx,OFFSET ??0011
 0000020A  E8 00000000 E     1		call	WriteString
 0000020F  5A		     1		pop	edx
 00000210  E8 00000000 E	   CALL CRLF
 00000215  E8 00000000 E	   CALL CRLF
				   mWrite "                     M Khushnood rehman :23021519-170"
 00001703		     1		.data		
 00001703 20 20 20 20 20     1		??0012 BYTE "                     M Khushnood rehman :23021519-170",0	
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 4D 20 4B 68
	   75 73 68 6E 6F
	   6F 64 20 72 65
	   68 6D 61 6E 20
	   3A 32 33 30 32
	   31 35 31 39 2D
	   31 37 30 00
 0000021A		     1		.code
 0000021A  52		     1		push	edx
 0000021B  BA 00001703 R     1		mov	edx,OFFSET ??0012
 00000220  E8 00000000 E     1		call	WriteString
 00000225  5A		     1		pop	edx
 00000226  B8 00000FA0		    MOV EAX, 4000
 0000022B  E8 00000000 E	    CALL delay
 00000230  E8 00000000 E	    CALL CLRSCR
 00000235  C3			    RET
 00000236			FrontPage ENDP

 00000236			AdminLoginFUNC PROC
 00000236			    l1:
 00000236  E8 00000000 E	    CALL CLRSCR
 0000023B  B8 00000000		    MOV EAX, 0
 00000240  BB 00000000		    MOV EBX, 0
 00000245  B9 00000000		    MOV ECX, 0
				    INVOKE Design
 0000024A  E8 FFFFFE5A	   *	    call   Design
				    mWrite "         [ ---------------- << LOGIN  INTERFACE >> ---------------- ]"
 00001739		     1		.data		
 00001739 20 20 20 20 20     1		??0013 BYTE "         [ ---------------- << LOGIN  INTERFACE >> ---------------- ]",0	
	   20 20 20 20 5B
	   20 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 20 3C 3C
	   20 4C 4F 47 49
	   4E 20 20 49 4E
	   54 45 52 46 41
	   43 45 20 3E 3E
	   20 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 20 5D 00
 0000024F		     1		.code
 0000024F  52		     1		push	edx
 00000250  BA 00001739 R     1		mov	edx,OFFSET ??0013
 00000255  E8 00000000 E     1		call	WriteString
 0000025A  5A		     1		pop	edx
 0000025B  E8 00000000 E	    CALL CRLF
 00000260  E8 00000000 E	    CALL CRLF

				    mWrite "        "
 0000177F		     1		.data		
 0000177F 20 20 20 20 20     1		??0014 BYTE "        ",0	
	   20 20 20 00
 00000265		     1		.code
 00000265  52		     1		push	edx
 00000266  BA 0000177F R     1		mov	edx,OFFSET ??0014
 0000026B  E8 00000000 E     1		call	WriteString
 00000270  5A		     1		pop	edx
				    mWrite " Enter Administrator Username: "
 00001788		     1		.data		
 00001788 20 45 6E 74 65     1		??0015 BYTE " Enter Administrator Username: ",0	
	   72 20 41 64 6D
	   69 6E 69 73 74
	   72 61 74 6F 72
	   20 55 73 65 72
	   6E 61 6D 65 3A
	   20 00
 00000271		     1		.code
 00000271  52		     1		push	edx
 00000272  BA 00001788 R     1		mov	edx,OFFSET ??0015
 00000277  E8 00000000 E     1		call	WriteString
 0000027C  5A		     1		pop	edx
 0000027D  B9 00000014		    MOV ECX, 20  ; Set the correct size of the username buffer

 00000282  BA 000013CA R	    MOV EDX, OFFSET username
 00000287  E8 00000000 E	    CALL readstring ; Input username
				    mWrite "        "
 000017A8		     1		.data		
 000017A8 20 20 20 20 20     1		??0016 BYTE "        ",0	
	   20 20 20 00
 0000028C		     1		.code
 0000028C  52		     1		push	edx
 0000028D  BA 000017A8 R     1		mov	edx,OFFSET ??0016
 00000292  E8 00000000 E     1		call	WriteString
 00000297  5A		     1		pop	edx
				    mWrite " Enter Yours Password: "
 000017B1		     1		.data		
 000017B1 20 45 6E 74 65     1		??0017 BYTE " Enter Yours Password: ",0	
	   72 20 59 6F 75
	   72 73 20 50 61
	   73 73 77 6F 72
	   64 3A 20 00
 00000298		     1		.code
 00000298  52		     1		push	edx
 00000299  BA 000017B1 R     1		mov	edx,OFFSET ??0017
 0000029E  E8 00000000 E     1		call	WriteString
 000002A3  5A		     1		pop	edx

 000002A4  B9 00000014		    MOV ECX, 20  ; Set the correct size of the password buffer

 000002A9  BA 000013B6 R	    MOV EDX, OFFSET password
 000002AE  E8 00000000 E	    CALL readstring ; Input password

 000002B3  E8 00000000 E	    CALL CRLF

 000002B8  BF 000013CA R	    MOV EDI, OFFSET username
 000002BD  BE 000013DE R	    MOV ESI, OFFSET AdminUser
 000002C2  A6			    CMPSB
 000002C3  74 38		    JE s1
				    mWrite "        "
 000017C9		     1		.data		
 000017C9 20 20 20 20 20     1		??0018 BYTE "        ",0	
	   20 20 20 00
 000002C5		     1		.code
 000002C5  52		     1		push	edx
 000002C6  BA 000017C9 R     1		mov	edx,OFFSET ??0018
 000002CB  E8 00000000 E     1		call	WriteString
 000002D0  5A		     1		pop	edx
				    mWrite "[-] ERROR! Username or password is incorrect, please try again... "
 000017D2		     1		.data		
 000017D2 5B 2D 5D 20 45     1		??0019 BYTE "[-] ERROR! Username or password is incorrect, please try again... ",0	
	   52 52 4F 52 21
	   20 55 73 65 72
	   6E 61 6D 65 20
	   6F 72 20 70 61
	   73 73 77 6F 72
	   64 20 69 73 20
	   69 6E 63 6F 72
	   72 65 63 74 2C
	   20 70 6C 65 61
	   73 65 20 74 72
	   79 20 61 67 61
	   69 6E 2E 2E 2E
	   20 00
 000002D1		     1		.code
 000002D1  52		     1		push	edx
 000002D2  BA 000017D2 R     1		mov	edx,OFFSET ??0019
 000002D7  E8 00000000 E     1		call	WriteString
 000002DC  5A		     1		pop	edx
 000002DD  E8 00000000 E	    CALL CRLF
				    mWrite "        "
 00001815		     1		.data		
 00001815 20 20 20 20 20     1		??001A BYTE "        ",0	
	   20 20 20 00
 000002E2		     1		.code
 000002E2  52		     1		push	edx
 000002E3  BA 00001815 R     1		mov	edx,OFFSET ??001A
 000002E8  E8 00000000 E     1		call	WriteString
 000002ED  5A		     1		pop	edx
 000002EE  E8 00000000 E	    CALL WAITMSG
 000002F3  E8 00000000 E	    CALL CRLF
 000002F8  E9 FFFFFF39		    JMP l1

 000002FD			    s1:
 000002FD  BE 000013B6 R	    MOV ESI, OFFSET password
 00000302  BF 000013E4 R	    MOV EDI, OFFSET AdminPassword
 00000307  A6			    CMPSB
 00000308  74 47		    JE s2
				    mWrite "        "
 0000181E		     1		.data		
 0000181E 20 20 20 20 20     1		??001B BYTE "        ",0	
	   20 20 20 00
 0000030A		     1		.code
 0000030A  52		     1		push	edx
 0000030B  BA 0000181E R     1		mov	edx,OFFSET ??001B
 00000310  E8 00000000 E     1		call	WriteString
 00000315  5A		     1		pop	edx
				    mWrite " [-] ERROR! Username or password is incorrect, please try again... "
 00001827		     1		.data		
 00001827 20 5B 2D 5D 20     1		??001C BYTE " [-] ERROR! Username or password is incorrect, please try again... ",0	
	   45 52 52 4F 52
	   21 20 55 73 65
	   72 6E 61 6D 65
	   20 6F 72 20 70
	   61 73 73 77 6F
	   72 64 20 69 73
	   20 69 6E 63 6F
	   72 72 65 63 74
	   2C 20 70 6C 65
	   61 73 65 20 74
	   72 79 20 61 67
	   61 69 6E 2E 2E
	   2E 20 00
 00000316		     1		.code
 00000316  52		     1		push	edx
 00000317  BA 00001827 R     1		mov	edx,OFFSET ??001C
 0000031C  E8 00000000 E     1		call	WriteString
 00000321  5A		     1		pop	edx
 00000322  E8 00000000 E	    CALL CRLF
				     mWrite "         Do you want to try again? (1 = Yes, 0 = No): "
 0000186B		     1		.data		
 0000186B 20 20 20 20 20     1		??001D BYTE "         Do you want to try again? (1 = Yes, 0 = No): ",0	
	   20 20 20 20 44
	   6F 20 79 6F 75
	   20 77 61 6E 74
	   20 74 6F 20 74
	   72 79 20 61 67
	   61 69 6E 3F 20
	   28 31 20 3D 20
	   59 65 73 2C 20
	   30 20 3D 20 4E
	   6F 29 3A 20 00
 00000327		     1		.code
 00000327  52		     1		push	edx
 00000328  BA 0000186B R     1		mov	edx,OFFSET ??001D
 0000032D  E8 00000000 E     1		call	WriteString
 00000332  5A		     1		pop	edx
 00000333  E8 00000000 E	    CALL Readint
 00000338  A3 000013E9 R	    MOV AdminLogChoice, EAX
 0000033D  E8 00000000 E		CALL CLRSCR
 00000342  83 3D 000013E9 R	    CMP AdminLogChoice, 1
	   01
 00000349  0F 84 FFFFFEE7	    JE l1  ; User wants to try again

 0000034F  EB 2C		    JMP end_it
				  

 00000351			    s2:
				    mWrite "        "
 000018A2		     1		.data		
 000018A2 20 20 20 20 20     1		??001E BYTE "        ",0	
	   20 20 20 00
 00000351		     1		.code
 00000351  52		     1		push	edx
 00000352  BA 000018A2 R     1		mov	edx,OFFSET ??001E
 00000357  E8 00000000 E     1		call	WriteString
 0000035C  5A		     1		pop	edx
				    mWrite " [+] <<|>> Checking Admin Credentials!!! <<|>> [+]"
 000018AB		     1		.data		
 000018AB 20 5B 2B 5D 20     1		??001F BYTE " [+] <<|>> Checking Admin Credentials!!! <<|>> [+]",0	
	   3C 3C 7C 3E 3E
	   20 43 68 65 63
	   6B 69 6E 67 20
	   41 64 6D 69 6E
	   20 43 72 65 64
	   65 6E 74 69 61
	   6C 73 21 21 21
	   20 3C 3C 7C 3E
	   3E 20 5B 2B 5D
	   00
 0000035D		     1		.code
 0000035D  52		     1		push	edx
 0000035E  BA 000018AB R     1		mov	edx,OFFSET ??001F
 00000363  E8 00000000 E     1		call	WriteString
 00000368  5A		     1		pop	edx

 00000369  E8 00000000 E	    CALL CRLF
 0000036E  B8 00000FA0		     MOV EAX, 4000
 00000373  E8 00000000 E	    CALL delay
 00000378  E8 00000001		    CALL AdminOperation
 0000037D			    end_it:
 0000037D  C3			    RET
 0000037E			AdminLoginFUNC ENDP

 0000037E			AdminOperation PROC
 0000037E  E8 00000000 E	        CALL CRLF
 00000383  E8 00000000 E	        CALL CRLF
				        mWrite "        Admin Login Successful!"
 000018DE		     1		.data		
 000018DE 20 20 20 20 20     1		??0020 BYTE "        Admin Login Successful!",0	
	   20 20 20 41 64
	   6D 69 6E 20 4C
	   6F 67 69 6E 20
	   53 75 63 63 65
	   73 73 66 75 6C
	   21 00
 00000388		     1		.code
 00000388  52		     1		push	edx
 00000389  BA 000018DE R     1		mov	edx,OFFSET ??0020
 0000038E  E8 00000000 E     1		call	WriteString
 00000393  5A		     1		pop	edx
				   
 00000394  E8 00000000 E	        CALL CRLF
 00000399  E8 00000000 E	        CALL CRLF
 0000039E  E8 00000000 E	        CALL CRLF
				        mWrite "        "
 000018FE		     1		.data		
 000018FE 20 20 20 20 20     1		??0021 BYTE "        ",0	
	   20 20 20 00
 000003A3		     1		.code
 000003A3  52		     1		push	edx
 000003A4  BA 000018FE R     1		mov	edx,OFFSET ??0021
 000003A9  E8 00000000 E     1		call	WriteString
 000003AE  5A		     1		pop	edx
 000003AF  E8 00000000 E	        CALL WAITMSG
 000003B4  E8 00000000 E	        CALL CLRSCR

 000003B9			        Back:
				        mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Welcome Administrator _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00001907		     1		.data		
 00001907 2A 5F 20 2A 20     1		??0022 BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Welcome Administrator _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 57
	   65 6C 63 6F 6D
	   65 20 41 64 6D
	   69 6E 69 73 74
	   72 61 74 6F 72
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 2A 00
 000003B9		     1		.code
 000003B9  52		     1		push	edx
 000003BA  BA 00001907 R     1		mov	edx,OFFSET ??0022
 000003BF  E8 00000000 E     1		call	WriteString
 000003C4  5A		     1		pop	edx
 000003C5  E8 00000000 E	        CALL CRLF
 000003CA  E8 00000000 E	        CALL CRLF
				        mWrite "			  Please select your choice : :"
 0000196B		     1		.data		
 0000196B 09 09 09 20 20     1		??0023 BYTE "			  Please select your choice : :",0	
	   50 6C 65 61 73
	   65 20 73 65 6C
	   65 63 74 20 79
	   6F 75 72 20 63
	   68 6F 69 63 65
	   20 3A 20 3A 00
 000003CF		     1		.code
 000003CF  52		     1		push	edx
 000003D0  BA 0000196B R     1		mov	edx,OFFSET ??0023
 000003D5  E8 00000000 E     1		call	WriteString
 000003DA  5A		     1		pop	edx
 000003DB  E8 00000000 E	        CALL CRLF
 000003E0  E8 00000000 E	        CALL CRLF
				        mWrite "			  [1] Search User Detail"        
 0000198E		     1		.data		
 0000198E 09 09 09 20 20     1		??0024 BYTE "			  [1] Search User Detail",0	
	   5B 31 5D 20 53
	   65 61 72 63 68
	   20 55 73 65 72
	   20 44 65 74 61
	   69 6C 00
 000003E5		     1		.code
 000003E5  52		     1		push	edx
 000003E6  BA 0000198E R     1		mov	edx,OFFSET ??0024
 000003EB  E8 00000000 E     1		call	WriteString
 000003F0  5A		     1		pop	edx
 000003F1  E8 00000000 E	        CALL CRLF
 000003F6  E8 00000000 E	        CALL CRLF
				        mWrite "			  [2] ATM INFO"     
 000019AA		     1		.data		
 000019AA 09 09 09 20 20     1		??0025 BYTE "			  [2] ATM INFO",0	
	   5B 32 5D 20 41
	   54 4D 20 49 4E
	   46 4F 00
 000003FB		     1		.code
 000003FB  52		     1		push	edx
 000003FC  BA 000019AA R     1		mov	edx,OFFSET ??0025
 00000401  E8 00000000 E     1		call	WriteString
 00000406  5A		     1		pop	edx
 00000407  E8 00000000 E	        CALL CRLF
 0000040C  E8 00000000 E	        CALL CRLF
				        mWrite "			  [3] Start Atm"  
 000019BC		     1		.data		
 000019BC 09 09 09 20 20     1		??0026 BYTE "			  [3] Start Atm",0	
	   5B 33 5D 20 53
	   74 61 72 74 20
	   41 74 6D 00
 00000411		     1		.code
 00000411  52		     1		push	edx
 00000412  BA 000019BC R     1		mov	edx,OFFSET ??0026
 00000417  E8 00000000 E     1		call	WriteString
 0000041C  5A		     1		pop	edx
 0000041D  E8 00000000 E	        CALL CRLF
 00000422  E8 00000000 E	        CALL CRLF
				        mWrite "			  [4] Turn OFF the System "  
 000019CF		     1		.data		
 000019CF 09 09 09 20 20     1		??0027 BYTE "			  [4] Turn OFF the System ",0	
	   5B 34 5D 20 54
	   75 72 6E 20 4F
	   46 46 20 74 68
	   65 20 53 79 73
	   74 65 6D 20 00
 00000427		     1		.code
 00000427  52		     1		push	edx
 00000428  BA 000019CF R     1		mov	edx,OFFSET ??0027
 0000042D  E8 00000000 E     1		call	WriteString
 00000432  5A		     1		pop	edx
 00000433  E8 00000000 E	        CALL CRLF
 00000438  E8 00000000 E	        CALL CRLF
				      

				        mWrite "			  Your choice: "
 000019ED		     1		.data		
 000019ED 09 09 09 20 20     1		??0028 BYTE "			  Your choice: ",0	
	   59 6F 75 72 20
	   63 68 6F 69 63
	   65 3A 20 00
 0000043D		     1		.code
 0000043D  52		     1		push	edx
 0000043E  BA 000019ED R     1		mov	edx,OFFSET ??0028
 00000443  E8 00000000 E     1		call	WriteString
 00000448  5A		     1		pop	edx
 00000449  E8 00000000 E	        CALL ReadDec
 0000044E  EB 16		        JMP AdmOP
 00000450  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001A00		     1		.data		
 00001A00 09 09 09 20 20     1		??0029 BYTE "			  ",0	
	   00
 00000455		     1		.code
 00000455  52		     1		push	edx
 00000456  BA 00001A00 R     1		mov	edx,OFFSET ??0029
 0000045B  E8 00000000 E     1		call	WriteString
 00000460  5A		     1		pop	edx
 00000461  E9 000002DC		        JMP ExitAdminOperation

 00000466			AdmOP:
 00000466  83 F8 01		    CMP EAX, 1
 00000469  74 20		    JE SearchUserDetail
 0000046B  83 F8 02		    CMP EAX, 2
 0000046E  0F 84 00000171	    JE ATMINFO
 00000474  83 F8 03		    CMP EAX, 3
 00000477  0F 84 0000021F	    JE StartAtm
 0000047D  83 F8 04		    CMP EAX, 4
 00000480  0F 84 00000269	    JE TurnOFFtheSystem
				   


 00000486  E9 000002AD		    JMP InvalidChoice

 0000048B			SearchUserDetail:
 0000048B  E8 00000000 E	 CALL CLRSCR
 00000490  E8 00000000 E	    CALL CRLF
 00000495  E8 00000000 E	    CALL CRLF
				    mWrite "        Account Details"
 00001A06		     1		.data		
 00001A06 20 20 20 20 20     1		??002A BYTE "        Account Details",0	
	   20 20 20 41 63
	   63 6F 75 6E 74
	   20 44 65 74 61
	   69 6C 73 00
 0000049A		     1		.code
 0000049A  52		     1		push	edx
 0000049B  BA 00001A06 R     1		mov	edx,OFFSET ??002A
 000004A0  E8 00000000 E     1		call	WriteString
 000004A5  5A		     1		pop	edx
 000004A6  E8 00000000 E	    CALL CRLF
				    mWrite "        Enter Account Number you want to find Details :--> Single User Exist!!!"
 00001A1E		     1		.data		
 00001A1E 20 20 20 20 20     1		??002B BYTE "        Enter Account Number you want to find Details :--> Single User Exist!!!",0	
	   20 20 20 45 6E
	   74 65 72 20 41
	   63 63 6F 75 6E
	   74 20 4E 75 6D
	   62 65 72 20 79
	   6F 75 20 77 61
	   6E 74 20 74 6F
	   20 66 69 6E 64
	   20 44 65 74 61
	   69 6C 73 20 3A
	   2D 2D 3E 20 53
	   69 6E 67 6C 65
	   20 55 73 65 72
	   20 45 78 69 73
	   74 21 21 21 00
 000004AB		     1		.code
 000004AB  52		     1		push	edx
 000004AC  BA 00001A1E R     1		mov	edx,OFFSET ??002B
 000004B1  E8 00000000 E     1		call	WriteString
 000004B6  5A		     1		pop	edx
 000004B7  E8 00000000 E	    CALL CRLF
 000004BC  E8 00000000 E	    CALL CRLF
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00001A6E		     1		.data		
 00001A6E 2A 5F 20 2A 20     1		??002C BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 000004C1		     1		.code
 000004C1  52		     1		push	edx
 000004C2  BA 00001A6E R     1		mov	edx,OFFSET ??002C
 000004C7  E8 00000000 E     1		call	WriteString
 000004CC  5A		     1		pop	edx
 000004CD  E8 00000000 E	    CALL CRLF
 000004D2  E8 00000000 E	    CALL CRLF
				    mWrite "			  Account Number:                 "
 00001AE0		     1		.data		
 00001AE0 09 09 09 20 20     1		??002D BYTE "			  Account Number:                 ",0	
	   41 63 63 6F 75
	   6E 74 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000004D7		     1		.code
 000004D7  52		     1		push	edx
 000004D8  BA 00001AE0 R     1		mov	edx,OFFSET ??002D
 000004DD  E8 00000000 E     1		call	WriteString
 000004E2  5A		     1		pop	edx
 000004E3  BA 00001415 R	    mov EDX, OFFSET StoredAccountID
 000004E8  E8 00000000 E	    CALL WriteString
 000004ED  E8 00000000 E	    CALL CRLF
				    mWrite "			  Holder Name:                    "
 00001B06		     1		.data		
 00001B06 09 09 09 20 20     1		??002E BYTE "			  Holder Name:                    ",0	
	   48 6F 6C 64 65
	   72 20 4E 61 6D
	   65 3A 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000004F2		     1		.code
 000004F2  52		     1		push	edx
 000004F3  BA 00001B06 R     1		mov	edx,OFFSET ??002E
 000004F8  E8 00000000 E     1		call	WriteString
 000004FD  5A		     1		pop	edx
 000004FE  BA 00001426 R	    mov EDX, OFFSET StoredHolderName
 00000503  E8 00000000 E	    CALL WriteString
 00000508  E8 00000000 E	    CALL CRLF
				    mWrite "			  Current Balance:                "
 00001B2C		     1		.data		
 00001B2C 09 09 09 20 20     1		??002F BYTE "			  Current Balance:                ",0	
	   43 75 72 72 65
	   6E 74 20 42 61
	   6C 61 6E 63 65
	   3A 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 0000050D		     1		.code
 0000050D  52		     1		push	edx
 0000050E  BA 00001B2C R     1		mov	edx,OFFSET ??002F
 00000513  E8 00000000 E     1		call	WriteString
 00000518  5A		     1		pop	edx
 00000519  A1 00001465 R	    mov EAX, StoredAmount
 0000051E  E8 00000000 E	    CALL WriteDec
 00000523  E8 00000000 E	    CALL CRLF
				    mWrite "			  Personal Identification Number: "
 00001B52		     1		.data		
 00001B52 09 09 09 20 20     1		??0030 BYTE "			  Personal Identification Number: ",0	
	   50 65 72 73 6F
	   6E 61 6C 20 49
	   64 65 6E 74 69
	   66 69 63 61 74
	   69 6F 6E 20 4E
	   75 6D 62 65 72
	   3A 20 00
 00000528		     1		.code
 00000528  52		     1		push	edx
 00000529  BA 00001B52 R     1		mov	edx,OFFSET ??0030
 0000052E  E8 00000000 E     1		call	WriteString
 00000533  5A		     1		pop	edx
 00000534  BA 00001421 R	    mov EDX, OFFSET StoredPIN
 00000539  E8 00000000 E	    CALL WriteString
 0000053E  E8 00000000 E	    CALL CRLF
				    mWrite "			  ID Card Number:                 "
 00001B78		     1		.data		
 00001B78 09 09 09 20 20     1		??0031 BYTE "			  ID Card Number:                 ",0	
	   49 44 20 43 61
	   72 64 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00000543		     1		.code
 00000543  52		     1		push	edx
 00000544  BA 00001B78 R     1		mov	edx,OFFSET ??0031
 00000549  E8 00000000 E     1		call	WriteString
 0000054E  5A		     1		pop	edx
 0000054F  BA 0000142B R	    mov EDX, OFFSET StoredCNIC
 00000554  E8 00000000 E	    CALL WriteString
 00000559  E8 00000000 E	    CALL CRLF
				    mWrite "			  Contact Number:                 "
 00001B9E		     1		.data		
 00001B9E 09 09 09 20 20     1		??0032 BYTE "			  Contact Number:                 ",0	
	   43 6F 6E 74 61
	   63 74 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 0000055E		     1		.code
 0000055E  52		     1		push	edx
 0000055F  BA 00001B9E R     1		mov	edx,OFFSET ??0032
 00000564  E8 00000000 E     1		call	WriteString
 00000569  5A		     1		pop	edx
 0000056A  BA 0000143B R	    mov EDX, OFFSET StoredNO
 0000056F  E8 00000000 E	    CALL WriteString
 00000574  E8 00000000 E	    CALL CRLF
				    mWrite "			  Address City:                   "
 00001BC4		     1		.data		
 00001BC4 09 09 09 20 20     1		??0033 BYTE "			  Address City:                   ",0	
	   41 64 64 72 65
	   73 73 20 43 69
	   74 79 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00000579		     1		.code
 00000579  52		     1		push	edx
 0000057A  BA 00001BC4 R     1		mov	edx,OFFSET ??0033
 0000057F  E8 00000000 E     1		call	WriteString
 00000584  5A		     1		pop	edx
 00000585  BA 00001448 R	    mov EDX, OFFSET StoredCity
 0000058A  E8 00000000 E	    CALL WriteString
 0000058F  E8 00000000 E	    CALL CRLF
				    mWrite "			  E-Mail Address:                 "
 00001BEA		     1		.data		
 00001BEA 09 09 09 20 20     1		??0034 BYTE "			  E-Mail Address:                 ",0	
	   45 2D 4D 61 69
	   6C 20 41 64 64
	   72 65 73 73 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00000594		     1		.code
 00000594  52		     1		push	edx
 00000595  BA 00001BEA R     1		mov	edx,OFFSET ??0034
 0000059A  E8 00000000 E     1		call	WriteString
 0000059F  5A		     1		pop	edx
 000005A0  BA 00001452 R	    mov EDX, OFFSET StoredMail
 000005A5  E8 00000000 E	    CALL WriteString
 000005AA  E8 00000000 E	    CALL CRLF
				    mWrite "			  Gender:                         "
 00001C10		     1		.data		
 00001C10 09 09 09 20 20     1		??0035 BYTE "			  Gender:                         ",0	
	   47 65 6E 64 65
	   72 3A 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000005AF		     1		.code
 000005AF  52		     1		push	edx
 000005B0  BA 00001C10 R     1		mov	edx,OFFSET ??0035
 000005B5  E8 00000000 E     1		call	WriteString
 000005BA  5A		     1		pop	edx
 000005BB  BA 00001463 R	    mov EDX, OFFSET gender
 000005C0  E8 00000000 E	    CALL WriteString
 000005C5  E8 00000000 E	    CALL CRLF
				    mWrite "			  "
 00001C36		     1		.data		
 00001C36 09 09 09 20 20     1		??0036 BYTE "			  ",0	
	   00
 000005CA		     1		.code
 000005CA  52		     1		push	edx
 000005CB  BA 00001C36 R     1		mov	edx,OFFSET ??0036
 000005D0  E8 00000000 E     1		call	WriteString
 000005D5  5A		     1		pop	edx
 000005D6  E8 00000000 E	    CALL WAITMSG
 000005DB  E8 00000000 E	    CALL CLRSCR
 000005E0  E9 0000015D		    JMP ExitAdminOperation

 000005E5			ATMINFO:
 000005E5  E8 00000000 E	    CALL CLRSCR
 000005EA  E8 00000000 E	    CALL CRLF
 000005EF  E8 00000000 E	    CALL CRLF
				    mWrite "        ATM Info:"
 00001C3C		     1		.data		
 00001C3C 20 20 20 20 20     1		??0037 BYTE "        ATM Info:",0	
	   20 20 20 41 54
	   4D 20 49 6E 66
	   6F 3A 00
 000005F4		     1		.code
 000005F4  52		     1		push	edx
 000005F5  BA 00001C3C R     1		mov	edx,OFFSET ??0037
 000005FA  E8 00000000 E     1		call	WriteString
 000005FF  5A		     1		pop	edx
 00000600  E8 00000000 E	    CALL CRLF
				    mWrite "        ----------------------"
 00001C4E		     1		.data		
 00001C4E 20 20 20 20 20     1		??0038 BYTE "        ----------------------",0	
	   20 20 20 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   00
 00000605		     1		.code
 00000605  52		     1		push	edx
 00000606  BA 00001C4E R     1		mov	edx,OFFSET ??0038
 0000060B  E8 00000000 E     1		call	WriteString
 00000610  5A		     1		pop	edx
 00000611  E8 00000000 E	    CALL CRLF
				    mWrite "        Bank : HTKZ  Chase Bank"
 00001C6D		     1		.data		
 00001C6D 20 20 20 20 20     1		??0039 BYTE "        Bank : HTKZ  Chase Bank",0	
	   20 20 20 42 61
	   6E 6B 20 3A 20
	   48 54 4B 5A 20
	   20 43 68 61 73
	   65 20 42 61 6E
	   6B 00
 00000616		     1		.code
 00000616  52		     1		push	edx
 00000617  BA 00001C6D R     1		mov	edx,OFFSET ??0039
 0000061C  E8 00000000 E     1		call	WriteString
 00000621  5A		     1		pop	edx
 00000622  E8 00000000 E	    CALL CRLF
				    mWrite "        Branch Code : Gujranwala Branch [1264]"
 00001C8D		     1		.data		
 00001C8D 20 20 20 20 20     1		??003A BYTE "        Branch Code : Gujranwala Branch [1264]",0	
	   20 20 20 42 72
	   61 6E 63 68 20
	   43 6F 64 65 20
	   3A 20 47 75 6A
	   72 61 6E 77 61
	   6C 61 20 42 72
	   61 6E 63 68 20
	   5B 31 32 36 34
	   5D 00
 00000627		     1		.code
 00000627  52		     1		push	edx
 00000628  BA 00001C8D R     1		mov	edx,OFFSET ??003A
 0000062D  E8 00000000 E     1		call	WriteString
 00000632  5A		     1		pop	edx
 00000633  E8 00000000 E	    CALL CRLF
				    mWrite "        Model: ABC-1234"
 00001CBC		     1		.data		
 00001CBC 20 20 20 20 20     1		??003B BYTE "        Model: ABC-1234",0	
	   20 20 20 4D 6F
	   64 65 6C 3A 20
	   41 42 43 2D 31
	   32 33 34 00
 00000638		     1		.code
 00000638  52		     1		push	edx
 00000639  BA 00001CBC R     1		mov	edx,OFFSET ??003B
 0000063E  E8 00000000 E     1		call	WriteString
 00000643  5A		     1		pop	edx
 00000644  E8 00000000 E	    CALL CRLF
				    mWrite "        Serial No: S12345678"
 00001CD4		     1		.data		
 00001CD4 20 20 20 20 20     1		??003C BYTE "        Serial No: S12345678",0	
	   20 20 20 53 65
	   72 69 61 6C 20
	   4E 6F 3A 20 53
	   31 32 33 34 35
	   36 37 38 00
 00000649		     1		.code
 00000649  52		     1		push	edx
 0000064A  BA 00001CD4 R     1		mov	edx,OFFSET ??003C
 0000064F  E8 00000000 E     1		call	WriteString
 00000654  5A		     1		pop	edx
 00000655  E8 00000000 E	    CALL CRLF
				    mWrite "        Available Cash: "
 00001CF1		     1		.data		
 00001CF1 20 20 20 20 20     1		??003D BYTE "        Available Cash: ",0	
	   20 20 20 41 76
	   61 69 6C 61 62
	   6C 65 20 43 61
	   73 68 3A 20 00
 0000065A		     1		.code
 0000065A  52		     1		push	edx
 0000065B  BA 00001CF1 R     1		mov	edx,OFFSET ??003D
 00000660  E8 00000000 E     1		call	WriteString
 00000665  5A		     1		pop	edx
 00000666  E8 00000000 E	    CALL CRLF
				    mWrite "        Year: 2024"
 00001D0A		     1		.data		
 00001D0A 20 20 20 20 20     1		??003E BYTE "        Year: 2024",0	
	   20 20 20 59 65
	   61 72 3A 20 32
	   30 32 34 00
 0000066B		     1		.code
 0000066B  52		     1		push	edx
 0000066C  BA 00001D0A R     1		mov	edx,OFFSET ??003E
 00000671  E8 00000000 E     1		call	WriteString
 00000676  5A		     1		pop	edx
 00000677  E8 00000000 E	    CALL CRLF
 0000067C  E8 00000000 E	    CALL CRLF
				    mWrite "        "
 00001D1D		     1		.data		
 00001D1D 20 20 20 20 20     1		??003F BYTE "        ",0	
	   20 20 20 00
 00000681		     1		.code
 00000681  52		     1		push	edx
 00000682  BA 00001D1D R     1		mov	edx,OFFSET ??003F
 00000687  E8 00000000 E     1		call	WriteString
 0000068C  5A		     1		pop	edx
 0000068D  E8 00000000 E	    CALL WAITMSG
 00000692  E8 00000000 E	    CALL CLRSCR
 00000697  E9 000000A6		    JMP ExitAdminOperation

 0000069C			StartAtm:
 0000069C  E8 00000000 E	    CALL CLRSCR
 000006A1  E8 00000000 E	    CALL CRLF
 000006A6  E8 00000000 E	    CALL CRLF
				    mWrite "       Starting System..."
 00001D26		     1		.data		
 00001D26 20 20 20 20 20     1		??0040 BYTE "       Starting System...",0	
	   20 20 53 74 61
	   72 74 69 6E 67
	   20 53 79 73 74
	   65 6D 2E 2E 2E
	   00
 000006AB		     1		.code
 000006AB  52		     1		push	edx
 000006AC  BA 00001D26 R     1		mov	edx,OFFSET ??0040
 000006B1  E8 00000000 E     1		call	WriteString
 000006B6  5A		     1		pop	edx
 000006B7  E8 00000000 E	    CALL CRLF
 000006BC  E8 00000000 E	    CALL CRLF
				    mWrite "        HI :)"
 00001D40		     1		.data		
 00001D40 20 20 20 20 20     1		??0041 BYTE "        HI :)",0	
	   20 20 20 48 49
	   20 3A 29 00
 000006C1		     1		.code
 000006C1  52		     1		push	edx
 000006C2  BA 00001D40 R     1		mov	edx,OFFSET ??0041
 000006C7  E8 00000000 E     1		call	WriteString
 000006CC  5A		     1		pop	edx
 000006CD  E8 00000000 E	    CALL CRLF
 000006D2  E8 00000000 E	    CALL CRLF
				    mWrite "        "
 00001D4E		     1		.data		
 00001D4E 20 20 20 20 20     1		??0042 BYTE "        ",0	
	   20 20 20 00
 000006D7		     1		.code
 000006D7  52		     1		push	edx
 000006D8  BA 00001D4E R     1		mov	edx,OFFSET ??0042
 000006DD  E8 00000000 E     1		call	WriteString
 000006E2  5A		     1		pop	edx
 000006E3  E8 00000000 E	    CALL WAITMSG
 000006E8  E8 000003C0		    CALL HolderLoginFUNC
 000006ED  EB 53		    JMP ExitAdminOperation

 000006EF			TurnOFFtheSystem:
 000006EF  E8 00000000 E	    CALL CLRSCR
 000006F4  E8 00000000 E	    CALL CRLF
				    mWrite "        Good Bye Admin..."
 00001D57		     1		.data		
 00001D57 20 20 20 20 20     1		??0043 BYTE "        Good Bye Admin...",0	
	   20 20 20 47 6F
	   6F 64 20 42 79
	   65 20 41 64 6D
	   69 6E 2E 2E 2E
	   00
 000006F9		     1		.code
 000006F9  52		     1		push	edx
 000006FA  BA 00001D57 R     1		mov	edx,OFFSET ??0043
 000006FF  E8 00000000 E     1		call	WriteString
 00000704  5A		     1		pop	edx
 00000705  E8 00000000 E	    CALL CRLF
 0000070A  E8 00000000 E	    CALL CRLF
				    mWrite "        Have a Nice Day :)"
 00001D71		     1		.data		
 00001D71 20 20 20 20 20     1		??0044 BYTE "        Have a Nice Day :)",0	
	   20 20 20 48 61
	   76 65 20 61 20
	   4E 69 63 65 20
	   44 61 79 20 3A
	   29 00
 0000070F		     1		.code
 0000070F  52		     1		push	edx
 00000710  BA 00001D71 R     1		mov	edx,OFFSET ??0044
 00000715  E8 00000000 E     1		call	WriteString
 0000071A  5A		     1		pop	edx
 0000071B  E8 00000000 E	    CALL CRLF
				    mWrite "        "
 00001D8C		     1		.data		
 00001D8C 20 20 20 20 20     1		??0045 BYTE "        ",0	
	   20 20 20 00
 00000720		     1		.code
 00000720  52		     1		push	edx
 00000721  BA 00001D8C R     1		mov	edx,OFFSET ??0045
 00000726  E8 00000000 E     1		call	WriteString
 0000072B  5A		     1		pop	edx
 0000072C  E8 00000000 E	    CALL WAITMSG
				    INVOKE EXITPROCESS, 0
 00000731  6A 00	   *	    push   +000000000h
 00000733  E8 00000000 E   *	    call   ExitProcess


 00000738			InvalidChoice:
 00000738  E8 00000000 E	    CALL CLRSCR
 0000073D  E9 FFFFFC3C		    JMP AdminOperation

 00000742			ExitAdminOperation:
 00000742  E9 FFFFFC72		    JMP Back
 00000747  C3			    RET
 00000748			AdminOperation ENDP


 00000748			UserOperations PROC
				   
				    mWrite "         Account Holder Login Account Found!"
 00001D95		     1		.data		
 00001D95 20 20 20 20 20     1		??0046 BYTE "         Account Holder Login Account Found!",0	
	   20 20 20 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 4C
	   6F 67 69 6E 20
	   41 63 63 6F 75
	   6E 74 20 46 6F
	   75 6E 64 21 00
 00000748		     1		.code
 00000748  52		     1		push	edx
 00000749  BA 00001D95 R     1		mov	edx,OFFSET ??0046
 0000074E  E8 00000000 E     1		call	WriteString
 00000753  5A		     1		pop	edx
 00000754  E8 00000000 E	    CALL CRLF
 00000759  E8 00000000 E	    CALL CRLF
 0000075E  E8 00000000 E	    CALL CRLF
				    mWrite "         "
 00001DC2		     1		.data		
 00001DC2 20 20 20 20 20     1		??0047 BYTE "         ",0	
	   20 20 20 20 00
 00000763		     1		.code
 00000763  52		     1		push	edx
 00000764  BA 00001DC2 R     1		mov	edx,OFFSET ??0047
 00000769  E8 00000000 E     1		call	WriteString
 0000076E  5A		     1		pop	edx
 0000076F  E8 00000000 E	    CALL WAITMSG
 00000774  E8 00000000 E	    CALL CLRSCR

 00000779			Back:
				    mWrite "        Welcome User "
 00001DCC		     1		.data		
 00001DCC 20 20 20 20 20     1		??0048 BYTE "        Welcome User ",0	
	   20 20 20 57 65
	   6C 63 6F 6D 65
	   20 55 73 65 72
	   20 00
 00000779		     1		.code
 00000779  52		     1		push	edx
 0000077A  BA 00001DCC R     1		mov	edx,OFFSET ??0048
 0000077F  E8 00000000 E     1		call	WriteString
 00000784  5A		     1		pop	edx
 00000785  E8 00000000 E	    CALL CRLF
				    mWrite "        Enter your choice : "
 00001DE2		     1		.data		
 00001DE2 20 20 20 20 20     1		??0049 BYTE "        Enter your choice : ",0	
	   20 20 20 45 6E
	   74 65 72 20 79
	   6F 75 72 20 63
	   68 6F 69 63 65
	   20 3A 20 00
 0000078A		     1		.code
 0000078A  52		     1		push	edx
 0000078B  BA 00001DE2 R     1		mov	edx,OFFSET ??0049
 00000790  E8 00000000 E     1		call	WriteString
 00000795  5A		     1		pop	edx
 00000796  E8 00000000 E	    CALL CRLF
 0000079B  E8 00000000 E	    CALL CRLF
				    mWrite "			  [1] Fast Cash"
 00001DFF		     1		.data		
 00001DFF 09 09 09 20 20     1		??004A BYTE "			  [1] Fast Cash",0	
	   5B 31 5D 20 46
	   61 73 74 20 43
	   61 73 68 00
 000007A0		     1		.code
 000007A0  52		     1		push	edx
 000007A1  BA 00001DFF R     1		mov	edx,OFFSET ??004A
 000007A6  E8 00000000 E     1		call	WriteString
 000007AB  5A		     1		pop	edx
 000007AC  E8 00000000 E	    CALL CRLF
 000007B1  E8 00000000 E	    CALL CRLF
				    mWrite "			  [2] Cash Withdrawal"
 00001E12		     1		.data		
 00001E12 09 09 09 20 20     1		??004B BYTE "			  [2] Cash Withdrawal",0	
	   5B 32 5D 20 43
	   61 73 68 20 57
	   69 74 68 64 72
	   61 77 61 6C 00
 000007B6		     1		.code
 000007B6  52		     1		push	edx
 000007B7  BA 00001E12 R     1		mov	edx,OFFSET ??004B
 000007BC  E8 00000000 E     1		call	WriteString
 000007C1  5A		     1		pop	edx
 000007C2  E8 00000000 E	    CALL CRLF
 000007C7  E8 00000000 E	    CALL CRLF
				    mWrite "			  [3] Deposit"
 00001E2B		     1		.data		
 00001E2B 09 09 09 20 20     1		??004C BYTE "			  [3] Deposit",0	
	   5B 33 5D 20 44
	   65 70 6F 73 69
	   74 00
 000007CC		     1		.code
 000007CC  52		     1		push	edx
 000007CD  BA 00001E2B R     1		mov	edx,OFFSET ??004C
 000007D2  E8 00000000 E     1		call	WriteString
 000007D7  5A		     1		pop	edx
 000007D8  E8 00000000 E	    CALL CRLF
 000007DD  E8 00000000 E	    CALL CRLF
				    mWrite "			  [4] Transactions "
 00001E3C		     1		.data		
 00001E3C 09 09 09 20 20     1		??004D BYTE "			  [4] Transactions ",0	
	   5B 34 5D 20 54
	   72 61 6E 73 61
	   63 74 69 6F 6E
	   73 20 00
 000007E2		     1		.code
 000007E2  52		     1		push	edx
 000007E3  BA 00001E3C R     1		mov	edx,OFFSET ??004D
 000007E8  E8 00000000 E     1		call	WriteString
 000007ED  5A		     1		pop	edx
 000007EE  E8 00000000 E	    CALL CRLF
 000007F3  E8 00000000 E	    CALL CRLF
				    mWrite "			  [5] Account Detail"
 00001E53		     1		.data		
 00001E53 09 09 09 20 20     1		??004E BYTE "			  [5] Account Detail",0	
	   5B 35 5D 20 41
	   63 63 6F 75 6E
	   74 20 44 65 74
	   61 69 6C 00
 000007F8		     1		.code
 000007F8  52		     1		push	edx
 000007F9  BA 00001E53 R     1		mov	edx,OFFSET ??004E
 000007FE  E8 00000000 E     1		call	WriteString
 00000803  5A		     1		pop	edx
 00000804  E8 00000000 E	    CALL CRLF
 00000809  E8 00000000 E	    CALL CRLF
				    mWrite "			  [6] Change PIN "
 00001E6B		     1		.data		
 00001E6B 09 09 09 20 20     1		??004F BYTE "			  [6] Change PIN ",0	
	   5B 36 5D 20 43
	   68 61 6E 67 65
	   20 50 49 4E 20
	   00
 0000080E		     1		.code
 0000080E  52		     1		push	edx
 0000080F  BA 00001E6B R     1		mov	edx,OFFSET ??004F
 00000814  E8 00000000 E     1		call	WriteString
 00000819  5A		     1		pop	edx
 0000081A  E8 00000000 E	    CALL CRLF
 0000081F  E8 00000000 E	    CALL CRLF
				    mWrite "			  [7] Update Account INFO "
 00001E80		     1		.data		
 00001E80 09 09 09 20 20     1		??0050 BYTE "			  [7] Update Account INFO ",0	
	   5B 37 5D 20 55
	   70 64 61 74 65
	   20 41 63 63 6F
	   75 6E 74 20 49
	   4E 46 4F 20 00
 00000824		     1		.code
 00000824  52		     1		push	edx
 00000825  BA 00001E80 R     1		mov	edx,OFFSET ??0050
 0000082A  E8 00000000 E     1		call	WriteString
 0000082F  5A		     1		pop	edx
 00000830  E8 00000000 E	    CALL CRLF
 00000835  E8 00000000 E	    CALL CRLF
				    mWrite "			  [8] Generate Receipt"
 00001E9E		     1		.data		
 00001E9E 09 09 09 20 20     1		??0051 BYTE "			  [8] Generate Receipt",0	
	   5B 38 5D 20 47
	   65 6E 65 72 61
	   74 65 20 52 65
	   63 65 69 70 74
	   00
 0000083A		     1		.code
 0000083A  52		     1		push	edx
 0000083B  BA 00001E9E R     1		mov	edx,OFFSET ??0051
 00000840  E8 00000000 E     1		call	WriteString
 00000845  5A		     1		pop	edx
 00000846  E8 00000000 E	    CALL CRLF
 0000084B  E8 00000000 E	    CALL CRLF
				    mWrite "			  [9] Log out"
 00001EB8		     1		.data		
 00001EB8 09 09 09 20 20     1		??0052 BYTE "			  [9] Log out",0	
	   5B 39 5D 20 4C
	   6F 67 20 6F 75
	   74 00
 00000850		     1		.code
 00000850  52		     1		push	edx
 00000851  BA 00001EB8 R     1		mov	edx,OFFSET ??0052
 00000856  E8 00000000 E     1		call	WriteString
 0000085B  5A		     1		pop	edx
 0000085C  E8 00000000 E	    CALL CRLF
 00000861  E8 00000000 E	    CALL CRLF
 00000866  E8 00000000 E	    CALL CRLF
				    mWrite "			  [->] Your Choice : "
 00001EC9		     1		.data		
 00001EC9 09 09 09 20 20     1		??0053 BYTE "			  [->] Your Choice : ",0	
	   5B 2D 3E 5D 20
	   59 6F 75 72 20
	   43 68 6F 69 63
	   65 20 3A 20 00
 0000086B		     1		.code
 0000086B  52		     1		push	edx
 0000086C  BA 00001EC9 R     1		mov	edx,OFFSET ??0053
 00000871  E8 00000000 E     1		call	WriteString
 00000876  5A		     1		pop	edx
 00000877  E8 00000000 E	    CALL ReadInt
 0000087C  A3 00000018 R	    MOV UserOption, EAX

 00000881  83 3D 00000018 R	    CMP UserOption, 1
	   01
 00000888  0F 84 00000083	    JE FastCash

 0000088E  83 3D 00000018 R	    CMP UserOption, 2
	   02
 00000895  0F 84 000000A0	    JE CashWithdrawal

 0000089B  83 3D 00000018 R	    CMP UserOption, 3
	   03
 000008A2  0F 84 000000BD	    JE Deposit

 000008A8  83 3D 00000018 R	    CMP UserOption, 4
	   04
 000008AF  0F 84 000000DA	    JE Transactions

 000008B5  83 3D 00000018 R	    CMP UserOption, 5
	   05
 000008BC  0F 84 000000F7	    JE AccountDetail

 000008C2  83 3D 00000018 R	    CMP UserOption, 6
	   06
 000008C9  0F 84 00000114	    JE ChangePIN

 000008CF  83 3D 00000018 R	    CMP UserOption, 7
	   07
 000008D6  0F 84 00000131	    JE UpdateAccountInfo

 000008DC  83 3D 00000018 R	    CMP UserOption, 8
	   08
 000008E3  0F 84 0000014E	    JE GenerateReceipt

 000008E9  83 3D 00000018 R	    CMP UserOption, 9
	   09
 000008F0  0F 84 0000016B	    JE LogOut

				    mWrite "        Invalid Choice..."
 00001EE2		     1		.data		
 00001EE2 20 20 20 20 20     1		??0054 BYTE "        Invalid Choice...",0	
	   20 20 20 49 6E
	   76 61 6C 69 64
	   20 43 68 6F 69
	   63 65 2E 2E 2E
	   00
 000008F6		     1		.code
 000008F6  52		     1		push	edx
 000008F7  BA 00001EE2 R     1		mov	edx,OFFSET ??0054
 000008FC  E8 00000000 E     1		call	WriteString
 00000901  5A		     1		pop	edx
 00000902  E8 00000000 E	    CALL WAITMSG
 00000907  E8 00000000 E	    CALL CLRSCR
 0000090C  E9 FFFFFE68		    JMP Back

 00000911			    FastCash:
 00000911  E8 00000000 E	        CALL CLRSCR
 00000916  E8 000002DA		        CALL QuickCash
 0000091B  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001EFC		     1		.data		
 00001EFC 09 09 09 20 20     1		??0055 BYTE "			  ",0	
	   00
 00000920		     1		.code
 00000920  52		     1		push	edx
 00000921  BA 00001EFC R     1		mov	edx,OFFSET ??0055
 00000926  E8 00000000 E     1		call	WriteString
 0000092B  5A		     1		pop	edx
 0000092C  E8 00000000 E	        CALL WAITMSG
 00000931  E8 00000000 E	        CALL CLRSCR
 00000936  E9 FFFFFE3E		        JMP Back

 0000093B			    CashWithdrawal:
 0000093B  E8 00000000 E	        CALL CLRSCR
 00000940  E8 000005E4		        CALL WithdrawalCash
 00000945  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F02		     1		.data		
 00001F02 09 09 09 20 20     1		??0056 BYTE "			  ",0	
	   00
 0000094A		     1		.code
 0000094A  52		     1		push	edx
 0000094B  BA 00001F02 R     1		mov	edx,OFFSET ??0056
 00000950  E8 00000000 E     1		call	WriteString
 00000955  5A		     1		pop	edx
 00000956  E8 00000000 E	        CALL WAITMSG
 0000095B  E8 00000000 E	        CALL CLRSCR
 00000960  E9 FFFFFE14		        JMP Back

 00000965			    Deposit:
 00000965  E8 00000000 E	        CALL CLRSCR
 0000096A  E8 0000083C		        CALL DepositCash
 0000096F  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F08		     1		.data		
 00001F08 09 09 09 20 20     1		??0057 BYTE "			  ",0	
	   00
 00000974		     1		.code
 00000974  52		     1		push	edx
 00000975  BA 00001F08 R     1		mov	edx,OFFSET ??0057
 0000097A  E8 00000000 E     1		call	WriteString
 0000097F  5A		     1		pop	edx
 00000980  E8 00000000 E	        CALL WAITMSG
 00000985  E8 00000000 E	        CALL CLRSCR
 0000098A  E9 FFFFFDEA		        JMP Back

 0000098F			    Transactions:
 0000098F  E8 00000000 E	        CALL CLRSCR
 00000994  E8 00000909		        CALL TransferAmount
 00000999  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F0E		     1		.data		
 00001F0E 09 09 09 20 20     1		??0058 BYTE "			  ",0	
	   00
 0000099E		     1		.code
 0000099E  52		     1		push	edx
 0000099F  BA 00001F0E R     1		mov	edx,OFFSET ??0058
 000009A4  E8 00000000 E     1		call	WriteString
 000009A9  5A		     1		pop	edx
 000009AA  E8 00000000 E	        CALL WAITMSG
 000009AF  E8 00000000 E	        CALL CLRSCR
 000009B4  E9 FFFFFDC0		        JMP Back

 000009B9			    AccountDetail:
 000009B9  E8 00000000 E	        CALL CLRSCR
 000009BE  E8 000009F7		        CALL AccountINFO
 000009C3  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F14		     1		.data		
 00001F14 09 09 09 20 20     1		??0059 BYTE "			  ",0	
	   00
 000009C8		     1		.code
 000009C8  52		     1		push	edx
 000009C9  BA 00001F14 R     1		mov	edx,OFFSET ??0059
 000009CE  E8 00000000 E     1		call	WriteString
 000009D3  5A		     1		pop	edx
 000009D4  E8 00000000 E	        CALL WAITMSG
 000009D9  E8 00000000 E	        CALL CLRSCR
 000009DE  E9 FFFFFD96		        JMP Back

 000009E3			    ChangePIN:
 000009E3  E8 00000000 E	        CALL CLRSCR
 000009E8  E8 00000AD2		        CALL ChangeUserPIN
 000009ED  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F1A		     1		.data		
 00001F1A 09 09 09 20 20     1		??005A BYTE "			  ",0	
	   00
 000009F2		     1		.code
 000009F2  52		     1		push	edx
 000009F3  BA 00001F1A R     1		mov	edx,OFFSET ??005A
 000009F8  E8 00000000 E     1		call	WriteString
 000009FD  5A		     1		pop	edx
 000009FE  E8 00000000 E	        CALL WAITMSG
 00000A03  E8 00000000 E	        CALL CLRSCR
 00000A08  E9 FFFFFD6C		        JMP Back

 00000A0D			    UpdateAccountInfo:
 00000A0D  E8 00000000 E	        CALL CLRSCR
 00000A12  E8 00000AFA		        CALL UpdateINFO
 00000A17  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F20		     1		.data		
 00001F20 09 09 09 20 20     1		??005B BYTE "			  ",0	
	   00
 00000A1C		     1		.code
 00000A1C  52		     1		push	edx
 00000A1D  BA 00001F20 R     1		mov	edx,OFFSET ??005B
 00000A22  E8 00000000 E     1		call	WriteString
 00000A27  5A		     1		pop	edx
 00000A28  E8 00000000 E	        CALL WAITMSG
 00000A2D  E8 00000000 E	        CALL CLRSCR
 00000A32  E9 FFFFFD42		        JMP Back

 00000A37			    GenerateReceipt:
 00000A37  E8 00000000 E	        CALL CLRSCR
 00000A3C  E8 00000D02		        CALL GenerateTransactionReceipt
 00000A41  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F26		     1		.data		
 00001F26 09 09 09 20 20     1		??005C BYTE "			  ",0	
	   00
 00000A46		     1		.code
 00000A46  52		     1		push	edx
 00000A47  BA 00001F26 R     1		mov	edx,OFFSET ??005C
 00000A4C  E8 00000000 E     1		call	WriteString
 00000A51  5A		     1		pop	edx
 00000A52  E8 00000000 E	        CALL WAITMSG
 00000A57  E8 00000000 E	        CALL CLRSCR
 00000A5C  E9 FFFFFD18		        JMP Back

 00000A61			    LogOut:
 00000A61  E8 00000000 E	        CALL CLRSCR
				        INVOKE Design
 00000A66  E8 FFFFF63E	   *	    call   Design
				        mWrite "			  THANKS FOR VISITING :)"
 00001F2C		     1		.data		
 00001F2C 09 09 09 20 20     1		??005D BYTE "			  THANKS FOR VISITING :)",0	
	   54 48 41 4E 4B
	   53 20 46 4F 52
	   20 56 49 53 49
	   54 49 4E 47 20
	   3A 29 00
 00000A6B		     1		.code
 00000A6B  52		     1		push	edx
 00000A6C  BA 00001F2C R     1		mov	edx,OFFSET ??005D
 00000A71  E8 00000000 E     1		call	WriteString
 00000A76  5A		     1		pop	edx
 00000A77  E8 00000000 E	        CALL CRLF
 00000A7C  E8 00000000 E	        CALL CRLF
				        mWrite "			  Logged Out Successfully!!!"
 00001F48		     1		.data		
 00001F48 09 09 09 20 20     1		??005E BYTE "			  Logged Out Successfully!!!",0	
	   4C 6F 67 67 65
	   64 20 4F 75 74
	   20 53 75 63 63
	   65 73 73 66 75
	   6C 6C 79 21 21
	   21 00
 00000A81		     1		.code
 00000A81  52		     1		push	edx
 00000A82  BA 00001F48 R     1		mov	edx,OFFSET ??005E
 00000A87  E8 00000000 E     1		call	WriteString
 00000A8C  5A		     1		pop	edx
 00000A8D  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00001F68		     1		.data		
 00001F68 09 09 09 20 20     1		??005F BYTE "			  ",0	
	   00
 00000A92		     1		.code
 00000A92  52		     1		push	edx
 00000A93  BA 00001F68 R     1		mov	edx,OFFSET ??005F
 00000A98  E8 00000000 E     1		call	WriteString
 00000A9D  5A		     1		pop	edx
 00000A9E  E8 00000000 E	        CALL WAITMSG
 00000AA3  E8 00000000 E	        CALL CLRSCR
 00000AA8  E8 00000D96		        CALL LoggedOut
 00000AAD			UserOperations ENDP

 00000AAD			HolderLoginFUNC PROC
 00000AAD			    l1:
 00000AAD  E8 00000000 E	    CALL CLRSCR
				    INVOKE Design
 00000AB2  E8 FFFFF5F2	   *	    call   Design
 00000AB7  B8 00000000		    MOV EAX, 0
 00000ABC  BB 00000000		    MOV EBX, 0
 00000AC1  B9 00000000		    MOV ECX, 0
				    mWrite "         [ ---------------- << LOGIN  INTERFACE >> ---------------- ]"
 00001F6E		     1		.data		
 00001F6E 20 20 20 20 20     1		??0060 BYTE "         [ ---------------- << LOGIN  INTERFACE >> ---------------- ]",0	
	   20 20 20 20 5B
	   20 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 20 3C 3C
	   20 4C 4F 47 49
	   4E 20 20 49 4E
	   54 45 52 46 41
	   43 45 20 3E 3E
	   20 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 20 5D 00
 00000AC6		     1		.code
 00000AC6  52		     1		push	edx
 00000AC7  BA 00001F6E R     1		mov	edx,OFFSET ??0060
 00000ACC  E8 00000000 E     1		call	WriteString
 00000AD1  5A		     1		pop	edx
 00000AD2  E8 00000000 E	    CALL CRLF
 00000AD7  E8 00000000 E	    CALL CRLF

				    mWrite "        "
 00001FB4		     1		.data		
 00001FB4 20 20 20 20 20     1		??0061 BYTE "        ",0	
	   20 20 20 00
 00000ADC		     1		.code
 00000ADC  52		     1		push	edx
 00000ADD  BA 00001FB4 R     1		mov	edx,OFFSET ??0061
 00000AE2  E8 00000000 E     1		call	WriteString
 00000AE7  5A		     1		pop	edx
				    mWrite " Enter Account Number: "
 00001FBD		     1		.data		
 00001FBD 20 45 6E 74 65     1		??0062 BYTE " Enter Account Number: ",0	
	   72 20 41 63 63
	   6F 75 6E 74 20
	   4E 75 6D 62 65
	   72 3A 20 00
 00000AE8		     1		.code
 00000AE8  52		     1		push	edx
 00000AE9  BA 00001FBD R     1		mov	edx,OFFSET ??0062
 00000AEE  E8 00000000 E     1		call	WriteString
 00000AF3  5A		     1		pop	edx
 00000AF4  B9 00000014		    MOV ECX, 20

 00000AF9  BA 00001401 R	    MOV EDX, OFFSET HolderUsername
 00000AFE  E8 00000000 E	    CALL readstring 
				    mWrite "        "
 00001FD5		     1		.data		
 00001FD5 20 20 20 20 20     1		??0063 BYTE "        ",0	
	   20 20 20 00
 00000B03		     1		.code
 00000B03  52		     1		push	edx
 00000B04  BA 00001FD5 R     1		mov	edx,OFFSET ??0063
 00000B09  E8 00000000 E     1		call	WriteString
 00000B0E  5A		     1		pop	edx

				    mWrite " Enter Yours PIN: "
 00001FDE		     1		.data		
 00001FDE 20 45 6E 74 65     1		??0064 BYTE " Enter Yours PIN: ",0	
	   72 20 59 6F 75
	   72 73 20 50 49
	   4E 3A 20 00
 00000B0F		     1		.code
 00000B0F  52		     1		push	edx
 00000B10  BA 00001FDE R     1		mov	edx,OFFSET ??0064
 00000B15  E8 00000000 E     1		call	WriteString
 00000B1A  5A		     1		pop	edx
 00000B1B  B9 00000014		    MOV ECX, 20
 00000B20  BA 000013ED R	    MOV EDX, OFFSET HolderPassword
 00000B25  E8 00000000 E	    CALL readstring

 00000B2A  E8 00000000 E	    CALL CRLF

 00000B2F  BF 00001401 R	    MOV EDI, OFFSET HolderUsername
 00000B34  BE 00001415 R	    MOV ESI, OFFSET StoredAccountID
 00000B39  A6			    CMPSB
 00000B3A  74 38		    JE s1
				    mWrite "        "
 00001FF1		     1		.data		
 00001FF1 20 20 20 20 20     1		??0065 BYTE "        ",0	
	   20 20 20 00
 00000B3C		     1		.code
 00000B3C  52		     1		push	edx
 00000B3D  BA 00001FF1 R     1		mov	edx,OFFSET ??0065
 00000B42  E8 00000000 E     1		call	WriteString
 00000B47  5A		     1		pop	edx
				    mWrite "[-] ERROR! HolderUsername or HolderPassword is incorrect, please try again... "
 00001FFA		     1		.data		
 00001FFA 5B 2D 5D 20 45     1		??0066 BYTE "[-] ERROR! HolderUsername or HolderPassword is incorrect, please try again... ",0	
	   52 52 4F 52 21
	   20 48 6F 6C 64
	   65 72 55 73 65
	   72 6E 61 6D 65
	   20 6F 72 20 48
	   6F 6C 64 65 72
	   50 61 73 73 77
	   6F 72 64 20 69
	   73 20 69 6E 63
	   6F 72 72 65 63
	   74 2C 20 70 6C
	   65 61 73 65 20
	   74 72 79 20 61
	   67 61 69 6E 2E
	   2E 2E 20 00
 00000B48		     1		.code
 00000B48  52		     1		push	edx
 00000B49  BA 00001FFA R     1		mov	edx,OFFSET ??0066
 00000B4E  E8 00000000 E     1		call	WriteString
 00000B53  5A		     1		pop	edx
 00000B54  E8 00000000 E	    CALL CRLF
				    mWrite "        "
 00002049		     1		.data		
 00002049 20 20 20 20 20     1		??0067 BYTE "        ",0	
	   20 20 20 00
 00000B59		     1		.code
 00000B59  52		     1		push	edx
 00000B5A  BA 00002049 R     1		mov	edx,OFFSET ??0067
 00000B5F  E8 00000000 E     1		call	WriteString
 00000B64  5A		     1		pop	edx
 00000B65  E8 00000000 E	    CALL WAITMSG
 00000B6A  E8 00000000 E	    CALL CRLF
 00000B6F  E9 FFFFFF39		    JMP l1

 00000B74			    s1:
 00000B74  BE 000013ED R	    MOV ESI, OFFSET HolderPassword
 00000B79  BF 00001421 R	    MOV EDI, OFFSET StoredPIN
 00000B7E  A6			    CMPSB
 00000B7F  74 47		    JE s2
				    mWrite "        "
 00002052		     1		.data		
 00002052 20 20 20 20 20     1		??0068 BYTE "        ",0	
	   20 20 20 00
 00000B81		     1		.code
 00000B81  52		     1		push	edx
 00000B82  BA 00002052 R     1		mov	edx,OFFSET ??0068
 00000B87  E8 00000000 E     1		call	WriteString
 00000B8C  5A		     1		pop	edx
				    mWrite " [-] ERROR! HolderUsername or HolderPassword is incorrect, please try again... "
 0000205B		     1		.data		
 0000205B 20 5B 2D 5D 20     1		??0069 BYTE " [-] ERROR! HolderUsername or HolderPassword is incorrect, please try again... ",0	
	   45 52 52 4F 52
	   21 20 48 6F 6C
	   64 65 72 55 73
	   65 72 6E 61 6D
	   65 20 6F 72 20
	   48 6F 6C 64 65
	   72 50 61 73 73
	   77 6F 72 64 20
	   69 73 20 69 6E
	   63 6F 72 72 65
	   63 74 2C 20 70
	   6C 65 61 73 65
	   20 74 72 79 20
	   61 67 61 69 6E
	   2E 2E 2E 20 00
 00000B8D		     1		.code
 00000B8D  52		     1		push	edx
 00000B8E  BA 0000205B R     1		mov	edx,OFFSET ??0069
 00000B93  E8 00000000 E     1		call	WriteString
 00000B98  5A		     1		pop	edx
 00000B99  E8 00000000 E	    CALL CRLF
				     mWrite "         Do you want to try again? (1 = Yes, 0 = No): "
 000020AB		     1		.data		
 000020AB 20 20 20 20 20     1		??006A BYTE "         Do you want to try again? (1 = Yes, 0 = No): ",0	
	   20 20 20 20 44
	   6F 20 79 6F 75
	   20 77 61 6E 74
	   20 74 6F 20 74
	   72 79 20 61 67
	   61 69 6E 3F 20
	   28 31 20 3D 20
	   59 65 73 2C 20
	   30 20 3D 20 4E
	   6F 29 3A 20 00
 00000B9E		     1		.code
 00000B9E  52		     1		push	edx
 00000B9F  BA 000020AB R     1		mov	edx,OFFSET ??006A
 00000BA4  E8 00000000 E     1		call	WriteString
 00000BA9  5A		     1		pop	edx
 00000BAA  E8 00000000 E	    CALL Readint
 00000BAF  A3 00001469 R	    MOV HolderLogChoice, EAX
 00000BB4  E8 00000000 E		CALL CLRSCR
 00000BB9  83 3D 00001469 R	    CMP HolderLogChoice, 1
	   01
 00000BC0  0F 84 FFFFFEE7	    JE l1  ; User wants to try again

 00000BC6  EB 2C		    JMP end_it
				  

 00000BC8			    s2:
				    mWrite "        "
 000020E2		     1		.data		
 000020E2 20 20 20 20 20     1		??006B BYTE "        ",0	
	   20 20 20 00
 00000BC8		     1		.code
 00000BC8  52		     1		push	edx
 00000BC9  BA 000020E2 R     1		mov	edx,OFFSET ??006B
 00000BCE  E8 00000000 E     1		call	WriteString
 00000BD3  5A		     1		pop	edx
				    mWrite " [+] <<|>> Checking Entered Credentials...!!! <<|>> [+]"
 000020EB		     1		.data		
 000020EB 20 5B 2B 5D 20     1		??006C BYTE " [+] <<|>> Checking Entered Credentials...!!! <<|>> [+]",0	
	   3C 3C 7C 3E 3E
	   20 43 68 65 63
	   6B 69 6E 67 20
	   45 6E 74 65 72
	   65 64 20 43 72
	   65 64 65 6E 74
	   69 61 6C 73 2E
	   2E 2E 21 21 21
	   20 3C 3C 7C 3E
	   3E 20 5B 2B 5D
	   00
 00000BD4		     1		.code
 00000BD4  52		     1		push	edx
 00000BD5  BA 000020EB R     1		mov	edx,OFFSET ??006C
 00000BDA  E8 00000000 E     1		call	WriteString
 00000BDF  5A		     1		pop	edx

 00000BE0  E8 00000000 E	    CALL CRLF
 00000BE5  B8 00000FA0		    MOV EAX, 4000
 00000BEA  E8 00000000 E	    CALL delay
				    INVOKE UserOperations
 00000BEF  E8 FFFFFB54	   *	    call   UserOperations
 00000BF4			    end_it:
 00000BF4  C3			    RET
 00000BF5			HolderLoginFUNC ENDP




 00000BF5			QuickCash PROC
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00002123		     1		.data		
 00002123 2A 5F 20 2A 20     1		??006D BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 00000BF5		     1		.code
 00000BF5  52		     1		push	edx
 00000BF6  BA 00002123 R     1		mov	edx,OFFSET ??006D
 00000BFB  E8 00000000 E     1		call	WriteString
 00000C00  5A		     1		pop	edx
 00000C01  E8 00000000 E	    CALL CRLF
				    mWrite "			  Account Number: "
 00002195		     1		.data		
 00002195 09 09 09 20 20     1		??006E BYTE "			  Account Number: ",0	
	   41 63 63 6F 75
	   6E 74 20 4E 75
	   6D 62 65 72 3A
	   20 00
 00000C06		     1		.code
 00000C06  52		     1		push	edx
 00000C07  BA 00002195 R     1		mov	edx,OFFSET ??006E
 00000C0C  E8 00000000 E     1		call	WriteString
 00000C11  5A		     1		pop	edx
 00000C12  BA 00001415 R	    MOV EDX, OFFSET StoredAccountID
 00000C17  E8 00000000 E	    CALL WriteString
 00000C1C  E8 00000000 E	    CALL CRLF
 00000C21  E8 00000000 E	    CALL CRLF
				    mWrite "			  Current Balance: "
 000021AB		     1		.data		
 000021AB 09 09 09 20 20     1		??006F BYTE "			  Current Balance: ",0	
	   43 75 72 72 65
	   6E 74 20 42 61
	   6C 61 6E 63 65
	   3A 20 00
 00000C26		     1		.code
 00000C26  52		     1		push	edx
 00000C27  BA 000021AB R     1		mov	edx,OFFSET ??006F
 00000C2C  E8 00000000 E     1		call	WriteString
 00000C31  5A		     1		pop	edx
 00000C32  A1 00001465 R	    MOV EAX, StoredAmount
 00000C37  E8 00000000 E	    CALL WriteDec
 00000C3C  E8 00000000 E	    CALL CRLF
 00000C41  E8 00000000 E	    CALL CRLF
 00000C46  E8 00000000 E	    CALL CRLF

				    ; Check balance for Quick Cash
				    .if (StoredAmount > 500)
 00000C4B  81 3D 00001465 R
	   000001F4	   *	    cmp    StoredAmount, 001F4h
 00000C55  0F 86 000000B4  *	    jbe    @C0001
				        mWrite "			  Please select the Withdrawal amount:"
 000021C2		     1		.data		
 000021C2 09 09 09 20 20     1		??0070 BYTE "			  Please select the Withdrawal amount:",0	
	   50 6C 65 61 73
	   65 20 73 65 6C
	   65 63 74 20 74
	   68 65 20 57 69
	   74 68 64 72 61
	   77 61 6C 20 61
	   6D 6F 75 6E 74
	   3A 00
 00000C5B		     1		.code
 00000C5B  52		     1		push	edx
 00000C5C  BA 000021C2 R     1		mov	edx,OFFSET ??0070
 00000C61  E8 00000000 E     1		call	WriteString
 00000C66  5A		     1		pop	edx
 00000C67  E8 00000000 E	        CALL CRLF
 00000C6C  E8 00000000 E	        CALL CRLF
				        mWrite "			  1. Rs. 500"        
 000021EC		     1		.data		
 000021EC 09 09 09 20 20     1		??0071 BYTE "			  1. Rs. 500",0	
	   31 2E 20 52 73
	   2E 20 35 30 30
	   00
 00000C71		     1		.code
 00000C71  52		     1		push	edx
 00000C72  BA 000021EC R     1		mov	edx,OFFSET ??0071
 00000C77  E8 00000000 E     1		call	WriteString
 00000C7C  5A		     1		pop	edx
 00000C7D  E8 00000000 E	        CALL CRLF
 00000C82  E8 00000000 E	        CALL CRLF
				        mWrite "			  2. Rs. 1000 "     
 000021FC		     1		.data		
 000021FC 09 09 09 20 20     1		??0072 BYTE "			  2. Rs. 1000 ",0	
	   32 2E 20 52 73
	   2E 20 31 30 30
	   30 20 00
 00000C87		     1		.code
 00000C87  52		     1		push	edx
 00000C88  BA 000021FC R     1		mov	edx,OFFSET ??0072
 00000C8D  E8 00000000 E     1		call	WriteString
 00000C92  5A		     1		pop	edx
 00000C93  E8 00000000 E	        CALL CRLF
 00000C98  E8 00000000 E	        CALL CRLF
				        mWrite "			  3. Rs. 1500 "  
 0000220E		     1		.data		
 0000220E 09 09 09 20 20     1		??0073 BYTE "			  3. Rs. 1500 ",0	
	   33 2E 20 52 73
	   2E 20 31 35 30
	   30 20 00
 00000C9D		     1		.code
 00000C9D  52		     1		push	edx
 00000C9E  BA 0000220E R     1		mov	edx,OFFSET ??0073
 00000CA3  E8 00000000 E     1		call	WriteString
 00000CA8  5A		     1		pop	edx
 00000CA9  E8 00000000 E	        CALL CRLF
 00000CAE  E8 00000000 E	        CALL CRLF
				        mWrite "			  4. Rs. 2000 "  
 00002220		     1		.data		
 00002220 09 09 09 20 20     1		??0074 BYTE "			  4. Rs. 2000 ",0	
	   34 2E 20 52 73
	   2E 20 32 30 30
	   30 20 00
 00000CB3		     1		.code
 00000CB3  52		     1		push	edx
 00000CB4  BA 00002220 R     1		mov	edx,OFFSET ??0074
 00000CB9  E8 00000000 E     1		call	WriteString
 00000CBE  5A		     1		pop	edx
 00000CBF  E8 00000000 E	        CALL CRLF
 00000CC4  E8 00000000 E	        CALL CRLF
				        mWrite "			  5. Rs. 2500 "  
 00002232		     1		.data		
 00002232 09 09 09 20 20     1		??0075 BYTE "			  5. Rs. 2500 ",0	
	   35 2E 20 52 73
	   2E 20 32 35 30
	   30 20 00
 00000CC9		     1		.code
 00000CC9  52		     1		push	edx
 00000CCA  BA 00002232 R     1		mov	edx,OFFSET ??0075
 00000CCF  E8 00000000 E     1		call	WriteString
 00000CD4  5A		     1		pop	edx
 00000CD5  E8 00000000 E	        CALL CRLF
 00000CDA  E8 00000000 E	        CALL CRLF
				        mWrite "			  6. Rs. 3000 "  
 00002244		     1		.data		
 00002244 09 09 09 20 20     1		??0076 BYTE "			  6. Rs. 3000 ",0	
	   36 2E 20 52 73
	   2E 20 33 30 30
	   30 20 00
 00000CDF		     1		.code
 00000CDF  52		     1		push	edx
 00000CE0  BA 00002244 R     1		mov	edx,OFFSET ??0076
 00000CE5  E8 00000000 E     1		call	WriteString
 00000CEA  5A		     1		pop	edx
 00000CEB  E8 00000000 E	        CALL CRLF
 00000CF0  E8 00000000 E	        CALL CRLF 
				        mWrite "			  Your choice: "
 00002256		     1		.data		
 00002256 09 09 09 20 20     1		??0077 BYTE "			  Your choice: ",0	
	   59 6F 75 72 20
	   63 68 6F 69 63
	   65 3A 20 00
 00000CF5		     1		.code
 00000CF5  52		     1		push	edx
 00000CF6  BA 00002256 R     1		mov	edx,OFFSET ??0077
 00000CFB  E8 00000000 E     1		call	WriteString
 00000D00  5A		     1		pop	edx
 00000D01  E8 00000000 E	        CALL ReadDec
 00000D06  A3 00001471 R	        MOV fcashChoice, EAX ; Store user's choice in fcashChoice
 00000D0B  EB 24		        JMP FastCash
				    .else 
 00000D0D  EB 22	   *	    jmp    @C0003
 00000D0F		   *@C0001:
				        mWrite "			  Your balance does not meet the minimum requirement for Quick Cash."
 00002269		     1		.data		
 00002269 09 09 09 20 20     1		??0078 BYTE "			  Your balance does not meet the minimum requirement for Quick Cash.",0	
	   59 6F 75 72 20
	   62 61 6C 61 6E
	   63 65 20 64 6F
	   65 73 20 6E 6F
	   74 20 6D 65 65
	   74 20 74 68 65
	   20 6D 69 6E 69
	   6D 75 6D 20 72
	   65 71 75 69 72
	   65 6D 65 6E 74
	   20 66 6F 72 20
	   51 75 69 63 6B
	   20 43 61 73 68
	   2E 00
 00000D0F		     1		.code
 00000D0F  52		     1		push	edx
 00000D10  BA 00002269 R     1		mov	edx,OFFSET ??0078
 00000D15  E8 00000000 E     1		call	WriteString
 00000D1A  5A		     1		pop	edx
 00000D1B  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 000022B1		     1		.data		
 000022B1 09 09 09 20 20     1		??0079 BYTE "			  ",0	
	   00
 00000D20		     1		.code
 00000D20  52		     1		push	edx
 00000D21  BA 000022B1 R     1		mov	edx,OFFSET ??0079
 00000D26  E8 00000000 E     1		call	WriteString
 00000D2B  5A		     1		pop	edx
 00000D2C  E9 000001F7		        JMP EndQuickCash
				    .endif
 00000D31		   *@C0003:

 00000D31			FastCash:
				    ; Assuming fcashChoice is in EAX
 00000D31  83 F8 01		    CMP EAX, 1
 00000D34  74 2E		    JE Withdraw500
 00000D36  83 F8 02		    CMP EAX, 2
 00000D39  74 68		    JE Withdraw1000
 00000D3B  83 F8 03		    CMP EAX, 3
 00000D3E  0F 84 0000009E	    JE Withdraw1500
 00000D44  83 F8 04		    CMP EAX, 4
 00000D47  0F 84 000000D4	    JE Withdraw2000
 00000D4D  83 F8 05		    CMP EAX, 5
 00000D50  0F 84 0000010A	    JE Withdraw2500
 00000D56  83 F8 06		    CMP EAX, 6
 00000D59  0F 84 00000139	    JE Withdraw3000

				    ; Default case (if fcashChoice is not 1-6)
 00000D5F  E9 00000198		    JMP InvalidChoice

 00000D64			Withdraw500:
 00000D64  81 3D 00001465 R	    CMP StoredAmount, 500
	   000001F4
 00000D6E  0F 8C 0000015C	    JL InsufficientBalance
 00000D74  81 2D 00001465 R	    SUB StoredAmount, 500
	   000001F4
				    mWrite "			  Processing withdrawal of Rs. 500..."
 000022B7		     1		.data		
 000022B7 09 09 09 20 20     1		??007A BYTE "			  Processing withdrawal of Rs. 500...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 35
	   30 30 2E 2E 2E
	   00
 00000D7E		     1		.code
 00000D7E  52		     1		push	edx
 00000D7F  BA 000022B7 R     1		mov	edx,OFFSET ??007A
 00000D84  E8 00000000 E     1		call	WriteString
 00000D89  5A		     1		pop	edx
 00000D8A  B8 00000FA0		    MOV EAX, 4000
 00000D8F  81 05 00001485 R	    ADD GenerateBalance, 500  
	   000001F4
 00000D99  E8 00000000 E	    CALL delay
 00000D9E  E9 00000163		    JMP DoneWithdrawal

 00000DA3			Withdraw1000:
 00000DA3  81 3D 00001465 R	    CMP StoredAmount, 1000
	   000003E8
 00000DAD  0F 8C 0000011D	    JL InsufficientBalance
 00000DB3  81 2D 00001465 R	    SUB StoredAmount, 1000
	   000003E8
				    mWrite "			  Processing withdrawal of Rs. 1000..."
 000022E0		     1		.data		
 000022E0 09 09 09 20 20     1		??007B BYTE "			  Processing withdrawal of Rs. 1000...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 31
	   30 30 30 2E 2E
	   2E 00
 00000DBD		     1		.code
 00000DBD  52		     1		push	edx
 00000DBE  BA 000022E0 R     1		mov	edx,OFFSET ??007B
 00000DC3  E8 00000000 E     1		call	WriteString
 00000DC8  5A		     1		pop	edx
 00000DC9  B8 00000FA0		    MOV EAX, 4000
 00000DCE  81 05 00001485 R	    ADD GenerateBalance, 1000
	   000003E8
 00000DD8  E8 00000000 E	    CALL delay
 00000DDD  E9 00000124		    JMP DoneWithdrawal

 00000DE2			Withdraw1500:
 00000DE2  81 3D 00001465 R	    CMP StoredAmount, 1500
	   000005DC
 00000DEC  0F 8C 000000DE	    JL InsufficientBalance
 00000DF2  81 2D 00001465 R	    SUB StoredAmount, 1500
	   000005DC
				    mWrite "			  Processing withdrawal of Rs. 1500..."
 0000230A		     1		.data		
 0000230A 09 09 09 20 20     1		??007C BYTE "			  Processing withdrawal of Rs. 1500...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 31
	   35 30 30 2E 2E
	   2E 00
 00000DFC		     1		.code
 00000DFC  52		     1		push	edx
 00000DFD  BA 0000230A R     1		mov	edx,OFFSET ??007C
 00000E02  E8 00000000 E     1		call	WriteString
 00000E07  5A		     1		pop	edx
 00000E08  B8 00000FA0		    MOV EAX, 4000
 00000E0D  81 05 00001485 R	    ADD GenerateBalance, 1500
	   000005DC
 00000E17  E8 00000000 E	    CALL delay
 00000E1C  E9 000000E5		    JMP DoneWithdrawal

 00000E21			Withdraw2000:
 00000E21  81 3D 00001465 R	    CMP StoredAmount, 2000
	   000007D0
 00000E2B  0F 8C 0000009F	    JL InsufficientBalance
 00000E31  81 2D 00001465 R	    SUB StoredAmount, 2000
	   000007D0
				    mWrite "			  Processing withdrawal of Rs. 2000..."
 00002334		     1		.data		
 00002334 09 09 09 20 20     1		??007D BYTE "			  Processing withdrawal of Rs. 2000...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 32
	   30 30 30 2E 2E
	   2E 00
 00000E3B		     1		.code
 00000E3B  52		     1		push	edx
 00000E3C  BA 00002334 R     1		mov	edx,OFFSET ??007D
 00000E41  E8 00000000 E     1		call	WriteString
 00000E46  5A		     1		pop	edx
 00000E47  B8 00000FA0		    MOV EAX, 4000
 00000E4C  81 05 00001485 R	    ADD GenerateBalance, 2000
	   000007D0
 00000E56  E8 00000000 E	    CALL delay
 00000E5B  E9 000000A6		    JMP DoneWithdrawal

 00000E60			Withdraw2500:
 00000E60  81 3D 00001465 R	    CMP StoredAmount, 2500
	   000009C4
 00000E6A  7C 64		    JL InsufficientBalance
 00000E6C  81 2D 00001465 R	    SUB StoredAmount, 2500
	   000009C4
				    mWrite "			  Processing withdrawal of Rs. 2500..."
 0000235E		     1		.data		
 0000235E 09 09 09 20 20     1		??007E BYTE "			  Processing withdrawal of Rs. 2500...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 32
	   35 30 30 2E 2E
	   2E 00
 00000E76		     1		.code
 00000E76  52		     1		push	edx
 00000E77  BA 0000235E R     1		mov	edx,OFFSET ??007E
 00000E7C  E8 00000000 E     1		call	WriteString
 00000E81  5A		     1		pop	edx
 00000E82  B8 00000FA0		    MOV EAX, 4000
 00000E87  81 05 00001485 R	    ADD GenerateBalance, 2500
	   000009C4
 00000E91  E8 00000000 E	    CALL delay
 00000E96  EB 6E		    JMP DoneWithdrawal

 00000E98			Withdraw3000:
 00000E98  81 3D 00001465 R	    CMP StoredAmount, 3000
	   00000BB8
 00000EA2  7C 2C		    JL InsufficientBalance
 00000EA4  81 2D 00001465 R	    SUB StoredAmount, 3000
	   00000BB8
				    mWrite "			  Processing withdrawal of Rs. 3000..."
 00002388		     1		.data		
 00002388 09 09 09 20 20     1		??007F BYTE "			  Processing withdrawal of Rs. 3000...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 33
	   30 30 30 2E 2E
	   2E 00
 00000EAE		     1		.code
 00000EAE  52		     1		push	edx
 00000EAF  BA 00002388 R     1		mov	edx,OFFSET ??007F
 00000EB4  E8 00000000 E     1		call	WriteString
 00000EB9  5A		     1		pop	edx
 00000EBA  B8 00000FA0		    MOV EAX, 4000
 00000EBF  81 05 00001485 R	    ADD GenerateBalance, 3000
	   00000BB8
 00000EC9  E8 00000000 E	    CALL delay
 00000ECE  EB 36		    JMP DoneWithdrawal

 00000ED0			InsufficientBalance:
				    mWrite "			  Insufficient balance. Try another amount."
 000023B2		     1		.data		
 000023B2 09 09 09 20 20     1		??0080 BYTE "			  Insufficient balance. Try another amount.",0	
	   49 6E 73 75 66
	   66 69 63 69 65
	   6E 74 20 62 61
	   6C 61 6E 63 65
	   2E 20 54 72 79
	   20 61 6E 6F 74
	   68 65 72 20 61
	   6D 6F 75 6E 74
	   2E 00
 00000ED0		     1		.code
 00000ED0  52		     1		push	edx
 00000ED1  BA 000023B2 R     1		mov	edx,OFFSET ??0080
 00000ED6  E8 00000000 E     1		call	WriteString
 00000EDB  5A		     1		pop	edx
 00000EDC  E8 00000000 E	    CALL CRLF
				    mWrite "			  "
 000023E1		     1		.data		
 000023E1 09 09 09 20 20     1		??0081 BYTE "			  ",0	
	   00
 00000EE1		     1		.code
 00000EE1  52		     1		push	edx
 00000EE2  BA 000023E1 R     1		mov	edx,OFFSET ??0081
 00000EE7  E8 00000000 E     1		call	WriteString
 00000EEC  5A		     1		pop	edx
 00000EED  E8 00000000 E	    CALL WAITMSG
 00000EF2  E8 00000000 E	    CALL CLRSCR
 00000EF7  E9 FFFFFCF9		    JMP QuickCash

 00000EFC			InvalidChoice:
 00000EFC  E8 00000000 E	    CALL CLRSCR
 00000F01  E9 FFFFFCEF		    JMP QuickCash

 00000F06			DoneWithdrawal:
 00000F06  E8 00000000 E	    CALL CRLF
 00000F0B  E8 00000000 E	    CALL CRLF 
				    mWrite "			  Remaining Balance : "      
 000023E7		     1		.data		
 000023E7 09 09 09 20 20     1		??0082 BYTE "			  Remaining Balance : ",0	
	   52 65 6D 61 69
	   6E 69 6E 67 20
	   42 61 6C 61 6E
	   63 65 20 3A 20
	   00
 00000F10		     1		.code
 00000F10  52		     1		push	edx
 00000F11  BA 000023E7 R     1		mov	edx,OFFSET ??0082
 00000F16  E8 00000000 E     1		call	WriteString
 00000F1B  5A		     1		pop	edx
 00000F1C  A1 00001465 R	    MOV EAX, StoredAmount
 00000F21  E8 00000000 E	    CALL WriteDec
 00000F26  EB 00		    JMP EndQuickCash

 00000F28			EndQuickCash:
 00000F28  C3			    RET
 00000F29			QuickCash ENDP

 00000F29			WithdrawalCash PROC
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00002401		     1		.data		
 00002401 2A 5F 20 2A 20     1		??0083 BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 00000F29		     1		.code
 00000F29  52		     1		push	edx
 00000F2A  BA 00002401 R     1		mov	edx,OFFSET ??0083
 00000F2F  E8 00000000 E     1		call	WriteString
 00000F34  5A		     1		pop	edx
 00000F35  E8 00000000 E	    CALL CRLF
				    mWrite "			  Account Number: "
 00002473		     1		.data		
 00002473 09 09 09 20 20     1		??0084 BYTE "			  Account Number: ",0	
	   41 63 63 6F 75
	   6E 74 20 4E 75
	   6D 62 65 72 3A
	   20 00
 00000F3A		     1		.code
 00000F3A  52		     1		push	edx
 00000F3B  BA 00002473 R     1		mov	edx,OFFSET ??0084
 00000F40  E8 00000000 E     1		call	WriteString
 00000F45  5A		     1		pop	edx
 00000F46  BA 00001415 R	    MOV EDX, OFFSET StoredAccountID
 00000F4B  E8 00000000 E	    CALL WriteString
 00000F50  E8 00000000 E	    CALL CRLF
 00000F55  E8 00000000 E	    CALL CRLF
				    mWrite "			  Current Balance: "
 00002489		     1		.data		
 00002489 09 09 09 20 20     1		??0085 BYTE "			  Current Balance: ",0	
	   43 75 72 72 65
	   6E 74 20 42 61
	   6C 61 6E 63 65
	   3A 20 00
 00000F5A		     1		.code
 00000F5A  52		     1		push	edx
 00000F5B  BA 00002489 R     1		mov	edx,OFFSET ??0085
 00000F60  E8 00000000 E     1		call	WriteString
 00000F65  5A		     1		pop	edx
 00000F66  A1 00001465 R	    MOV EAX, StoredAmount
 00000F6B  E8 00000000 E	    CALL WriteDec
 00000F70  E8 00000000 E	    CALL CRLF
 00000F75  E8 00000000 E	    CALL CRLF
 00000F7A  E8 00000000 E	    CALL CRLF

				    ; Check balance for Withdraw Cash
				    .if (StoredAmount > 500)
 00000F7F  81 3D 00001465 R
	   000001F4	   *	    cmp    StoredAmount, 001F4h
 00000F89  0F 86 00000088  *	    jbe    @C0004
				        mWrite "			  Please select the Withdrawal amount:"
 000024A0		     1		.data		
 000024A0 09 09 09 20 20     1		??0086 BYTE "			  Please select the Withdrawal amount:",0	
	   50 6C 65 61 73
	   65 20 73 65 6C
	   65 63 74 20 74
	   68 65 20 57 69
	   74 68 64 72 61
	   77 61 6C 20 61
	   6D 6F 75 6E 74
	   3A 00
 00000F8F		     1		.code
 00000F8F  52		     1		push	edx
 00000F90  BA 000024A0 R     1		mov	edx,OFFSET ??0086
 00000F95  E8 00000000 E     1		call	WriteString
 00000F9A  5A		     1		pop	edx
 00000F9B  E8 00000000 E	        CALL CRLF
 00000FA0  E8 00000000 E	        CALL CRLF
				        mWrite "			  1. Rs. 200"        
 000024CA		     1		.data		
 000024CA 09 09 09 20 20     1		??0087 BYTE "			  1. Rs. 200",0	
	   31 2E 20 52 73
	   2E 20 32 30 30
	   00
 00000FA5		     1		.code
 00000FA5  52		     1		push	edx
 00000FA6  BA 000024CA R     1		mov	edx,OFFSET ??0087
 00000FAB  E8 00000000 E     1		call	WriteString
 00000FB0  5A		     1		pop	edx
 00000FB1  E8 00000000 E	        CALL CRLF
 00000FB6  E8 00000000 E	        CALL CRLF
				        mWrite "			  2. Rs. 500 "     
 000024DA		     1		.data		
 000024DA 09 09 09 20 20     1		??0088 BYTE "			  2. Rs. 500 ",0	
	   32 2E 20 52 73
	   2E 20 35 30 30
	   20 00
 00000FBB		     1		.code
 00000FBB  52		     1		push	edx
 00000FBC  BA 000024DA R     1		mov	edx,OFFSET ??0088
 00000FC1  E8 00000000 E     1		call	WriteString
 00000FC6  5A		     1		pop	edx
 00000FC7  E8 00000000 E	        CALL CRLF
 00000FCC  E8 00000000 E	        CALL CRLF
				        mWrite "			  3. Rs. 700 "  
 000024EB		     1		.data		
 000024EB 09 09 09 20 20     1		??0089 BYTE "			  3. Rs. 700 ",0	
	   33 2E 20 52 73
	   2E 20 37 30 30
	   20 00
 00000FD1		     1		.code
 00000FD1  52		     1		push	edx
 00000FD2  BA 000024EB R     1		mov	edx,OFFSET ??0089
 00000FD7  E8 00000000 E     1		call	WriteString
 00000FDC  5A		     1		pop	edx
 00000FDD  E8 00000000 E	        CALL CRLF
 00000FE2  E8 00000000 E	        CALL CRLF
				        mWrite "			  4. Other Amount "  
 000024FC		     1		.data		
 000024FC 09 09 09 20 20     1		??008A BYTE "			  4. Other Amount ",0	
	   34 2E 20 4F 74
	   68 65 72 20 41
	   6D 6F 75 6E 74
	   20 00
 00000FE7		     1		.code
 00000FE7  52		     1		push	edx
 00000FE8  BA 000024FC R     1		mov	edx,OFFSET ??008A
 00000FED  E8 00000000 E     1		call	WriteString
 00000FF2  5A		     1		pop	edx
 00000FF3  E8 00000000 E	        CALL CRLF
 00000FF8  E8 00000000 E	        CALL CRLF
				       
				        mWrite "			  Your choice: "
 00002512		     1		.data		
 00002512 09 09 09 20 20     1		??008B BYTE "			  Your choice: ",0	
	   59 6F 75 72 20
	   63 68 6F 69 63
	   65 3A 20 00
 00000FFD		     1		.code
 00000FFD  52		     1		push	edx
 00000FFE  BA 00002512 R     1		mov	edx,OFFSET ??008B
 00001003  E8 00000000 E     1		call	WriteString
 00001008  5A		     1		pop	edx
 00001009  E8 00000000 E	        CALL ReadDec
 0000100E  A3 00001479 R	        MOV wdcashChoice, EAX ; Store user's choice in wdcashChoice
 00001013  EB 24		        JMP FastCash
				    .else 
 00001015  EB 22	   *	    jmp    @C0006
 00001017		   *@C0004:
				        mWrite "			  Your balance does not meet the minimum requirement for Withdrawal Cash."
 00002525		     1		.data		
 00002525 09 09 09 20 20     1		??008C BYTE "			  Your balance does not meet the minimum requirement for Withdrawal Cash.",0	
	   59 6F 75 72 20
	   62 61 6C 61 6E
	   63 65 20 64 6F
	   65 73 20 6E 6F
	   74 20 6D 65 65
	   74 20 74 68 65
	   20 6D 69 6E 69
	   6D 75 6D 20 72
	   65 71 75 69 72
	   65 6D 65 6E 74
	   20 66 6F 72 20
	   57 69 74 68 64
	   72 61 77 61 6C
	   20 43 61 73 68
	   2E 00
 00001017		     1		.code
 00001017  52		     1		push	edx
 00001018  BA 00002525 R     1		mov	edx,OFFSET ??008C
 0000101D  E8 00000000 E     1		call	WriteString
 00001022  5A		     1		pop	edx
 00001023  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00002572		     1		.data		
 00002572 09 09 09 20 20     1		??008D BYTE "			  ",0	
	   00
 00001028		     1		.code
 00001028  52		     1		push	edx
 00001029  BA 00002572 R     1		mov	edx,OFFSET ??008D
 0000102E  E8 00000000 E     1		call	WriteString
 00001033  5A		     1		pop	edx
 00001034  E9 00000171		        JMP EndWithdraw
				    .endif
 00001039		   *@C0006:

 00001039			FastCash:
				    ; Assuming wdcashChoice is in EAX
 00001039  83 F8 01		    CMP EAX, 1
 0000103C  74 1C		    JE Withdraw200
 0000103E  83 F8 02		    CMP EAX, 2
 00001041  74 56		    JE Withdraw500
 00001043  83 F8 03		    CMP EAX, 3
 00001046  0F 84 0000008C	    JE Withdraw700
 0000104C  83 F8 04		    CMP EAX, 4
 0000104F  0F 84 000000BB	    JE WithdrawOtherAmount


				    ; Default case (if wdcashChoice is not 1-4)
 00001055  E9 00000124		    JMP InvalidChoice

 0000105A			Withdraw200:
 0000105A  81 3D 00001465 R	    CMP StoredAmount, 200
	   000000C8
 00001064  0F 8C 000000E8	    JL InsufficientBalance
 0000106A  81 2D 00001465 R	    SUB StoredAmount, 200
	   000000C8
				    mWrite "			  Processing withdrawal of Rs. 200..."
 00002578		     1		.data		
 00002578 09 09 09 20 20     1		??008E BYTE "			  Processing withdrawal of Rs. 200...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 32
	   30 30 2E 2E 2E
	   00
 00001074		     1		.code
 00001074  52		     1		push	edx
 00001075  BA 00002578 R     1		mov	edx,OFFSET ??008E
 0000107A  E8 00000000 E     1		call	WriteString
 0000107F  5A		     1		pop	edx
 00001080  B8 00000FA0		    MOV EAX, 4000
 00001085  81 05 00001485 R	    ADD GenerateBalance, 200
	   000000C8
 0000108F  E8 00000000 E	    CALL delay
 00001094  E9 000000EF		    JMP DoneWithdrawal

 00001099			Withdraw500:
 00001099  81 3D 00001465 R	    CMP StoredAmount, 500
	   000001F4
 000010A3  0F 8C 000000A9	    JL InsufficientBalance
 000010A9  81 2D 00001465 R	    SUB StoredAmount, 500
	   000001F4
				    mWrite "			  Processing withdrawal of Rs. 500..."
 000025A1		     1		.data		
 000025A1 09 09 09 20 20     1		??008F BYTE "			  Processing withdrawal of Rs. 500...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 35
	   30 30 2E 2E 2E
	   00
 000010B3		     1		.code
 000010B3  52		     1		push	edx
 000010B4  BA 000025A1 R     1		mov	edx,OFFSET ??008F
 000010B9  E8 00000000 E     1		call	WriteString
 000010BE  5A		     1		pop	edx
 000010BF  B8 00000FA0		    MOV EAX, 4000
 000010C4  81 05 00001485 R	    ADD GenerateBalance, 500
	   000001F4
 000010CE  E8 00000000 E	    CALL delay
 000010D3  E9 000000B0		    JMP DoneWithdrawal

 000010D8			Withdraw700:
 000010D8  81 3D 00001465 R	    CMP StoredAmount, 700
	   000002BC
 000010E2  7C 6E		    JL InsufficientBalance
 000010E4  81 2D 00001465 R	    SUB StoredAmount, 700
	   000002BC
				    mWrite "			  Processing withdrawal of Rs. 700..."
 000025CA		     1		.data		
 000025CA 09 09 09 20 20     1		??0090 BYTE "			  Processing withdrawal of Rs. 700...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   52 73 2E 20 37
	   30 30 2E 2E 2E
	   00
 000010EE		     1		.code
 000010EE  52		     1		push	edx
 000010EF  BA 000025CA R     1		mov	edx,OFFSET ??0090
 000010F4  E8 00000000 E     1		call	WriteString
 000010F9  5A		     1		pop	edx
 000010FA  B8 00000FA0		    MOV EAX, 4000
 000010FF  81 05 00001485 R	    ADD GenerateBalance, 700
	   000002BC
 00001109  E8 00000000 E	    CALL delay
 0000110E  EB 78		    JMP DoneWithdrawal

 00001110			WithdrawOtherAmount:
 00001110  E8 00000000 E	    CALL CRLF
				    mWrite "			  Enter the Amount You want to Withdraw : "
 000025F3		     1		.data		
 000025F3 09 09 09 20 20     1		??0091 BYTE "			  Enter the Amount You want to Withdraw : ",0	
	   45 6E 74 65 72
	   20 74 68 65 20
	   41 6D 6F 75 6E
	   74 20 59 6F 75
	   20 77 61 6E 74
	   20 74 6F 20 57
	   69 74 68 64 72
	   61 77 20 3A 20
	   00
 00001115		     1		.code
 00001115  52		     1		push	edx
 00001116  BA 000025F3 R     1		mov	edx,OFFSET ??0091
 0000111B  E8 00000000 E     1		call	WriteString
 00001120  5A		     1		pop	edx
 00001121  E8 00000000 E	    CALL ReadInt
 00001126  39 05 00001465 R	    CMP StoredAmount, EAX
 0000112C  7C 24		    JL InsufficientBalance
 0000112E  29 05 00001465 R	    SUB StoredAmount, EAX
				    mWrite "			  Processing withdrawal of Enterened Amount..."
 00002621		     1		.data		
 00002621 09 09 09 20 20     1		??0092 BYTE "			  Processing withdrawal of Enterened Amount...",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 77 69 74 68
	   64 72 61 77 61
	   6C 20 6F 66 20
	   45 6E 74 65 72
	   65 6E 65 64 20
	   41 6D 6F 75 6E
	   74 2E 2E 2E 00
 00001134		     1		.code
 00001134  52		     1		push	edx
 00001135  BA 00002621 R     1		mov	edx,OFFSET ??0092
 0000113A  E8 00000000 E     1		call	WriteString
 0000113F  5A		     1		pop	edx
 00001140  01 05 00001485 R	    ADD GenerateBalance, EAX
 00001146  B8 00000FA0		    MOV EAX, 4000
 0000114B  E8 00000000 E	    CALL delay
 00001150  EB 36		    JMP DoneWithdrawal


 00001152			InsufficientBalance:
				    mWrite "			  Insufficient balance. Try another amount."
 00002653		     1		.data		
 00002653 09 09 09 20 20     1		??0093 BYTE "			  Insufficient balance. Try another amount.",0	
	   49 6E 73 75 66
	   66 69 63 69 65
	   6E 74 20 62 61
	   6C 61 6E 63 65
	   2E 20 54 72 79
	   20 61 6E 6F 74
	   68 65 72 20 61
	   6D 6F 75 6E 74
	   2E 00
 00001152		     1		.code
 00001152  52		     1		push	edx
 00001153  BA 00002653 R     1		mov	edx,OFFSET ??0093
 00001158  E8 00000000 E     1		call	WriteString
 0000115D  5A		     1		pop	edx
 0000115E  E8 00000000 E	    CALL CRLF
				    mWrite "			  "
 00002682		     1		.data		
 00002682 09 09 09 20 20     1		??0094 BYTE "			  ",0	
	   00
 00001163		     1		.code
 00001163  52		     1		push	edx
 00001164  BA 00002682 R     1		mov	edx,OFFSET ??0094
 00001169  E8 00000000 E     1		call	WriteString
 0000116E  5A		     1		pop	edx
 0000116F  E8 00000000 E	    CALL WAITMSG
 00001174  E8 00000000 E	    CALL CLRSCR
 00001179  E9 FFFFFDAB		    JMP WithdrawalCash

 0000117E			InvalidChoice:
 0000117E  E8 00000000 E	    CALL CLRSCR
 00001183  E9 FFFFFDA1		    JMP WithdrawalCash

 00001188			DoneWithdrawal:
 00001188  E8 00000000 E	    CALL CRLF
 0000118D  E8 00000000 E	    CALL CRLF 
				    mWrite "			  Remaining Balance : "      
 00002688		     1		.data		
 00002688 09 09 09 20 20     1		??0095 BYTE "			  Remaining Balance : ",0	
	   52 65 6D 61 69
	   6E 69 6E 67 20
	   42 61 6C 61 6E
	   63 65 20 3A 20
	   00
 00001192		     1		.code
 00001192  52		     1		push	edx
 00001193  BA 00002688 R     1		mov	edx,OFFSET ??0095
 00001198  E8 00000000 E     1		call	WriteString
 0000119D  5A		     1		pop	edx
 0000119E  A1 00001465 R	    MOV EAX, StoredAmount
 000011A3  E8 00000000 E	    CALL WriteDec
 000011A8  EB 00		    JMP EndWithdraw

 000011AA			EndWithdraw:
 000011AA  C3			    RET
 000011AB			WithdrawalCash ENDP

 000011AB			DepositCash PROC
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 000026A2		     1		.data		
 000026A2 2A 5F 20 2A 20     1		??0096 BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 000011AB		     1		.code
 000011AB  52		     1		push	edx
 000011AC  BA 000026A2 R     1		mov	edx,OFFSET ??0096
 000011B1  E8 00000000 E     1		call	WriteString
 000011B6  5A		     1		pop	edx
 000011B7  E8 00000000 E	    CALL CRLF
				    mWrite "			  Account Number: "
 00002714		     1		.data		
 00002714 09 09 09 20 20     1		??0097 BYTE "			  Account Number: ",0	
	   41 63 63 6F 75
	   6E 74 20 4E 75
	   6D 62 65 72 3A
	   20 00
 000011BC		     1		.code
 000011BC  52		     1		push	edx
 000011BD  BA 00002714 R     1		mov	edx,OFFSET ??0097
 000011C2  E8 00000000 E     1		call	WriteString
 000011C7  5A		     1		pop	edx
 000011C8  BA 00001415 R	    MOV EDX, OFFSET StoredAccountID
 000011CD  E8 00000000 E	    CALL WriteString
 000011D2  E8 00000000 E	    CALL CRLF
 000011D7  E8 00000000 E	    CALL CRLF
				    mWrite "			  Current Balance: "
 0000272A		     1		.data		
 0000272A 09 09 09 20 20     1		??0098 BYTE "			  Current Balance: ",0	
	   43 75 72 72 65
	   6E 74 20 42 61
	   6C 61 6E 63 65
	   3A 20 00
 000011DC		     1		.code
 000011DC  52		     1		push	edx
 000011DD  BA 0000272A R     1		mov	edx,OFFSET ??0098
 000011E2  E8 00000000 E     1		call	WriteString
 000011E7  5A		     1		pop	edx
 000011E8  A1 00001465 R	    MOV EAX, StoredAmount
 000011ED  E8 00000000 E	    CALL WriteDec
 000011F2  E8 00000000 E	    CALL CRLF
 000011F7  E8 00000000 E	    CALL CRLF
 000011FC  E8 00000000 E	    CALL CRLF

				    mWrite "			  Please put the amount in the Deposit box : Rs. "
 00002741		     1		.data		
 00002741 09 09 09 20 20     1		??0099 BYTE "			  Please put the amount in the Deposit box : Rs. ",0	
	   50 6C 65 61 73
	   65 20 70 75 74
	   20 74 68 65 20
	   61 6D 6F 75 6E
	   74 20 69 6E 20
	   74 68 65 20 44
	   65 70 6F 73 69
	   74 20 62 6F 78
	   20 3A 20 52 73
	   2E 20 00
 00001201		     1		.code
 00001201  52		     1		push	edx
 00001202  BA 00002741 R     1		mov	edx,OFFSET ??0099
 00001207  E8 00000000 E     1		call	WriteString
 0000120C  5A		     1		pop	edx
 0000120D  E8 00000000 E	    CALL ReadDec
 00001212  A3 0000147D R	    MOV depositAmount, EAX ; Assuming depositAmount is a variable to store the deposit amount

				    ; Check if deposit amount is invalid
 00001217  83 3D 0000147D R	    CMP depositAmount, 0
	   00
 0000121E  7E 55		    jle InvalidDepositAmount

				    mWrite "			  Processing deposit of Rs. "
 00002776		     1		.data		
 00002776 09 09 09 20 20     1		??009A BYTE "			  Processing deposit of Rs. ",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 64 65 70 6F
	   73 69 74 20 6F
	   66 20 52 73 2E
	   20 00
 00001220		     1		.code
 00001220  52		     1		push	edx
 00001221  BA 00002776 R     1		mov	edx,OFFSET ??009A
 00001226  E8 00000000 E     1		call	WriteString
 0000122B  5A		     1		pop	edx
 0000122C  A1 0000147D R	    MOV EAX, depositAmount
 00001231  E8 00000000 E	    CALL WriteDec
				    mWrite "..."
 00002796		     1		.data		
 00002796 2E 2E 2E 00	     1		??009B BYTE "...",0	
 00001236		     1		.code
 00001236  52		     1		push	edx
 00001237  BA 00002796 R     1		mov	edx,OFFSET ??009B
 0000123C  E8 00000000 E     1		call	WriteString
 00001241  5A		     1		pop	edx
				    
				    ; Process deposit
 00001242  01 05 00001465 R	    ADD StoredAmount, EAX ; Assuming StoredAmount is a variable representing the balance
 00001248  E8 00000000 E	    CALL CRLF
				    mWrite "			  Your New Balance is: "
 0000279A		     1		.data		
 0000279A 09 09 09 20 20     1		??009C BYTE "			  Your New Balance is: ",0	
	   59 6F 75 72 20
	   4E 65 77 20 42
	   61 6C 61 6E 63
	   65 20 69 73 3A
	   20 00
 0000124D		     1		.code
 0000124D  52		     1		push	edx
 0000124E  BA 0000279A R     1		mov	edx,OFFSET ??009C
 00001253  E8 00000000 E     1		call	WriteString
 00001258  5A		     1		pop	edx
 00001259  A1 00001465 R	    MOV EAX, StoredAmount
 0000125E  E8 00000000 E	    CALL WriteDec
				    mWrite " Rs"
 000027B5		     1		.data		
 000027B5 20 52 73 00	     1		??009D BYTE " Rs",0	
 00001263		     1		.code
 00001263  52		     1		push	edx
 00001264  BA 000027B5 R     1		mov	edx,OFFSET ??009D
 00001269  E8 00000000 E     1		call	WriteString
 0000126E  5A		     1		pop	edx
 0000126F  E8 00000000 E	    CALL CRLF

 00001274  C3			    RET

 00001275			InvalidDepositAmount:
				    mWrite "			  Invalid Deposit Amount. Please try again."
 000027B9		     1		.data		
 000027B9 09 09 09 20 20     1		??009E BYTE "			  Invalid Deposit Amount. Please try again.",0	
	   49 6E 76 61 6C
	   69 64 20 44 65
	   70 6F 73 69 74
	   20 41 6D 6F 75
	   6E 74 2E 20 50
	   6C 65 61 73 65
	   20 74 72 79 20
	   61 67 61 69 6E
	   2E 00
 00001275		     1		.code
 00001275  52		     1		push	edx
 00001276  BA 000027B9 R     1		mov	edx,OFFSET ??009E
 0000127B  E8 00000000 E     1		call	WriteString
 00001280  5A		     1		pop	edx
 00001281  E8 00000000 E	    CALL CRLF
				    mWrite "			  "
 000027E8		     1		.data		
 000027E8 09 09 09 20 20     1		??009F BYTE "			  ",0	
	   00
 00001286		     1		.code
 00001286  52		     1		push	edx
 00001287  BA 000027E8 R     1		mov	edx,OFFSET ??009F
 0000128C  E8 00000000 E     1		call	WriteString
 00001291  5A		     1		pop	edx
 00001292  E8 00000000 E	    CALL WAITMSG
 00001297  E8 00000000 E	    CALL CLRSCR
				    ; Jump back to get a valid deposit amount
 0000129C  E9 FFFFFF0A		    JMP DepositCash
				    
 000012A1  C3			    RET
 000012A2			DepositCash ENDP

 000012A2			TransferAmount PROC
				    ; Display account information
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 000027EE		     1		.data		
 000027EE 2A 5F 20 2A 20     1		??00A0 BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 000012A2		     1		.code
 000012A2  52		     1		push	edx
 000012A3  BA 000027EE R     1		mov	edx,OFFSET ??00A0
 000012A8  E8 00000000 E     1		call	WriteString
 000012AD  5A		     1		pop	edx
 000012AE  E8 00000000 E	    CALL CRLF
				    mWrite "			  Account Number: "
 00002860		     1		.data		
 00002860 09 09 09 20 20     1		??00A1 BYTE "			  Account Number: ",0	
	   41 63 63 6F 75
	   6E 74 20 4E 75
	   6D 62 65 72 3A
	   20 00
 000012B3		     1		.code
 000012B3  52		     1		push	edx
 000012B4  BA 00002860 R     1		mov	edx,OFFSET ??00A1
 000012B9  E8 00000000 E     1		call	WriteString
 000012BE  5A		     1		pop	edx
 000012BF  BA 00001415 R	    mov EDX, OFFSET StoredAccountID
 000012C4  E8 00000000 E	    CALL WriteString
 000012C9  E8 00000000 E	    CALL CRLF
 000012CE  E8 00000000 E	    CALL CRLF
				    mWrite "			  Current Balance: "
 00002876		     1		.data		
 00002876 09 09 09 20 20     1		??00A2 BYTE "			  Current Balance: ",0	
	   43 75 72 72 65
	   6E 74 20 42 61
	   6C 61 6E 63 65
	   3A 20 00
 000012D3		     1		.code
 000012D3  52		     1		push	edx
 000012D4  BA 00002876 R     1		mov	edx,OFFSET ??00A2
 000012D9  E8 00000000 E     1		call	WriteString
 000012DE  5A		     1		pop	edx
 000012DF  A1 00001465 R	    mov EAX, StoredAmount
 000012E4  E8 00000000 E	    CALL WriteDec
 000012E9  E8 00000000 E	    CALL CRLF
 000012EE  E8 00000000 E	    CALL CRLF
 000012F3  E8 00000000 E	    CALL CRLF

				    ; Prompt for account number
				    mWrite "			  Please Enter the Account Number you want to Send Money (11 Digits): "
 0000288D		     1		.data		
 0000288D 09 09 09 20 20     1		??00A3 BYTE "			  Please Enter the Account Number you want to Send Money (11 Digits): ",0	
	   50 6C 65 61 73
	   65 20 45 6E 74
	   65 72 20 74 68
	   65 20 41 63 63
	   6F 75 6E 74 20
	   4E 75 6D 62 65
	   72 20 79 6F 75
	   20 77 61 6E 74
	   20 74 6F 20 53
	   65 6E 64 20 4D
	   6F 6E 65 79 20
	   28 31 31 20 44
	   69 67 69 74 73
	   29 3A 20 00
 000012F8		     1		.code
 000012F8  52		     1		push	edx
 000012F9  BA 0000288D R     1		mov	edx,OFFSET ??00A3
 000012FE  E8 00000000 E     1		call	WriteString
 00001303  5A		     1		pop	edx
 00001304  E8 00000000 E	    CALL ReadDec

				    ; Loop for entering a valid transfer amount
 00001309			EnterTransferAmount:
				    ; Prompt for transfer amount
				    mWrite "			  Please Enter the Transaction Amount: Rs. "
 000028D7		     1		.data		
 000028D7 09 09 09 20 20     1		??00A4 BYTE "			  Please Enter the Transaction Amount: Rs. ",0	
	   50 6C 65 61 73
	   65 20 45 6E 74
	   65 72 20 74 68
	   65 20 54 72 61
	   6E 73 61 63 74
	   69 6F 6E 20 41
	   6D 6F 75 6E 74
	   3A 20 52 73 2E
	   20 00
 00001309		     1		.code
 00001309  52		     1		push	edx
 0000130A  BA 000028D7 R     1		mov	edx,OFFSET ??00A4
 0000130F  E8 00000000 E     1		call	WriteString
 00001314  5A		     1		pop	edx
 00001315  E8 00000000 E	    CALL ReadDec
 0000131A  A3 00001481 R	    mov TransferMoney, EAX
 0000131F  01 05 00001485 R	    ADD GenerateBalance, EAX

				    ; Check for invalid transfer amount
 00001325  83 F8 00		    CMP EAX, 0
 00001328  7E 63		    jle InvalidTransferAmount
 0000132A  3B 05 00001465 R	    CMP EAX, StoredAmount
 00001330  7F 5B		    jg InvalidTransferAmount

				    ; Process the transaction
				    mWrite "			  Processing Transaction of Rs. "
 00002906		     1		.data		
 00002906 09 09 09 20 20     1		??00A5 BYTE "			  Processing Transaction of Rs. ",0	
	   50 72 6F 63 65
	   73 73 69 6E 67
	   20 54 72 61 6E
	   73 61 63 74 69
	   6F 6E 20 6F 66
	   20 52 73 2E 20
	   00
 00001332		     1		.code
 00001332  52		     1		push	edx
 00001333  BA 00002906 R     1		mov	edx,OFFSET ??00A5
 00001338  E8 00000000 E     1		call	WriteString
 0000133D  5A		     1		pop	edx
 0000133E  A1 00001481 R	    mov EAX, TransferMoney
 00001343  E8 00000000 E	    CALL WriteDec
				    mWrite "..."
 0000292A		     1		.data		
 0000292A 2E 2E 2E 00	     1		??00A6 BYTE "...",0	
 00001348		     1		.code
 00001348  52		     1		push	edx
 00001349  BA 0000292A R     1		mov	edx,OFFSET ??00A6
 0000134E  E8 00000000 E     1		call	WriteString
 00001353  5A		     1		pop	edx
 00001354  29 05 00001465 R	    SUB StoredAmount, EAX
 0000135A  E8 00000000 E	    CALL CRLF
 0000135F  E8 00000000 E	    CALL CRLF
				    ; Display new balance
				    mWrite "			  Your New Balance is: "
 0000292E		     1		.data		
 0000292E 09 09 09 20 20     1		??00A7 BYTE "			  Your New Balance is: ",0	
	   59 6F 75 72 20
	   4E 65 77 20 42
	   61 6C 61 6E 63
	   65 20 69 73 3A
	   20 00
 00001364		     1		.code
 00001364  52		     1		push	edx
 00001365  BA 0000292E R     1		mov	edx,OFFSET ??00A7
 0000136A  E8 00000000 E     1		call	WriteString
 0000136F  5A		     1		pop	edx
 00001370  A1 00001465 R	    mov EAX, StoredAmount
 00001375  E8 00000000 E	    CALL WriteDec
				    mWrite " Rs"
 00002949		     1		.data		
 00002949 20 52 73 00	     1		??00A8 BYTE " Rs",0	
 0000137A		     1		.code
 0000137A  52		     1		push	edx
 0000137B  BA 00002949 R     1		mov	edx,OFFSET ??00A8
 00001380  E8 00000000 E     1		call	WriteString
 00001385  5A		     1		pop	edx
 00001386  E8 00000000 E	    CALL CRLF
 0000138B  EB 2C		    JMP EndTransferAmount

 0000138D			InvalidTransferAmount:
				    ; Display error message for invalid transfer amount
				    mWrite "			  Invalid Transfer Amount. Please try again."
 0000294D		     1		.data		
 0000294D 09 09 09 20 20     1		??00A9 BYTE "			  Invalid Transfer Amount. Please try again.",0	
	   49 6E 76 61 6C
	   69 64 20 54 72
	   61 6E 73 66 65
	   72 20 41 6D 6F
	   75 6E 74 2E 20
	   50 6C 65 61 73
	   65 20 74 72 79
	   20 61 67 61 69
	   6E 2E 00
 0000138D		     1		.code
 0000138D  52		     1		push	edx
 0000138E  BA 0000294D R     1		mov	edx,OFFSET ??00A9
 00001393  E8 00000000 E     1		call	WriteString
 00001398  5A		     1		pop	edx
 00001399  E8 00000000 E	    CALL CRLF
				    mWrite "			  "
 0000297D		     1		.data		
 0000297D 09 09 09 20 20     1		??00AA BYTE "			  ",0	
	   00
 0000139E		     1		.code
 0000139E  52		     1		push	edx
 0000139F  BA 0000297D R     1		mov	edx,OFFSET ??00AA
 000013A4  E8 00000000 E     1		call	WriteString
 000013A9  5A		     1		pop	edx
 000013AA  E8 00000000 E	    CALL WAITMSG
 000013AF  E8 00000000 E	    CALL CLRSCR
 000013B4  E9 FFFFFF50		    JMP EnterTransferAmount

 000013B9			EndTransferAmount:
 000013B9  C3			    RET
 000013BA			TransferAmount ENDP

 000013BA			AccountINFO PROC
				    ; Display account information
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00002983		     1		.data		
 00002983 2A 5F 20 2A 20     1		??00AB BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 000013BA		     1		.code
 000013BA  52		     1		push	edx
 000013BB  BA 00002983 R     1		mov	edx,OFFSET ??00AB
 000013C0  E8 00000000 E     1		call	WriteString
 000013C5  5A		     1		pop	edx
 000013C6  E8 00000000 E	    CALL CRLF
 000013CB  E8 00000000 E	    CALL CRLF
				    mWrite "			  Account Number:                 "
 000029F5		     1		.data		
 000029F5 09 09 09 20 20     1		??00AC BYTE "			  Account Number:                 ",0	
	   41 63 63 6F 75
	   6E 74 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000013D0		     1		.code
 000013D0  52		     1		push	edx
 000013D1  BA 000029F5 R     1		mov	edx,OFFSET ??00AC
 000013D6  E8 00000000 E     1		call	WriteString
 000013DB  5A		     1		pop	edx
 000013DC  BA 00001415 R	    mov EDX, OFFSET StoredAccountID
 000013E1  E8 00000000 E	    CALL WriteString
 000013E6  E8 00000000 E	    CALL CRLF
				    mWrite "			  Holder Name:                    "
 00002A1B		     1		.data		
 00002A1B 09 09 09 20 20     1		??00AD BYTE "			  Holder Name:                    ",0	
	   48 6F 6C 64 65
	   72 20 4E 61 6D
	   65 3A 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000013EB		     1		.code
 000013EB  52		     1		push	edx
 000013EC  BA 00002A1B R     1		mov	edx,OFFSET ??00AD
 000013F1  E8 00000000 E     1		call	WriteString
 000013F6  5A		     1		pop	edx
 000013F7  BA 00001426 R	    mov EDX, OFFSET StoredHolderName
 000013FC  E8 00000000 E	    CALL WriteString
 00001401  E8 00000000 E	    CALL CRLF
				    mWrite "			  Current Balance:                "
 00002A41		     1		.data		
 00002A41 09 09 09 20 20     1		??00AE BYTE "			  Current Balance:                ",0	
	   43 75 72 72 65
	   6E 74 20 42 61
	   6C 61 6E 63 65
	   3A 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00001406		     1		.code
 00001406  52		     1		push	edx
 00001407  BA 00002A41 R     1		mov	edx,OFFSET ??00AE
 0000140C  E8 00000000 E     1		call	WriteString
 00001411  5A		     1		pop	edx
 00001412  A1 00001465 R	    mov EAX, StoredAmount
 00001417  E8 00000000 E	    CALL WriteDec
 0000141C  E8 00000000 E	    CALL CRLF
				    mWrite "			  Personal Identification Number: "
 00002A67		     1		.data		
 00002A67 09 09 09 20 20     1		??00AF BYTE "			  Personal Identification Number: ",0	
	   50 65 72 73 6F
	   6E 61 6C 20 49
	   64 65 6E 74 69
	   66 69 63 61 74
	   69 6F 6E 20 4E
	   75 6D 62 65 72
	   3A 20 00
 00001421		     1		.code
 00001421  52		     1		push	edx
 00001422  BA 00002A67 R     1		mov	edx,OFFSET ??00AF
 00001427  E8 00000000 E     1		call	WriteString
 0000142C  5A		     1		pop	edx
 0000142D  BA 00001421 R	    mov EDX, OFFSET StoredPIN
 00001432  E8 00000000 E	    CALL WriteString
 00001437  E8 00000000 E	    CALL CRLF
				    mWrite "			  ID Card Number:                 "
 00002A8D		     1		.data		
 00002A8D 09 09 09 20 20     1		??00B0 BYTE "			  ID Card Number:                 ",0	
	   49 44 20 43 61
	   72 64 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 0000143C		     1		.code
 0000143C  52		     1		push	edx
 0000143D  BA 00002A8D R     1		mov	edx,OFFSET ??00B0
 00001442  E8 00000000 E     1		call	WriteString
 00001447  5A		     1		pop	edx
 00001448  BA 0000142B R	    mov EDX, OFFSET StoredCNIC
 0000144D  E8 00000000 E	    CALL WriteString
 00001452  E8 00000000 E	    CALL CRLF
				    mWrite "			  Contact Number:                 "
 00002AB3		     1		.data		
 00002AB3 09 09 09 20 20     1		??00B1 BYTE "			  Contact Number:                 ",0	
	   43 6F 6E 74 61
	   63 74 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00001457		     1		.code
 00001457  52		     1		push	edx
 00001458  BA 00002AB3 R     1		mov	edx,OFFSET ??00B1
 0000145D  E8 00000000 E     1		call	WriteString
 00001462  5A		     1		pop	edx
 00001463  BA 0000143B R	    mov EDX, OFFSET StoredNO
 00001468  E8 00000000 E	    CALL WriteString
 0000146D  E8 00000000 E	    CALL CRLF
				    mWrite "			  Address City:                   "
 00002AD9		     1		.data		
 00002AD9 09 09 09 20 20     1		??00B2 BYTE "			  Address City:                   ",0	
	   41 64 64 72 65
	   73 73 20 43 69
	   74 79 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00001472		     1		.code
 00001472  52		     1		push	edx
 00001473  BA 00002AD9 R     1		mov	edx,OFFSET ??00B2
 00001478  E8 00000000 E     1		call	WriteString
 0000147D  5A		     1		pop	edx
 0000147E  BA 00001448 R	    mov EDX, OFFSET StoredCity
 00001483  E8 00000000 E	    CALL WriteString
 00001488  E8 00000000 E	    CALL CRLF
				    mWrite "			  E-Mail Address:                 "
 00002AFF		     1		.data		
 00002AFF 09 09 09 20 20     1		??00B3 BYTE "			  E-Mail Address:                 ",0	
	   45 2D 4D 61 69
	   6C 20 41 64 64
	   72 65 73 73 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 0000148D		     1		.code
 0000148D  52		     1		push	edx
 0000148E  BA 00002AFF R     1		mov	edx,OFFSET ??00B3
 00001493  E8 00000000 E     1		call	WriteString
 00001498  5A		     1		pop	edx
 00001499  BA 00001452 R	    mov EDX, OFFSET StoredMail
 0000149E  E8 00000000 E	    CALL WriteString
 000014A3  E8 00000000 E	    CALL CRLF
				    mWrite "			  Gender:                         "
 00002B25		     1		.data		
 00002B25 09 09 09 20 20     1		??00B4 BYTE "			  Gender:                         ",0	
	   47 65 6E 64 65
	   72 3A 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000014A8		     1		.code
 000014A8  52		     1		push	edx
 000014A9  BA 00002B25 R     1		mov	edx,OFFSET ??00B4
 000014AE  E8 00000000 E     1		call	WriteString
 000014B3  5A		     1		pop	edx
 000014B4  BA 00001463 R	    mov EDX, OFFSET gender
 000014B9  E8 00000000 E	    CALL WriteString
				   
 000014BE  C3			    RET
 000014BF			AccountINFO ENDP

 000014BF			ChangeUserPIN PROC
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00002B4B		     1		.data		
 00002B4B 2A 5F 20 2A 20     1		??00B5 BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 000014BF		     1		.code
 000014BF  52		     1		push	edx
 000014C0  BA 00002B4B R     1		mov	edx,OFFSET ??00B5
 000014C5  E8 00000000 E     1		call	WriteString
 000014CA  5A		     1		pop	edx
 000014CB  E8 00000000 E	    CALL CRLF
 000014D0  E8 00000000 E	    CALL CRLF
				    mWrite "			  Enter New Personal Identification Number(PIN) :"
 00002BBD		     1		.data		
 00002BBD 09 09 09 20 20     1		??00B6 BYTE "			  Enter New Personal Identification Number(PIN) :",0	
	   45 6E 74 65 72
	   20 4E 65 77 20
	   50 65 72 73 6F
	   6E 61 6C 20 49
	   64 65 6E 74 69
	   66 69 63 61 74
	   69 6F 6E 20 4E
	   75 6D 62 65 72
	   28 50 49 4E 29
	   20 3A 00
 000014D5		     1		.code
 000014D5  52		     1		push	edx
 000014D6  BA 00002BBD R     1		mov	edx,OFFSET ??00B6
 000014DB  E8 00000000 E     1		call	WriteString
 000014E0  5A		     1		pop	edx
 000014E1  BA 00001421 R	    mov EDX,OFFSET StoredPIN ; point to the buffer
 000014E6  B9 00000005		    mov ECX,SIZEOF StoredPIN ; specify max characters
 000014EB  E8 00000000 E	    CALL ReadString ; input the string
 000014F0  E8 00000000 E	    CALL CRLF
 000014F5  E8 00000000 E	    CALL CRLF
				    mWrite "			  Personal Identification Number(PIN) Successfully changed to "
 00002BF2		     1		.data		
 00002BF2 09 09 09 20 20     1		??00B7 BYTE "			  Personal Identification Number(PIN) Successfully changed to ",0	
	   50 65 72 73 6F
	   6E 61 6C 20 49
	   64 65 6E 74 69
	   66 69 63 61 74
	   69 6F 6E 20 4E
	   75 6D 62 65 72
	   28 50 49 4E 29
	   20 53 75 63 63
	   65 73 73 66 75
	   6C 6C 79 20 63
	   68 61 6E 67 65
	   64 20 74 6F 20
	   00
 000014FA		     1		.code
 000014FA  52		     1		push	edx
 000014FB  BA 00002BF2 R     1		mov	edx,OFFSET ??00B7
 00001500  E8 00000000 E     1		call	WriteString
 00001505  5A		     1		pop	edx
 00001506  BA 00001421 R	    mov EDX,OFFSET StoredPIN
 0000150B  E8 00000000 E	    CALL WriteString

 00001510  C3			    RET
 00001511			ChangeUserPIN ENDP

 00001511			UpdateINFO PROC
				        mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00002C34		     1		.data		
 00002C34 2A 5F 20 2A 20     1		??00B8 BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Account Holder Information & Detail _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 20 49
	   6E 66 6F 72 6D
	   61 74 69 6F 6E
	   20 26 20 44 65
	   74 61 69 6C 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 2A 00
 00001511		     1		.code
 00001511  52		     1		push	edx
 00001512  BA 00002C34 R     1		mov	edx,OFFSET ??00B8
 00001517  E8 00000000 E     1		call	WriteString
 0000151C  5A		     1		pop	edx
 0000151D  E8 00000000 E	        CALL CRLF
 00001522  E8 00000000 E	        CALL CRLF
				        mWrite "			  Please select the Info you want to Change :"
 00002CA6		     1		.data		
 00002CA6 09 09 09 20 20     1		??00B9 BYTE "			  Please select the Info you want to Change :",0	
	   50 6C 65 61 73
	   65 20 73 65 6C
	   65 63 74 20 74
	   68 65 20 49 6E
	   66 6F 20 79 6F
	   75 20 77 61 6E
	   74 20 74 6F 20
	   43 68 61 6E 67
	   65 20 3A 00
 00001527		     1		.code
 00001527  52		     1		push	edx
 00001528  BA 00002CA6 R     1		mov	edx,OFFSET ??00B9
 0000152D  E8 00000000 E     1		call	WriteString
 00001532  5A		     1		pop	edx
 00001533  E8 00000000 E	        CALL CRLF
 00001538  E8 00000000 E	        CALL CRLF
				        mWrite "			  1. Your Name"        
 00002CD7		     1		.data		
 00002CD7 09 09 09 20 20     1		??00BA BYTE "			  1. Your Name",0	
	   31 2E 20 59 6F
	   75 72 20 4E 61
	   6D 65 00
 0000153D		     1		.code
 0000153D  52		     1		push	edx
 0000153E  BA 00002CD7 R     1		mov	edx,OFFSET ??00BA
 00001543  E8 00000000 E     1		call	WriteString
 00001548  5A		     1		pop	edx
 00001549  E8 00000000 E	        CALL CRLF
 0000154E  E8 00000000 E	        CALL CRLF
				        mWrite "			  2. Your Phone No. "     
 00002CE9		     1		.data		
 00002CE9 09 09 09 20 20     1		??00BB BYTE "			  2. Your Phone No. ",0	
	   32 2E 20 59 6F
	   75 72 20 50 68
	   6F 6E 65 20 4E
	   6F 2E 20 00
 00001553		     1		.code
 00001553  52		     1		push	edx
 00001554  BA 00002CE9 R     1		mov	edx,OFFSET ??00BB
 00001559  E8 00000000 E     1		call	WriteString
 0000155E  5A		     1		pop	edx
 0000155F  E8 00000000 E	        CALL CRLF
 00001564  E8 00000000 E	        CALL CRLF
				        mWrite "			  3. Your Address "  
 00002D01		     1		.data		
 00002D01 09 09 09 20 20     1		??00BC BYTE "			  3. Your Address ",0	
	   33 2E 20 59 6F
	   75 72 20 41 64
	   64 72 65 73 73
	   20 00
 00001569		     1		.code
 00001569  52		     1		push	edx
 0000156A  BA 00002D01 R     1		mov	edx,OFFSET ??00BC
 0000156F  E8 00000000 E     1		call	WriteString
 00001574  5A		     1		pop	edx
 00001575  E8 00000000 E	        CALL CRLF
 0000157A  E8 00000000 E	        CALL CRLF
				        mWrite "			  4. Your MAIL "  
 00002D17		     1		.data		
 00002D17 09 09 09 20 20     1		??00BD BYTE "			  4. Your MAIL ",0	
	   34 2E 20 59 6F
	   75 72 20 4D 41
	   49 4C 20 00
 0000157F		     1		.code
 0000157F  52		     1		push	edx
 00001580  BA 00002D17 R     1		mov	edx,OFFSET ??00BD
 00001585  E8 00000000 E     1		call	WriteString
 0000158A  5A		     1		pop	edx
 0000158B  E8 00000000 E	        CALL CRLF
 00001590  E8 00000000 E	        CALL CRLF
				        mWrite "			  5. Your Gender "  
 00002D2A		     1		.data		
 00002D2A 09 09 09 20 20     1		??00BE BYTE "			  5. Your Gender ",0	
	   35 2E 20 59 6F
	   75 72 20 47 65
	   6E 64 65 72 20
	   00
 00001595		     1		.code
 00001595  52		     1		push	edx
 00001596  BA 00002D2A R     1		mov	edx,OFFSET ??00BE
 0000159B  E8 00000000 E     1		call	WriteString
 000015A0  5A		     1		pop	edx
 000015A1  E8 00000000 E	        CALL CRLF
 000015A6  E8 00000000 E	        CALL CRLF

				        mWrite "			  Your choice: "
 00002D3F		     1		.data		
 00002D3F 09 09 09 20 20     1		??00BF BYTE "			  Your choice: ",0	
	   59 6F 75 72 20
	   63 68 6F 69 63
	   65 3A 20 00
 000015AB		     1		.code
 000015AB  52		     1		push	edx
 000015AC  BA 00002D3F R     1		mov	edx,OFFSET ??00BF
 000015B1  E8 00000000 E     1		call	WriteString
 000015B6  5A		     1		pop	edx
 000015B7  E8 00000000 E	        CALL ReadDec
 000015BC  EB 16		        JMP InfoJMP
 000015BE  E8 00000000 E	        CALL CRLF
				        mWrite "			  "
 00002D52		     1		.data		
 00002D52 09 09 09 20 20     1		??00C0 BYTE "			  ",0	
	   00
 000015C3		     1		.code
 000015C3  52		     1		push	edx
 000015C4  BA 00002D52 R     1		mov	edx,OFFSET ??00C0
 000015C9  E8 00000000 E     1		call	WriteString
 000015CE  5A		     1		pop	edx
 000015CF  E9 0000016E		        JMP ExitUpdation

 000015D4			InfoJMP:
 000015D4  83 F8 01		    CMP EAX, 1
 000015D7  74 25		    JE YourName
 000015D9  83 F8 02		    CMP EAX, 2
 000015DC  74 60		    JE YourPhoneNo
 000015DE  83 F8 03		    CMP EAX, 3
 000015E1  0F 84 00000097	    JE YourAddress
 000015E7  83 F8 04		    CMP EAX, 4
 000015EA  0F 84 000000CE	    JE YourMAIL
 000015F0  83 F8 05		    CMP EAX, 5
 000015F3  0F 84 00000102	    JE YourGender


 000015F9  E9 0000013A		    JMP InvalidChoice

 000015FE			YourName:
				     mWrite "			  Enter New User Name :"
 00002D58		     1		.data		
 00002D58 09 09 09 20 20     1		??00C1 BYTE "			  Enter New User Name :",0	
	   45 6E 74 65 72
	   20 4E 65 77 20
	   55 73 65 72 20
	   4E 61 6D 65 20
	   3A 00
 000015FE		     1		.code
 000015FE  52		     1		push	edx
 000015FF  BA 00002D58 R     1		mov	edx,OFFSET ??00C1
 00001604  E8 00000000 E     1		call	WriteString
 00001609  5A		     1		pop	edx
 0000160A  BA 00001426 R	    MOV EDX,OFFSET StoredHolderName ; point to the buffer
 0000160F  B9 00000005		    MOV ECX,SIZEOF StoredHolderName ; specify max characters
 00001614  E8 00000000 E	    CALL ReadString ; input the string
 00001619  E8 00000000 E	    CALL CRLF
 0000161E  E8 00000000 E	    CALL CRLF
				    mWrite "			  User Name changed to "
 00002D73		     1		.data		
 00002D73 09 09 09 20 20     1		??00C2 BYTE "			  User Name changed to ",0	
	   55 73 65 72 20
	   4E 61 6D 65 20
	   63 68 61 6E 67
	   65 64 20 74 6F
	   20 00
 00001623		     1		.code
 00001623  52		     1		push	edx
 00001624  BA 00002D73 R     1		mov	edx,OFFSET ??00C2
 00001629  E8 00000000 E     1		call	WriteString
 0000162E  5A		     1		pop	edx
 0000162F  BA 00001426 R	    MOV EDX,OFFSET StoredHolderName
 00001634  E8 00000000 E	    CALL WriteString
 00001639  E9 00000104		    JMP ExitUpdation

 0000163E			YourPhoneNo:
				     mWrite "			  Enter New Phone no :"
 00002D8E		     1		.data		
 00002D8E 09 09 09 20 20     1		??00C3 BYTE "			  Enter New Phone no :",0	
	   45 6E 74 65 72
	   20 4E 65 77 20
	   50 68 6F 6E 65
	   20 6E 6F 20 3A
	   00
 0000163E		     1		.code
 0000163E  52		     1		push	edx
 0000163F  BA 00002D8E R     1		mov	edx,OFFSET ??00C3
 00001644  E8 00000000 E     1		call	WriteString
 00001649  5A		     1		pop	edx
 0000164A  BA 0000143B R	    MOV EDX,OFFSET StoredNO ; point to the buffer
 0000164F  B9 0000000D		    MOV ECX,SIZEOF StoredNO ; specify max characters
 00001654  E8 00000000 E	    CALL ReadString ; input the string
 00001659  E8 00000000 E	    CALL CRLF
 0000165E  E8 00000000 E	    CALL CRLF
				    mWrite "			  Phone no Successfully changed to "
 00002DA8		     1		.data		
 00002DA8 09 09 09 20 20     1		??00C4 BYTE "			  Phone no Successfully changed to ",0	
	   50 68 6F 6E 65
	   20 6E 6F 20 53
	   75 63 63 65 73
	   73 66 75 6C 6C
	   79 20 63 68 61
	   6E 67 65 64 20
	   74 6F 20 00
 00001663		     1		.code
 00001663  52		     1		push	edx
 00001664  BA 00002DA8 R     1		mov	edx,OFFSET ??00C4
 00001669  E8 00000000 E     1		call	WriteString
 0000166E  5A		     1		pop	edx
 0000166F  BA 0000143B R	    MOV EDX,OFFSET StoredNO
 00001674  E8 00000000 E	    CALL WriteString
 00001679  E9 000000C4		    JMP ExitUpdation

 0000167E			YourAddress:
				     mWrite "			  Enter New Address :"
 00002DCF		     1		.data		
 00002DCF 09 09 09 20 20     1		??00C5 BYTE "			  Enter New Address :",0	
	   45 6E 74 65 72
	   20 4E 65 77 20
	   41 64 64 72 65
	   73 73 20 3A 00
 0000167E		     1		.code
 0000167E  52		     1		push	edx
 0000167F  BA 00002DCF R     1		mov	edx,OFFSET ??00C5
 00001684  E8 00000000 E     1		call	WriteString
 00001689  5A		     1		pop	edx
 0000168A  BA 00001448 R	    MOV EDX,OFFSET StoredCity ; point to the buffer
 0000168F  B9 0000000A		    MOV ECX,SIZEOF StoredCity ; specify max characters
 00001694  E8 00000000 E	    CALL ReadString ; input the string
 00001699  E8 00000000 E	    CALL CRLF
 0000169E  E8 00000000 E	    CALL CRLF
				    mWrite "			  Address Successfully changed to "
 00002DE8		     1		.data		
 00002DE8 09 09 09 20 20     1		??00C6 BYTE "			  Address Successfully changed to ",0	
	   41 64 64 72 65
	   73 73 20 53 75
	   63 63 65 73 73
	   66 75 6C 6C 79
	   20 63 68 61 6E
	   67 65 64 20 74
	   6F 20 00
 000016A3		     1		.code
 000016A3  52		     1		push	edx
 000016A4  BA 00002DE8 R     1		mov	edx,OFFSET ??00C6
 000016A9  E8 00000000 E     1		call	WriteString
 000016AE  5A		     1		pop	edx
 000016AF  BA 00001448 R	    MOV EDX,OFFSET StoredCity
 000016B4  E8 00000000 E	    CALL WriteString
 000016B9  E9 00000084		    JMP ExitUpdation

 000016BE			YourMAIL:
				     mWrite "			  Enter Your MAIL :"
 00002E0E		     1		.data		
 00002E0E 09 09 09 20 20     1		??00C7 BYTE "			  Enter Your MAIL :",0	
	   45 6E 74 65 72
	   20 59 6F 75 72
	   20 4D 41 49 4C
	   20 3A 00
 000016BE		     1		.code
 000016BE  52		     1		push	edx
 000016BF  BA 00002E0E R     1		mov	edx,OFFSET ??00C7
 000016C4  E8 00000000 E     1		call	WriteString
 000016C9  5A		     1		pop	edx
 000016CA  BA 00001452 R	    MOV EDX,OFFSET StoredMail ; point to the buffer
 000016CF  B9 00000011		    MOV ECX,SIZEOF StoredMail ; specify max characters
 000016D4  E8 00000000 E	    CALL ReadString ; input the string
 000016D9  E8 00000000 E	    CALL CRLF
 000016DE  E8 00000000 E	    CALL CRLF
				    mWrite "			  Your MAIL Successfully changed to "
 00002E25		     1		.data		
 00002E25 09 09 09 20 20     1		??00C8 BYTE "			  Your MAIL Successfully changed to ",0	
	   59 6F 75 72 20
	   4D 41 49 4C 20
	   53 75 63 63 65
	   73 73 66 75 6C
	   6C 79 20 63 68
	   61 6E 67 65 64
	   20 74 6F 20 00
 000016E3		     1		.code
 000016E3  52		     1		push	edx
 000016E4  BA 00002E25 R     1		mov	edx,OFFSET ??00C8
 000016E9  E8 00000000 E     1		call	WriteString
 000016EE  5A		     1		pop	edx
 000016EF  BA 00001452 R	    MOV EDX,OFFSET StoredMail
 000016F4  E8 00000000 E	    CALL WriteString
 000016F9  EB 47		    JMP ExitUpdation

 000016FB			YourGender:
				    mWrite "			  Enter Gender (F/M/O):"
 00002E4D		     1		.data		
 00002E4D 09 09 09 20 20     1		??00C9 BYTE "			  Enter Gender (F/M/O):",0	
	   45 6E 74 65 72
	   20 47 65 6E 64
	   65 72 20 28 46
	   2F 4D 2F 4F 29
	   3A 00
 000016FB		     1		.code
 000016FB  52		     1		push	edx
 000016FC  BA 00002E4D R     1		mov	edx,OFFSET ??00C9
 00001701  E8 00000000 E     1		call	WriteString
 00001706  5A		     1		pop	edx
 00001707  BA 00001463 R	    MOV EDX,OFFSET gender ; point to the buffer
 0000170C  B9 00000002		    MOV ECX,SIZEOF gender ; specify max characters
 00001711  E8 00000000 E	    CALL ReadString ; input the string
 00001716  E8 00000000 E	    CALL CRLF
 0000171B  E8 00000000 E	    CALL CRLF
				    mWrite "			  Gender Successfully changed to "
 00002E68		     1		.data		
 00002E68 09 09 09 20 20     1		??00CA BYTE "			  Gender Successfully changed to ",0	
	   47 65 6E 64 65
	   72 20 53 75 63
	   63 65 73 73 66
	   75 6C 6C 79 20
	   63 68 61 6E 67
	   65 64 20 74 6F
	   20 00
 00001720		     1		.code
 00001720  52		     1		push	edx
 00001721  BA 00002E68 R     1		mov	edx,OFFSET ??00CA
 00001726  E8 00000000 E     1		call	WriteString
 0000172B  5A		     1		pop	edx
 0000172C  BA 00001463 R	    MOV EDX,OFFSET gender
 00001731  E8 00000000 E	    CALL WriteString
 00001736  EB 0A		    JMP ExitUpdation

 00001738			InvalidChoice:
 00001738  E8 00000000 E	    CALL CLRSCR
 0000173D  E9 FFFFFDCF		    JMP UpdateINFO

 00001742			ExitUpdation:
 00001742  C3			    RET
 00001743			UpdateINFO ENDP

 00001743			GenerateTransactionReceipt PROC
				    mWrite "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Transaction Receipt _ * _ * _ * _ * _ * _ * _ * _ * _ * _*"
 00002E8D		     1		.data		
 00002E8D 2A 5F 20 2A 20     1		??00CB BYTE "*_ * _ * _ * _ * _ * _ * _ * _ * _ * _ Transaction Receipt _ * _ * _ * _ * _ * _ * _ * _ * _ * _*",0	
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 54
	   72 61 6E 73 61
	   63 74 69 6F 6E
	   20 52 65 63 65
	   69 70 74 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 20 2A 20 5F
	   20 2A 20 5F 20
	   2A 20 5F 20 2A
	   20 5F 20 2A 20
	   5F 2A 00
 00001743		     1		.code
 00001743  52		     1		push	edx
 00001744  BA 00002E8D R     1		mov	edx,OFFSET ??00CB
 00001749  E8 00000000 E     1		call	WriteString
 0000174E  5A		     1		pop	edx
 0000174F  E8 00000000 E	    CALL CRLF
 00001754  E8 00000000 E	    CALL CRLF

				    .if (GenerateBalance > 0)
 00001759  83 3D 00001485 R
	   00		   *	    cmp    GenerateBalance, 000h
 00001760  0F 86 000000BA  *	    jbe    @C0007
				            mWrite "			  Account Number:                 "
 00002EEF		     1		.data		
 00002EEF 09 09 09 20 20     1		??00CC BYTE "			  Account Number:                 ",0	
	   41 63 63 6F 75
	   6E 74 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00001766		     1		.code
 00001766  52		     1		push	edx
 00001767  BA 00002EEF R     1		mov	edx,OFFSET ??00CC
 0000176C  E8 00000000 E     1		call	WriteString
 00001771  5A		     1		pop	edx
 00001772  BA 00001415 R	            mov EDX, OFFSET StoredAccountID
 00001777  E8 00000000 E	            CALL WriteString
 0000177C  E8 00000000 E	            CALL CRLF
				            mWrite "			  Holder Name:                    "
 00002F15		     1		.data		
 00002F15 09 09 09 20 20     1		??00CD BYTE "			  Holder Name:                    ",0	
	   48 6F 6C 64 65
	   72 20 4E 61 6D
	   65 3A 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00001781		     1		.code
 00001781  52		     1		push	edx
 00001782  BA 00002F15 R     1		mov	edx,OFFSET ??00CD
 00001787  E8 00000000 E     1		call	WriteString
 0000178C  5A		     1		pop	edx
 0000178D  BA 00001426 R	            mov EDX, OFFSET StoredHolderName
 00001792  E8 00000000 E	            CALL WriteString
 00001797  E8 00000000 E	            CALL CRLF
				            mWrite "			  Remaining Balance:              "
 00002F3B		     1		.data		
 00002F3B 09 09 09 20 20     1		??00CE BYTE "			  Remaining Balance:              ",0	
	   52 65 6D 61 69
	   6E 69 6E 67 20
	   42 61 6C 61 6E
	   63 65 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 0000179C		     1		.code
 0000179C  52		     1		push	edx
 0000179D  BA 00002F3B R     1		mov	edx,OFFSET ??00CE
 000017A2  E8 00000000 E     1		call	WriteString
 000017A7  5A		     1		pop	edx
 000017A8  A1 00001465 R	            mov EAX, StoredAmount
 000017AD  E8 00000000 E	            CALL WriteDec
 000017B2  E8 00000000 E	            CALL CRLF
				             mWrite "			  Transaction of Rs :             "
 00002F61		     1		.data		
 00002F61 09 09 09 20 20     1		??00CF BYTE "			  Transaction of Rs :             ",0	
	   54 72 61 6E 73
	   61 63 74 69 6F
	   6E 20 6F 66 20
	   52 73 20 3A 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000017B7		     1		.code
 000017B7  52		     1		push	edx
 000017B8  BA 00002F61 R     1		mov	edx,OFFSET ??00CF
 000017BD  E8 00000000 E     1		call	WriteString
 000017C2  5A		     1		pop	edx
 000017C3  A1 00001485 R	            mov EAX, GenerateBalance
 000017C8  E8 00000000 E	            CALL WriteDec
 000017CD  E8 00000000 E	            CALL CRLF
				            mWrite "			  Contact Number:                 "
 00002F87		     1		.data		
 00002F87 09 09 09 20 20     1		??00D0 BYTE "			  Contact Number:                 ",0	
	   43 6F 6E 74 61
	   63 74 20 4E 75
	   6D 62 65 72 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000017D2		     1		.code
 000017D2  52		     1		push	edx
 000017D3  BA 00002F87 R     1		mov	edx,OFFSET ??00D0
 000017D8  E8 00000000 E     1		call	WriteString
 000017DD  5A		     1		pop	edx
 000017DE  BA 0000143B R	            mov EDX, OFFSET StoredNO
 000017E3  E8 00000000 E	            CALL WriteString
 000017E8  E8 00000000 E	            CALL CRLF
				            mWrite "			  Address City:                   "
 00002FAD		     1		.data		
 00002FAD 09 09 09 20 20     1		??00D1 BYTE "			  Address City:                   ",0	
	   41 64 64 72 65
	   73 73 20 43 69
	   74 79 3A 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000017ED		     1		.code
 000017ED  52		     1		push	edx
 000017EE  BA 00002FAD R     1		mov	edx,OFFSET ??00D1
 000017F3  E8 00000000 E     1		call	WriteString
 000017F8  5A		     1		pop	edx
 000017F9  BA 00001448 R	            mov EDX, OFFSET StoredCity
 000017FE  E8 00000000 E	            CALL WriteString
 00001803  E8 00000000 E	            CALL CRLF
				            mWrite "			  E-Mail Address:                 "
 00002FD3		     1		.data		
 00002FD3 09 09 09 20 20     1		??00D2 BYTE "			  E-Mail Address:                 ",0	
	   45 2D 4D 61 69
	   6C 20 41 64 64
	   72 65 73 73 3A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 00001808		     1		.code
 00001808  52		     1		push	edx
 00001809  BA 00002FD3 R     1		mov	edx,OFFSET ??00D2
 0000180E  E8 00000000 E     1		call	WriteString
 00001813  5A		     1		pop	edx
 00001814  BA 00001452 R	            mov EDX, OFFSET StoredMail
 00001819  E8 00000000 E	            CALL WriteString
				        .else 
 0000181E  EB 22	   *	    jmp    @C0009
 00001820		   *@C0007:
				            mWrite "			  Please Perform any Transaction to generate Receipt!!!"
 00002FF9		     1		.data		
 00002FF9 09 09 09 20 20     1		??00D3 BYTE "			  Please Perform any Transaction to generate Receipt!!!",0	
	   50 6C 65 61 73
	   65 20 50 65 72
	   66 6F 72 6D 20
	   61 6E 79 20 54
	   72 61 6E 73 61
	   63 74 69 6F 6E
	   20 74 6F 20 67
	   65 6E 65 72 61
	   74 65 20 52 65
	   63 65 69 70 74
	   21 21 21 00
 00001820		     1		.code
 00001820  52		     1		push	edx
 00001821  BA 00002FF9 R     1		mov	edx,OFFSET ??00D3
 00001826  E8 00000000 E     1		call	WriteString
 0000182B  5A		     1		pop	edx
 0000182C  E8 00000000 E	            CALL CRLF
				            mWrite "			  "
 00003034		     1		.data		
 00003034 09 09 09 20 20     1		??00D4 BYTE "			  ",0	
	   00
 00001831		     1		.code
 00001831  52		     1		push	edx
 00001832  BA 00003034 R     1		mov	edx,OFFSET ??00D4
 00001837  E8 00000000 E     1		call	WriteString
 0000183C  5A		     1		pop	edx
 0000183D  E8 00000000 E	            CALL WAITMSG
				    .endif
 00001842		   *@C0009:

 00001842  C3			    RET
 00001843			GenerateTransactionReceipt ENDP

 00001843			LoggedOut PROC
 00001843  E8 FFFFF265		    CALL HolderLoginFUNC
 00001848  C3			    RET
 00001849			LoggedOut ENDP


 00001849			main PROC				
				    INVOKE AddColor
 00001849  E8 FFFFE7B2	   *	    call   AddColor
				    INVOKE FrontPage
 0000184E  E8 FFFFE8E3	   *	    call   FrontPage
				    INVOKE Time
 00001853  E8 FFFFE7B8	   *	    call   Time
				    INVOKE Design
 00001858  E8 FFFFE84C	   *	    call   Design
					
				    mWrite "			  Please INSERT your Card [Press any Key to insert card]"
 0000303A		     1		.data		
 0000303A 09 09 09 20 20     1		??00D5 BYTE "			  Please INSERT your Card [Press any Key to insert card]",0	
	   50 6C 65 61 73
	   65 20 49 4E 53
	   45 52 54 20 79
	   6F 75 72 20 43
	   61 72 64 20 5B
	   50 72 65 73 73
	   20 61 6E 79 20
	   4B 65 79 20 74
	   6F 20 69 6E 73
	   65 72 74 20 63
	   61 72 64 5D 00
 0000185D		     1		.code
 0000185D  52		     1		push	edx
 0000185E  BA 0000303A R     1		mov	edx,OFFSET ??00D5
 00001863  E8 00000000 E     1		call	WriteString
 00001868  5A		     1		pop	edx
 00001869  E8 00000000 E		CALL CRLF
 0000186E  E8 00000000 E		CALL CRLF
					
					mWrite "		  	  "
 00003076		     1		.data		
 00003076 09 09 20 20 09     1		??00D6 BYTE "		  	  ",0	
	   20 20 00
 00001873		     1		.code
 00001873  52		     1		push	edx
 00001874  BA 00003076 R     1		mov	edx,OFFSET ??00D6
 00001879  E8 00000000 E     1		call	WriteString
 0000187E  5A		     1		pop	edx
 0000187F  E8 00000000 E		CALL WAITMSG
 00001884  E8 00000000 E		CALL CLRSCR

 00001889				try_again:
				    INVOKE Design
 00001889  E8 FFFFE81B	   *	    call   Design
 0000188E  E8 00000000 E		CALL CRLF
					mWrite "			  LOG IN:"
 0000307E		     1		.data		
 0000307E 09 09 09 20 20     1		??00D7 BYTE "			  LOG IN:",0	
	   4C 4F 47 20 49
	   4E 3A 00
 00001893		     1		.code
 00001893  52		     1		push	edx
 00001894  BA 0000307E R     1		mov	edx,OFFSET ??00D7
 00001899  E8 00000000 E     1		call	WriteString
 0000189E  5A		     1		pop	edx
 0000189F  E8 00000000 E		CALL CRLF
 000018A4  E8 00000000 E		CALL CRLF
					mWrite "			  [1] Administrator"
 0000308B		     1		.data		
 0000308B 09 09 09 20 20     1		??00D8 BYTE "			  [1] Administrator",0	
	   5B 31 5D 20 41
	   64 6D 69 6E 69
	   73 74 72 61 74
	   6F 72 00
 000018A9		     1		.code
 000018A9  52		     1		push	edx
 000018AA  BA 0000308B R     1		mov	edx,OFFSET ??00D8
 000018AF  E8 00000000 E     1		call	WriteString
 000018B4  5A		     1		pop	edx
 000018B5  E8 00000000 E		CALL CRLF
 000018BA  E8 00000000 E		CALL CRLF
					mWrite "			  [2] Account Holder"
 000030A2		     1		.data		
 000030A2 09 09 09 20 20     1		??00D9 BYTE "			  [2] Account Holder",0	
	   5B 32 5D 20 41
	   63 63 6F 75 6E
	   74 20 48 6F 6C
	   64 65 72 00
 000018BF		     1		.code
 000018BF  52		     1		push	edx
 000018C0  BA 000030A2 R     1		mov	edx,OFFSET ??00D9
 000018C5  E8 00000000 E     1		call	WriteString
 000018CA  5A		     1		pop	edx
 000018CB  E8 00000000 E		CALL CRLF
 000018D0  E8 00000000 E		CALL CRLF
					mWrite "			  [3] EXIT"
 000030BA		     1		.data		
 000030BA 09 09 09 20 20     1		??00DA BYTE "			  [3] EXIT",0	
	   5B 33 5D 20 45
	   58 49 54 00
 000018D5		     1		.code
 000018D5  52		     1		push	edx
 000018D6  BA 000030BA R     1		mov	edx,OFFSET ??00DA
 000018DB  E8 00000000 E     1		call	WriteString
 000018E0  5A		     1		pop	edx
 000018E1  E8 00000000 E		CALL CRLF
 000018E6  E8 00000000 E		CALL CRLF
					mWrite "			  [->] YOUR CHOICE : "
 000030C8		     1		.data		
 000030C8 09 09 09 20 20     1		??00DB BYTE "			  [->] YOUR CHOICE : ",0	
	   5B 2D 3E 5D 20
	   59 4F 55 52 20
	   43 48 4F 49 43
	   45 20 3A 20 00
 000018EB		     1		.code
 000018EB  52		     1		push	edx
 000018EC  BA 000030C8 R     1		mov	edx,OFFSET ??00DB
 000018F1  E8 00000000 E     1		call	WriteString
 000018F6  5A		     1		pop	edx
 000018F7  E8 00000000 E		CALL readint
 000018FC  A3 00000010 R		MOV choice, EAX

 00001901  83 3D 00000010 R	    CMP choice, 1
	   01
 00001908  74 52		    JE case_1
 0000190A  83 3D 00000010 R	    CMP choice, 2
	   02
 00001911  74 50		    JE case_2
 00001913  83 3D 00000010 R	    CMP choice, 3
	   03
 0000191A  74 53		    JE case_3
				   
 0000191C  E8 00000000 E	    CALL CRLF
				    mWrite "			  Invalid choice!"
 000030E1		     1		.data		
 000030E1 09 09 09 20 20     1		??00DC BYTE "			  Invalid choice!",0	
	   49 6E 76 61 6C
	   69 64 20 63 68
	   6F 69 63 65 21
	   00
 00001921		     1		.code
 00001921  52		     1		push	edx
 00001922  BA 000030E1 R     1		mov	edx,OFFSET ??00DC
 00001927  E8 00000000 E     1		call	WriteString
 0000192C  5A		     1		pop	edx
 0000192D  E8 00000000 E	    CALL CRLF

				    mWrite "			  Do you want to try again? (1 = Yes, 0 = No): "
 000030F6		     1		.data		
 000030F6 09 09 09 20 20     1		??00DD BYTE "			  Do you want to try again? (1 = Yes, 0 = No): ",0	
	   44 6F 20 79 6F
	   75 20 77 61 6E
	   74 20 74 6F 20
	   74 72 79 20 61
	   67 61 69 6E 3F
	   20 28 31 20 3D
	   20 59 65 73 2C
	   20 30 20 3D 20
	   4E 6F 29 3A 20
	   00
 00001932		     1		.code
 00001932  52		     1		push	edx
 00001933  BA 000030F6 R     1		mov	edx,OFFSET ??00DD
 00001938  E8 00000000 E     1		call	WriteString
 0000193D  5A		     1		pop	edx
 0000193E  E8 00000000 E	    CALL Readint
 00001943  A3 00000010 R	    MOV choice, EAX
 00001948  E8 00000000 E		CALL CLRSCR
 0000194D  83 3D 00000010 R	    CMP choice, 1
	   01
 00001954  0F 84 FFFFFF2F	    JE try_again  ; User wants to try again

 0000195A  EB 1A		    JMP end_it

 0000195C			case_1:
				    INVOKE AdminLoginFUNC
 0000195C  E8 FFFFE8D5	   *	    call   AdminLoginFUNC
 00001961  EB 13		    JMP end_it

 00001963			case_2:
 00001963  E8 00000000 E	    CALL CLRSCR
 00001968  E8 FFFFF140		    CALL HolderLoginFUNC
 0000196D  EB 07		    JMP end_it

 0000196F			case_3:
				    EXIT
 0000196F  6A 00	   *	    push   +000000000h
 00001971  E8 00000000 E   *	    call   ExitProcess

 00001976			end_it:

 00001976  E8 00000000 E		CALL CRLF
 0000197B  E8 00000000 E		CALL CRLF
				    INVOKE EXITPROCESS, 0
 00001980  6A 00	   *	    push   +000000000h
 00001982  E8 00000000 E   *	    call   ExitProcess
 00001987			main ENDP

				END MAIN
Microsoft (R) Macro Assembler Version 14.42.34433.0	    12/15/24 16:32:13
code.asm						     Symbols 2 - 1




Macros:

                N a m e                 Type

IsDefined  . . . . . . . . . . .	Func
Startup  . . . . . . . . . . . .	Proc
mDumpMem . . . . . . . . . . . .	Proc
mDump  . . . . . . . . . . . . .	Proc
mGotoxy  . . . . . . . . . . . .	Proc
mReadString  . . . . . . . . . .	Proc
mShowRegister  . . . . . . . . .	Proc
mShow  . . . . . . . . . . . . .	Proc
mWriteLn . . . . . . . . . . . .	Proc
mWriteSpace  . . . . . . . . . .	Proc
mWriteString . . . . . . . . . .	Proc
mWrite . . . . . . . . . . . . .	Proc


Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00003129 Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00001987 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

AccountINFO  . . . . . . . . . .	P Near	 000013BA _TEXT	Length= 00000105 Public STDCALL
AddColor . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000010 Public STDCALL
AdminLoginFUNC . . . . . . . . .	P Near	 00000236 _TEXT	Length= 00000148 Public STDCALL
  l1 . . . . . . . . . . . . . .	L Near	 00000236 _TEXT	
  s1 . . . . . . . . . . . . . .	L Near	 000002FD _TEXT	
  s2 . . . . . . . . . . . . . .	L Near	 00000351 _TEXT	
  end_it . . . . . . . . . . . .	L Near	 0000037D _TEXT	
AdminOperation . . . . . . . . .	P Near	 0000037E _TEXT	Length= 000003CA Public STDCALL
  Back . . . . . . . . . . . . .	L Near	 000003B9 _TEXT	
  AdmOP  . . . . . . . . . . . .	L Near	 00000466 _TEXT	
  SearchUserDetail . . . . . . .	L Near	 0000048B _TEXT	
  ATMINFO  . . . . . . . . . . .	L Near	 000005E5 _TEXT	
  StartAtm . . . . . . . . . . .	L Near	 0000069C _TEXT	
  TurnOFFtheSystem . . . . . . .	L Near	 000006EF _TEXT	
  InvalidChoice  . . . . . . . .	L Near	 00000738 _TEXT	
  ExitAdminOperation . . . . . .	L Near	 00000742 _TEXT	
ChangeUserPIN  . . . . . . . . .	P Near	 000014BF _TEXT	Length= 00000052 Public STDCALL
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DepositCash  . . . . . . . . . .	P Near	 000011AB _TEXT	Length= 000000F7 Public STDCALL
  InvalidDepositAmount . . . . .	L Near	 00001275 _TEXT	
Design . . . . . . . . . . . . .	P Near	 000000A9 _TEXT	Length= 0000008D Public STDCALL
  file_ok  . . . . . . . . . . .	L Near	 000000CB _TEXT	
  check_buffer_size  . . . . . .	L Near	 000000EF _TEXT	
  buf_size_ok  . . . . . . . . .	L Near	 00000104 _TEXT	
  close_file . . . . . . . . . .	L Near	 00000126 _TEXT	
  quit . . . . . . . . . . . . .	L Near	 00000130 _TEXT	
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FrontPage  . . . . . . . . . . .	P Near	 00000136 _TEXT	Length= 00000100 Public STDCALL
GenerateTransactionReceipt . . .	P Near	 00001743 _TEXT	Length= 00000100 Public STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HolderLoginFUNC  . . . . . . . .	P Near	 00000AAD _TEXT	Length= 00000148 Public STDCALL
  l1 . . . . . . . . . . . . . .	L Near	 00000AAD _TEXT	
  s1 . . . . . . . . . . . . . .	L Near	 00000B74 _TEXT	
  s2 . . . . . . . . . . . . . .	L Near	 00000BC8 _TEXT	
  end_it . . . . . . . . . . . .	L Near	 00000BF4 _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LoggedOut  . . . . . . . . . . .	P Near	 00001843 _TEXT	Length= 00000006 Public STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
QuickCash  . . . . . . . . . . .	P Near	 00000BF5 _TEXT	Length= 00000334 Public STDCALL
  FastCash . . . . . . . . . . .	L Near	 00000D31 _TEXT	
  Withdraw500  . . . . . . . . .	L Near	 00000D64 _TEXT	
  Withdraw1000 . . . . . . . . .	L Near	 00000DA3 _TEXT	
  Withdraw1500 . . . . . . . . .	L Near	 00000DE2 _TEXT	
  Withdraw2000 . . . . . . . . .	L Near	 00000E21 _TEXT	
  Withdraw2500 . . . . . . . . .	L Near	 00000E60 _TEXT	
  Withdraw3000 . . . . . . . . .	L Near	 00000E98 _TEXT	
  InsufficientBalance  . . . . .	L Near	 00000ED0 _TEXT	
  InvalidChoice  . . . . . . . .	L Near	 00000EFC _TEXT	
  DoneWithdrawal . . . . . . . .	L Near	 00000F06 _TEXT	
  EndQuickCash . . . . . . . . .	L Near	 00000F28 _TEXT	
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Time . . . . . . . . . . . . . .	P Near	 00000010 _TEXT	Length= 00000099 Public STDCALL
TransferAmount . . . . . . . . .	P Near	 000012A2 _TEXT	Length= 00000118 Public STDCALL
  EnterTransferAmount  . . . . .	L Near	 00001309 _TEXT	
  InvalidTransferAmount  . . . .	L Near	 0000138D _TEXT	
  EndTransferAmount  . . . . . .	L Near	 000013B9 _TEXT	
UpdateINFO . . . . . . . . . . .	P Near	 00001511 _TEXT	Length= 00000232 Public STDCALL
  InfoJMP  . . . . . . . . . . .	L Near	 000015D4 _TEXT	
  YourName . . . . . . . . . . .	L Near	 000015FE _TEXT	
  YourPhoneNo  . . . . . . . . .	L Near	 0000163E _TEXT	
  YourAddress  . . . . . . . . .	L Near	 0000167E _TEXT	
  YourMAIL . . . . . . . . . . .	L Near	 000016BE _TEXT	
  YourGender . . . . . . . . . .	L Near	 000016FB _TEXT	
  InvalidChoice  . . . . . . . .	L Near	 00001738 _TEXT	
  ExitUpdation . . . . . . . . .	L Near	 00001742 _TEXT	
UserOperations . . . . . . . . .	P Near	 00000748 _TEXT	Length= 00000365 Public STDCALL
  Back . . . . . . . . . . . . .	L Near	 00000779 _TEXT	
  FastCash . . . . . . . . . . .	L Near	 00000911 _TEXT	
  CashWithdrawal . . . . . . . .	L Near	 0000093B _TEXT	
  Deposit  . . . . . . . . . . .	L Near	 00000965 _TEXT	
  Transactions . . . . . . . . .	L Near	 0000098F _TEXT	
  AccountDetail  . . . . . . . .	L Near	 000009B9 _TEXT	
  ChangePIN  . . . . . . . . . .	L Near	 000009E3 _TEXT	
  UpdateAccountInfo  . . . . . .	L Near	 00000A0D _TEXT	
  GenerateReceipt  . . . . . . .	L Near	 00000A37 _TEXT	
  LogOut . . . . . . . . . . . .	L Near	 00000A61 _TEXT	
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WithdrawalCash . . . . . . . . .	P Near	 00000F29 _TEXT	Length= 00000282 Public STDCALL
  FastCash . . . . . . . . . . .	L Near	 00001039 _TEXT	
  Withdraw200  . . . . . . . . .	L Near	 0000105A _TEXT	
  Withdraw500  . . . . . . . . .	L Near	 00001099 _TEXT	
  Withdraw700  . . . . . . . . .	L Near	 000010D8 _TEXT	
  WithdrawOtherAmount  . . . . .	L Near	 00001110 _TEXT	
  InsufficientBalance  . . . . .	L Near	 00001152 _TEXT	
  InvalidChoice  . . . . . . . .	L Near	 0000117E _TEXT	
  DoneWithdrawal . . . . . . . .	L Near	 00001188 _TEXT	
  EndWithdraw  . . . . . . . . .	L Near	 000011AA _TEXT	
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00001849 _TEXT	Length= 0000013E Public STDCALL
  try_again  . . . . . . . . . .	L Near	 00001889 _TEXT	
  case_1 . . . . . . . . . . . .	L Near	 0000195C _TEXT	
  case_2 . . . . . . . . . . . .	L Near	 00001963 _TEXT	
  case_3 . . . . . . . . . . . .	L Near	 0000196F _TEXT	
  end_it . . . . . . . . . . . .	L Near	 00001976 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

??0000 . . . . . . . . . . . . .	Byte	 00001489 _DATA	
??0001 . . . . . . . . . . . . .	Byte	 0000148B _DATA	
??0002 . . . . . . . . . . . . .	Byte	 0000148D _DATA	
??0003 . . . . . . . . . . . . .	Byte	 000014D5 _DATA	
??0004 . . . . . . . . . . . . .	Byte	 000014D7 _DATA	
??0005 . . . . . . . . . . . . .	Byte	 000014D9 _DATA	
??0006 . . . . . . . . . . . . .	Byte	 000014EC _DATA	
??0007 . . . . . . . . . . . . .	Byte	 00001501 _DATA	
??0008 . . . . . . . . . . . . .	Byte	 00001528 _DATA	
??0009 . . . . . . . . . . . . .	Byte	 0000152D _DATA	
??000A . . . . . . . . . . . . .	Byte	 0000156A _DATA	
??000B . . . . . . . . . . . . .	Byte	 00001599 _DATA	
??000C . . . . . . . . . . . . .	Byte	 000015DE _DATA	
??000D . . . . . . . . . . . . .	Byte	 00001617 _DATA	
??000E . . . . . . . . . . . . .	Byte	 00001642 _DATA	
??000F . . . . . . . . . . . . .	Byte	 00001667 _DATA	
??0010 . . . . . . . . . . . . .	Byte	 0000169A _DATA	
??0011 . . . . . . . . . . . . .	Byte	 000016CC _DATA	
??0012 . . . . . . . . . . . . .	Byte	 00001703 _DATA	
??0013 . . . . . . . . . . . . .	Byte	 00001739 _DATA	
??0014 . . . . . . . . . . . . .	Byte	 0000177F _DATA	
??0015 . . . . . . . . . . . . .	Byte	 00001788 _DATA	
??0016 . . . . . . . . . . . . .	Byte	 000017A8 _DATA	
??0017 . . . . . . . . . . . . .	Byte	 000017B1 _DATA	
??0018 . . . . . . . . . . . . .	Byte	 000017C9 _DATA	
??0019 . . . . . . . . . . . . .	Byte	 000017D2 _DATA	
??001A . . . . . . . . . . . . .	Byte	 00001815 _DATA	
??001B . . . . . . . . . . . . .	Byte	 0000181E _DATA	
??001C . . . . . . . . . . . . .	Byte	 00001827 _DATA	
??001D . . . . . . . . . . . . .	Byte	 0000186B _DATA	
??001E . . . . . . . . . . . . .	Byte	 000018A2 _DATA	
??001F . . . . . . . . . . . . .	Byte	 000018AB _DATA	
??0020 . . . . . . . . . . . . .	Byte	 000018DE _DATA	
??0021 . . . . . . . . . . . . .	Byte	 000018FE _DATA	
??0022 . . . . . . . . . . . . .	Byte	 00001907 _DATA	
??0023 . . . . . . . . . . . . .	Byte	 0000196B _DATA	
??0024 . . . . . . . . . . . . .	Byte	 0000198E _DATA	
??0025 . . . . . . . . . . . . .	Byte	 000019AA _DATA	
??0026 . . . . . . . . . . . . .	Byte	 000019BC _DATA	
??0027 . . . . . . . . . . . . .	Byte	 000019CF _DATA	
??0028 . . . . . . . . . . . . .	Byte	 000019ED _DATA	
??0029 . . . . . . . . . . . . .	Byte	 00001A00 _DATA	
??002A . . . . . . . . . . . . .	Byte	 00001A06 _DATA	
??002B . . . . . . . . . . . . .	Byte	 00001A1E _DATA	
??002C . . . . . . . . . . . . .	Byte	 00001A6E _DATA	
??002D . . . . . . . . . . . . .	Byte	 00001AE0 _DATA	
??002E . . . . . . . . . . . . .	Byte	 00001B06 _DATA	
??002F . . . . . . . . . . . . .	Byte	 00001B2C _DATA	
??0030 . . . . . . . . . . . . .	Byte	 00001B52 _DATA	
??0031 . . . . . . . . . . . . .	Byte	 00001B78 _DATA	
??0032 . . . . . . . . . . . . .	Byte	 00001B9E _DATA	
??0033 . . . . . . . . . . . . .	Byte	 00001BC4 _DATA	
??0034 . . . . . . . . . . . . .	Byte	 00001BEA _DATA	
??0035 . . . . . . . . . . . . .	Byte	 00001C10 _DATA	
??0036 . . . . . . . . . . . . .	Byte	 00001C36 _DATA	
??0037 . . . . . . . . . . . . .	Byte	 00001C3C _DATA	
??0038 . . . . . . . . . . . . .	Byte	 00001C4E _DATA	
??0039 . . . . . . . . . . . . .	Byte	 00001C6D _DATA	
??003A . . . . . . . . . . . . .	Byte	 00001C8D _DATA	
??003B . . . . . . . . . . . . .	Byte	 00001CBC _DATA	
??003C . . . . . . . . . . . . .	Byte	 00001CD4 _DATA	
??003D . . . . . . . . . . . . .	Byte	 00001CF1 _DATA	
??003E . . . . . . . . . . . . .	Byte	 00001D0A _DATA	
??003F . . . . . . . . . . . . .	Byte	 00001D1D _DATA	
??0040 . . . . . . . . . . . . .	Byte	 00001D26 _DATA	
??0041 . . . . . . . . . . . . .	Byte	 00001D40 _DATA	
??0042 . . . . . . . . . . . . .	Byte	 00001D4E _DATA	
??0043 . . . . . . . . . . . . .	Byte	 00001D57 _DATA	
??0044 . . . . . . . . . . . . .	Byte	 00001D71 _DATA	
??0045 . . . . . . . . . . . . .	Byte	 00001D8C _DATA	
??0046 . . . . . . . . . . . . .	Byte	 00001D95 _DATA	
??0047 . . . . . . . . . . . . .	Byte	 00001DC2 _DATA	
??0048 . . . . . . . . . . . . .	Byte	 00001DCC _DATA	
??0049 . . . . . . . . . . . . .	Byte	 00001DE2 _DATA	
??004A . . . . . . . . . . . . .	Byte	 00001DFF _DATA	
??004B . . . . . . . . . . . . .	Byte	 00001E12 _DATA	
??004C . . . . . . . . . . . . .	Byte	 00001E2B _DATA	
??004D . . . . . . . . . . . . .	Byte	 00001E3C _DATA	
??004E . . . . . . . . . . . . .	Byte	 00001E53 _DATA	
??004F . . . . . . . . . . . . .	Byte	 00001E6B _DATA	
??0050 . . . . . . . . . . . . .	Byte	 00001E80 _DATA	
??0051 . . . . . . . . . . . . .	Byte	 00001E9E _DATA	
??0052 . . . . . . . . . . . . .	Byte	 00001EB8 _DATA	
??0053 . . . . . . . . . . . . .	Byte	 00001EC9 _DATA	
??0054 . . . . . . . . . . . . .	Byte	 00001EE2 _DATA	
??0055 . . . . . . . . . . . . .	Byte	 00001EFC _DATA	
??0056 . . . . . . . . . . . . .	Byte	 00001F02 _DATA	
??0057 . . . . . . . . . . . . .	Byte	 00001F08 _DATA	
??0058 . . . . . . . . . . . . .	Byte	 00001F0E _DATA	
??0059 . . . . . . . . . . . . .	Byte	 00001F14 _DATA	
??005A . . . . . . . . . . . . .	Byte	 00001F1A _DATA	
??005B . . . . . . . . . . . . .	Byte	 00001F20 _DATA	
??005C . . . . . . . . . . . . .	Byte	 00001F26 _DATA	
??005D . . . . . . . . . . . . .	Byte	 00001F2C _DATA	
??005E . . . . . . . . . . . . .	Byte	 00001F48 _DATA	
??005F . . . . . . . . . . . . .	Byte	 00001F68 _DATA	
??0060 . . . . . . . . . . . . .	Byte	 00001F6E _DATA	
??0061 . . . . . . . . . . . . .	Byte	 00001FB4 _DATA	
??0062 . . . . . . . . . . . . .	Byte	 00001FBD _DATA	
??0063 . . . . . . . . . . . . .	Byte	 00001FD5 _DATA	
??0064 . . . . . . . . . . . . .	Byte	 00001FDE _DATA	
??0065 . . . . . . . . . . . . .	Byte	 00001FF1 _DATA	
??0066 . . . . . . . . . . . . .	Byte	 00001FFA _DATA	
??0067 . . . . . . . . . . . . .	Byte	 00002049 _DATA	
??0068 . . . . . . . . . . . . .	Byte	 00002052 _DATA	
??0069 . . . . . . . . . . . . .	Byte	 0000205B _DATA	
??006A . . . . . . . . . . . . .	Byte	 000020AB _DATA	
??006B . . . . . . . . . . . . .	Byte	 000020E2 _DATA	
??006C . . . . . . . . . . . . .	Byte	 000020EB _DATA	
??006D . . . . . . . . . . . . .	Byte	 00002123 _DATA	
??006E . . . . . . . . . . . . .	Byte	 00002195 _DATA	
??006F . . . . . . . . . . . . .	Byte	 000021AB _DATA	
??0070 . . . . . . . . . . . . .	Byte	 000021C2 _DATA	
??0071 . . . . . . . . . . . . .	Byte	 000021EC _DATA	
??0072 . . . . . . . . . . . . .	Byte	 000021FC _DATA	
??0073 . . . . . . . . . . . . .	Byte	 0000220E _DATA	
??0074 . . . . . . . . . . . . .	Byte	 00002220 _DATA	
??0075 . . . . . . . . . . . . .	Byte	 00002232 _DATA	
??0076 . . . . . . . . . . . . .	Byte	 00002244 _DATA	
??0077 . . . . . . . . . . . . .	Byte	 00002256 _DATA	
??0078 . . . . . . . . . . . . .	Byte	 00002269 _DATA	
??0079 . . . . . . . . . . . . .	Byte	 000022B1 _DATA	
??007A . . . . . . . . . . . . .	Byte	 000022B7 _DATA	
??007B . . . . . . . . . . . . .	Byte	 000022E0 _DATA	
??007C . . . . . . . . . . . . .	Byte	 0000230A _DATA	
??007D . . . . . . . . . . . . .	Byte	 00002334 _DATA	
??007E . . . . . . . . . . . . .	Byte	 0000235E _DATA	
??007F . . . . . . . . . . . . .	Byte	 00002388 _DATA	
??0080 . . . . . . . . . . . . .	Byte	 000023B2 _DATA	
??0081 . . . . . . . . . . . . .	Byte	 000023E1 _DATA	
??0082 . . . . . . . . . . . . .	Byte	 000023E7 _DATA	
??0083 . . . . . . . . . . . . .	Byte	 00002401 _DATA	
??0084 . . . . . . . . . . . . .	Byte	 00002473 _DATA	
??0085 . . . . . . . . . . . . .	Byte	 00002489 _DATA	
??0086 . . . . . . . . . . . . .	Byte	 000024A0 _DATA	
??0087 . . . . . . . . . . . . .	Byte	 000024CA _DATA	
??0088 . . . . . . . . . . . . .	Byte	 000024DA _DATA	
??0089 . . . . . . . . . . . . .	Byte	 000024EB _DATA	
??008A . . . . . . . . . . . . .	Byte	 000024FC _DATA	
??008B . . . . . . . . . . . . .	Byte	 00002512 _DATA	
??008C . . . . . . . . . . . . .	Byte	 00002525 _DATA	
??008D . . . . . . . . . . . . .	Byte	 00002572 _DATA	
??008E . . . . . . . . . . . . .	Byte	 00002578 _DATA	
??008F . . . . . . . . . . . . .	Byte	 000025A1 _DATA	
??0090 . . . . . . . . . . . . .	Byte	 000025CA _DATA	
??0091 . . . . . . . . . . . . .	Byte	 000025F3 _DATA	
??0092 . . . . . . . . . . . . .	Byte	 00002621 _DATA	
??0093 . . . . . . . . . . . . .	Byte	 00002653 _DATA	
??0094 . . . . . . . . . . . . .	Byte	 00002682 _DATA	
??0095 . . . . . . . . . . . . .	Byte	 00002688 _DATA	
??0096 . . . . . . . . . . . . .	Byte	 000026A2 _DATA	
??0097 . . . . . . . . . . . . .	Byte	 00002714 _DATA	
??0098 . . . . . . . . . . . . .	Byte	 0000272A _DATA	
??0099 . . . . . . . . . . . . .	Byte	 00002741 _DATA	
??009A . . . . . . . . . . . . .	Byte	 00002776 _DATA	
??009B . . . . . . . . . . . . .	Byte	 00002796 _DATA	
??009C . . . . . . . . . . . . .	Byte	 0000279A _DATA	
??009D . . . . . . . . . . . . .	Byte	 000027B5 _DATA	
??009E . . . . . . . . . . . . .	Byte	 000027B9 _DATA	
??009F . . . . . . . . . . . . .	Byte	 000027E8 _DATA	
??00A0 . . . . . . . . . . . . .	Byte	 000027EE _DATA	
??00A1 . . . . . . . . . . . . .	Byte	 00002860 _DATA	
??00A2 . . . . . . . . . . . . .	Byte	 00002876 _DATA	
??00A3 . . . . . . . . . . . . .	Byte	 0000288D _DATA	
??00A4 . . . . . . . . . . . . .	Byte	 000028D7 _DATA	
??00A5 . . . . . . . . . . . . .	Byte	 00002906 _DATA	
??00A6 . . . . . . . . . . . . .	Byte	 0000292A _DATA	
??00A7 . . . . . . . . . . . . .	Byte	 0000292E _DATA	
??00A8 . . . . . . . . . . . . .	Byte	 00002949 _DATA	
??00A9 . . . . . . . . . . . . .	Byte	 0000294D _DATA	
??00AA . . . . . . . . . . . . .	Byte	 0000297D _DATA	
??00AB . . . . . . . . . . . . .	Byte	 00002983 _DATA	
??00AC . . . . . . . . . . . . .	Byte	 000029F5 _DATA	
??00AD . . . . . . . . . . . . .	Byte	 00002A1B _DATA	
??00AE . . . . . . . . . . . . .	Byte	 00002A41 _DATA	
??00AF . . . . . . . . . . . . .	Byte	 00002A67 _DATA	
??00B0 . . . . . . . . . . . . .	Byte	 00002A8D _DATA	
??00B1 . . . . . . . . . . . . .	Byte	 00002AB3 _DATA	
??00B2 . . . . . . . . . . . . .	Byte	 00002AD9 _DATA	
??00B3 . . . . . . . . . . . . .	Byte	 00002AFF _DATA	
??00B4 . . . . . . . . . . . . .	Byte	 00002B25 _DATA	
??00B5 . . . . . . . . . . . . .	Byte	 00002B4B _DATA	
??00B6 . . . . . . . . . . . . .	Byte	 00002BBD _DATA	
??00B7 . . . . . . . . . . . . .	Byte	 00002BF2 _DATA	
??00B8 . . . . . . . . . . . . .	Byte	 00002C34 _DATA	
??00B9 . . . . . . . . . . . . .	Byte	 00002CA6 _DATA	
??00BA . . . . . . . . . . . . .	Byte	 00002CD7 _DATA	
??00BB . . . . . . . . . . . . .	Byte	 00002CE9 _DATA	
??00BC . . . . . . . . . . . . .	Byte	 00002D01 _DATA	
??00BD . . . . . . . . . . . . .	Byte	 00002D17 _DATA	
??00BE . . . . . . . . . . . . .	Byte	 00002D2A _DATA	
??00BF . . . . . . . . . . . . .	Byte	 00002D3F _DATA	
??00C0 . . . . . . . . . . . . .	Byte	 00002D52 _DATA	
??00C1 . . . . . . . . . . . . .	Byte	 00002D58 _DATA	
??00C2 . . . . . . . . . . . . .	Byte	 00002D73 _DATA	
??00C3 . . . . . . . . . . . . .	Byte	 00002D8E _DATA	
??00C4 . . . . . . . . . . . . .	Byte	 00002DA8 _DATA	
??00C5 . . . . . . . . . . . . .	Byte	 00002DCF _DATA	
??00C6 . . . . . . . . . . . . .	Byte	 00002DE8 _DATA	
??00C7 . . . . . . . . . . . . .	Byte	 00002E0E _DATA	
??00C8 . . . . . . . . . . . . .	Byte	 00002E25 _DATA	
??00C9 . . . . . . . . . . . . .	Byte	 00002E4D _DATA	
??00CA . . . . . . . . . . . . .	Byte	 00002E68 _DATA	
??00CB . . . . . . . . . . . . .	Byte	 00002E8D _DATA	
??00CC . . . . . . . . . . . . .	Byte	 00002EEF _DATA	
??00CD . . . . . . . . . . . . .	Byte	 00002F15 _DATA	
??00CE . . . . . . . . . . . . .	Byte	 00002F3B _DATA	
??00CF . . . . . . . . . . . . .	Byte	 00002F61 _DATA	
??00D0 . . . . . . . . . . . . .	Byte	 00002F87 _DATA	
??00D1 . . . . . . . . . . . . .	Byte	 00002FAD _DATA	
??00D2 . . . . . . . . . . . . .	Byte	 00002FD3 _DATA	
??00D3 . . . . . . . . . . . . .	Byte	 00002FF9 _DATA	
??00D4 . . . . . . . . . . . . .	Byte	 00003034 _DATA	
??00D5 . . . . . . . . . . . . .	Byte	 0000303A _DATA	
??00D6 . . . . . . . . . . . . .	Byte	 00003076 _DATA	
??00D7 . . . . . . . . . . . . .	Byte	 0000307E _DATA	
??00D8 . . . . . . . . . . . . .	Byte	 0000308B _DATA	
??00D9 . . . . . . . . . . . . .	Byte	 000030A2 _DATA	
??00DA . . . . . . . . . . . . .	Byte	 000030BA _DATA	
??00DB . . . . . . . . . . . . .	Byte	 000030C8 _DATA	
??00DC . . . . . . . . . . . . .	Byte	 000030E1 _DATA	
??00DD . . . . . . . . . . . . .	Byte	 000030F6 _DATA	
@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
AdminLogChoice . . . . . . . . .	DWord	 000013E9 _DATA	
AdminPassword  . . . . . . . . .	Byte	 000013E4 _DATA	
AdminUser  . . . . . . . . . . .	Byte	 000013DE _DATA	
BUFFER_SIZE  . . . . . . . . . .	Number	 00001388h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GenerateBalance  . . . . . . . .	DWord	 00001485 _DATA	
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
HolderLogChoice  . . . . . . . .	DWord	 00001469 _DATA	
HolderPassword . . . . . . . . .	Byte	 000013ED _DATA	
HolderUsername . . . . . . . . .	Byte	 00001401 _DATA	
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
StoredAccountID  . . . . . . . .	Byte	 00001415 _DATA	
StoredAmount . . . . . . . . . .	DWord	 00001465 _DATA	
StoredCNIC . . . . . . . . . . .	Byte	 0000142B _DATA	
StoredCity . . . . . . . . . . .	Byte	 00001448 _DATA	
StoredHolderName . . . . . . . .	Byte	 00001426 _DATA	
StoredMail . . . . . . . . . . .	Byte	 00001452 _DATA	
StoredNO . . . . . . . . . . . .	Byte	 0000143B _DATA	
StoredPIN  . . . . . . . . . . .	Byte	 00001421 _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TransferMoney  . . . . . . . . .	DWord	 00001481 _DATA	
UserOption . . . . . . . . . . .	DWord	 00000018 _DATA	
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WhiteTextOnBlue  . . . . . . . .	Number	 000000E0h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
admin_choice . . . . . . . . . .	DWord	 00000014 _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
buffer . . . . . . . . . . . . .	Byte	 0000001C _DATA	
choice . . . . . . . . . . . . .	DWord	 00000010 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
depositAmount  . . . . . . . . .	DWord	 0000147D _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fcashChoice  . . . . . . . . . .	DWord	 00001471 _DATA	
fcash  . . . . . . . . . . . . .	DWord	 0000146D _DATA	
fileHandle . . . . . . . . . . .	DWord	 000013B2 _DATA	
filename . . . . . . . . . . . .	Byte	 000013A4 _DATA	
gender . . . . . . . . . . . . .	Byte	 00001463 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
localTime  . . . . . . . . . . .	SYSTEMTIME  00000000 _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
password . . . . . . . . . . . .	Byte	 000013B6 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
username . . . . . . . . . . . .	Byte	 000013CA _DATA	
wdcashChoice . . . . . . . . . .	DWord	 00001479 _DATA	
wdcash . . . . . . . . . . . . .	DWord	 00001475 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
